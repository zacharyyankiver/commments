{"version":3,"sources":["../src/Caption/Caption.tsx","../src/Text/Text.tsx","../src/Heading/Heading.tsx","../src/Subheading/Subheading.tsx","../src/Typography.tsx","../src/DisplayText/DisplayText.tsx","../src/SectionHeading/SectionHeading.tsx","../src/Paragraph/Paragraph.tsx"],"names":["React","tokens","css","cx","Box","TEXT_DEFAULT_TAG","truncatedStyle","wordBreakStyle","_Text","props","ref","_a","fontSize","fontStack","fontWeight","fontColor","lineHeight","letterSpacing","children","isTruncated","isWordBreak","as","className","margin","otherProps","__objRest","Element","__spreadProps","__spreadValues","Text","useDensity","CAPTION_DEFAULT_TAG","_Caption","_b","testId","density","Caption","HEADING_DEFAULT_TAG","_Heading","marginBottom","Heading","SUBHEADING_DEFAULT_TAG","_Subheading","Subheading","useEffect","Typography","DISPLAY_TEXT_DEFAULT_TAG","_DisplayText","size","DisplayText","SECTION_HEADING_DEFAULT_TAG","_SectionHeading","SectionHeading","Paragraph"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { FontWeightTokens } from '@contentful/f36-tokens';\nimport type {\n  PolymorphicComponent,\n  PolymorphicProps,\n  ExpandProps,\n} from '@contentful/f36-core';\nimport { Text, type TextProps } from '../Text';\nimport { useDensity } from '@contentful/f36-utils';\n\nconst CAPTION_DEFAULT_TAG = 'span';\n\nexport interface CaptionInternalProps extends Omit<TextProps, 'as'> {\n  children?: React.ReactNode;\n  fontWeight?: Extract<\n    FontWeightTokens,\n    'fontWeightNormal' | 'fontWeightMedium'\n  >;\n  isTruncated?: boolean;\n  isWordBreak?: boolean;\n}\n\nexport type CaptionProps<\n  E extends React.ElementType = typeof CAPTION_DEFAULT_TAG,\n> = PolymorphicProps<CaptionInternalProps, E>;\n\nfunction _Caption<E extends React.ElementType = typeof CAPTION_DEFAULT_TAG>(\n  {\n    children,\n    fontWeight = 'fontWeightNormal',\n    testId = 'cf-ui-caption',\n    as,\n    fontColor = 'gray900',\n    ...otherProps\n  }: CaptionProps<E>,\n  ref: React.Ref<any>,\n) {\n  const density = useDensity();\n  const Element: React.ElementType = as || CAPTION_DEFAULT_TAG;\n  return (\n    <Text\n      as={Element}\n      testId={testId}\n      fontSize={density === 'high' ? 'fontSizeSHigh' : 'fontSizeS'}\n      lineHeight={density === 'high' ? 'lineHeightSHigh' : 'lineHeightS'}\n      fontColor={fontColor}\n      fontWeight={fontWeight}\n      {...otherProps}\n      ref={ref}\n    >\n      {children}\n    </Text>\n  );\n}\n\n_Caption.displayName = 'Caption';\n\nexport const Caption: PolymorphicComponent<\n  ExpandProps<CaptionInternalProps>,\n  typeof CAPTION_DEFAULT_TAG\n> = React.forwardRef(_Caption);\n","import React from 'react';\nimport tokens, {\n  FontSizeTokens,\n  LineHeightTokens,\n  FontWeightTokens,\n  FontStackTokens,\n  ColorTokens,\n  LetterSpacingTokens,\n} from '@contentful/f36-tokens';\nimport { css, cx } from 'emotion';\nimport {\n  Box,\n  type PolymorphicComponent,\n  type CommonProps,\n  type MarginProps,\n  type PolymorphicProps,\n  type ExpandProps,\n} from '@contentful/f36-core';\n\nexport interface TextInternalProps extends CommonProps, MarginProps {\n  children?: React.ReactNode;\n  fontSize?: FontSizeTokens;\n  lineHeight?: LineHeightTokens;\n  letterSpacing?: LetterSpacingTokens;\n  fontStack?: FontStackTokens;\n  fontWeight?: FontWeightTokens;\n  fontColor?: ColorTokens;\n  isTruncated?: boolean;\n  isWordBreak?: boolean;\n}\n\nconst TEXT_DEFAULT_TAG = 'span';\n\nfunction truncatedStyle() {\n  return css({\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n    maxWidth: '100%',\n  });\n}\n\nfunction wordBreakStyle() {\n  return css({\n    wordBreak: 'break-word',\n  });\n}\n\nexport type TextProps<E extends React.ElementType = typeof TEXT_DEFAULT_TAG> =\n  PolymorphicProps<TextInternalProps, E, 'color'>;\n\nfunction _Text<E extends React.ElementType = typeof TEXT_DEFAULT_TAG>(\n  props: TextProps<E>,\n  ref: React.Ref<any>,\n) {\n  const {\n    fontSize = 'fontSizeM',\n    fontStack = 'fontStackPrimary',\n    fontWeight = 'fontWeightNormal',\n    fontColor = 'gray800',\n    lineHeight = 'lineHeightM',\n    letterSpacing = 'letterSpacingDefault',\n    children,\n    isTruncated,\n    isWordBreak,\n    as,\n    className,\n    margin = 'none',\n    ...otherProps\n  } = props;\n  const Element: React.ElementType = as || TEXT_DEFAULT_TAG;\n\n  return (\n    <Box\n      {...otherProps}\n      as={Element}\n      className={cx(\n        css({\n          padding: 0,\n          fontFamily: tokens[fontStack],\n          fontWeight: tokens[fontWeight],\n          color: tokens[fontColor],\n          fontSize: tokens[fontSize],\n          lineHeight: tokens[lineHeight],\n          letterSpacing: tokens[letterSpacing],\n        }),\n        isTruncated ? truncatedStyle() : null,\n        isWordBreak ? wordBreakStyle() : null,\n        className,\n      )}\n      margin={margin}\n      ref={ref}\n    >\n      {children}\n    </Box>\n  );\n}\n\n_Text.displayName = 'Text';\n\nexport const Text: PolymorphicComponent<\n  ExpandProps<TextInternalProps>,\n  typeof TEXT_DEFAULT_TAG,\n  'color'\n> = React.forwardRef(_Text);\n","import React from 'react';\nimport type {\n  PolymorphicComponent,\n  PolymorphicProps,\n  ExpandProps,\n} from '@contentful/f36-core';\nimport { Text, type TextProps } from '../Text';\nimport { useDensity } from '@contentful/f36-utils';\n\nconst HEADING_DEFAULT_TAG = 'h1';\n\nexport type HeadingElement = 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6';\n\nexport interface HeadingInternalProps extends Omit<TextProps, 'as'> {\n  as?: HeadingElement;\n  children?: React.ReactNode;\n  isTruncated?: boolean;\n  isWordBreak?: boolean;\n}\n\nexport type HeadingProps<\n  E extends React.ElementType = typeof HEADING_DEFAULT_TAG,\n> = PolymorphicProps<HeadingInternalProps, E>;\n\nfunction _Heading<E extends React.ElementType = typeof HEADING_DEFAULT_TAG>(\n  {\n    children,\n    testId = 'cf-ui-heading',\n    as,\n    fontColor = 'gray900',\n    marginBottom = 'spacingM',\n    ...otherProps\n  }: HeadingProps<E>,\n  ref: React.Ref<any>,\n) {\n  const density = useDensity();\n  const Element: React.ElementType = as || HEADING_DEFAULT_TAG;\n\n  return (\n    <Text\n      as={Element}\n      testId={testId}\n      marginBottom={marginBottom}\n      fontWeight=\"fontWeightDemiBold\"\n      fontColor={fontColor}\n      fontSize={density === 'high' ? 'fontSizeXlHigh' : 'fontSizeXl'}\n      lineHeight={density === 'high' ? 'lineHeightXlHigh' : 'lineHeightXl'}\n      {...otherProps}\n      ref={ref}\n    >\n      {children}\n    </Text>\n  );\n}\n\n_Heading.displayName = 'Heading';\n\nexport const Heading: PolymorphicComponent<\n  ExpandProps<HeadingInternalProps>,\n  typeof HEADING_DEFAULT_TAG\n> = React.forwardRef(_Heading);\n","import React from 'react';\nimport type {\n  PolymorphicComponent,\n  PolymorphicProps,\n  ExpandProps,\n} from '@contentful/f36-core';\nimport type { HeadingElement } from '../Heading';\nimport { Text, type TextProps } from '../Text';\nimport { useDensity } from '@contentful/f36-utils';\n\nconst SUBHEADING_DEFAULT_TAG = 'h3';\n\nexport interface SubheadingInternalProps extends Omit<TextProps, 'as'> {\n  children?: React.ReactNode;\n  as?: HeadingElement;\n  isTruncated?: boolean;\n  isWordBreak?: boolean;\n}\n\nexport type SubheadingProps<\n  E extends React.ElementType = typeof SUBHEADING_DEFAULT_TAG,\n> = PolymorphicProps<SubheadingInternalProps, E>;\n\nfunction _Subheading<\n  E extends React.ElementType = typeof SUBHEADING_DEFAULT_TAG,\n>(\n  {\n    children,\n    testId = 'cf-ui-subheading',\n    as,\n    fontColor = 'gray900',\n    ...otherProps\n  }: SubheadingProps<E>,\n  ref: React.Ref<any>,\n) {\n  const density = useDensity();\n  const Element: React.ElementType = as || SUBHEADING_DEFAULT_TAG;\n  return (\n    <Text\n      as={Element}\n      testId={testId}\n      marginBottom=\"spacingM\"\n      fontSize={density === 'high' ? 'fontSizeLHigh' : 'fontSizeL'}\n      lineHeight={density === 'high' ? 'lineHeightLHigh' : 'lineHeightL'}\n      fontWeight=\"fontWeightDemiBold\"\n      fontColor={fontColor}\n      {...otherProps}\n      ref={ref}\n    >\n      {children}\n    </Text>\n  );\n}\n\n_Subheading.displayName = 'Subheading';\n\nexport const Subheading: PolymorphicComponent<\n  ExpandProps<SubheadingInternalProps>,\n  typeof SUBHEADING_DEFAULT_TAG\n> = React.forwardRef(_Subheading);\n","import React, { useEffect } from 'react';\n\nexport interface TypographyProps {\n  children?: React.ReactNode;\n}\n\n/**\n * @deprecated\n */\nexport const Typography = (props: TypographyProps) => {\n  useEffect(() => {\n    // eslint-disable-next-line no-console -- allow this warning until we refactor\n    console.warn(\n      'Forma 36: Typography component is deprecated. You can safely remove it from your components.',\n    );\n  }, []);\n  return <>{props.children}</>;\n};\n\nTypography.displayName = 'Typography';\n","import React from 'react';\nimport { FontSizeTokens, LineHeightTokens } from '@contentful/f36-tokens';\nimport type {\n  PolymorphicComponent,\n  PolymorphicProps,\n  ExpandProps,\n} from '@contentful/f36-core';\nimport { Text, type TextProps } from '../Text';\nimport type { HeadingElement } from '../Heading';\n\nconst DISPLAY_TEXT_DEFAULT_TAG = 'h2';\n\nexport interface DisplayTextInternalProps extends Omit<TextProps, 'as'> {\n  children?: React.ReactNode;\n  size?: 'default' | 'large';\n  as?: HeadingElement;\n  isTruncated?: boolean;\n  isWordBreak?: boolean;\n}\n\nexport type DisplayTextProps<\n  E extends React.ElementType = typeof DISPLAY_TEXT_DEFAULT_TAG,\n> = PolymorphicProps<DisplayTextInternalProps, E>;\n\nfunction _DisplayText<\n  E extends React.ElementType = typeof DISPLAY_TEXT_DEFAULT_TAG,\n>(\n  {\n    children,\n    size = 'default',\n    testId = 'cf-ui-display-text',\n    as,\n    fontColor = 'gray900',\n    ...otherProps\n  }: DisplayTextProps<E>,\n  ref: React.Ref<any>,\n) {\n  let fontSize: FontSizeTokens = 'fontSize2Xl';\n  let lineHeight: LineHeightTokens = 'lineHeightXl';\n\n  if (size === 'large') {\n    fontSize = 'fontSize3Xl';\n    lineHeight = 'lineHeight3Xl';\n  }\n  const Element: React.ElementType = as || DISPLAY_TEXT_DEFAULT_TAG;\n\n  return (\n    <Text\n      as={Element}\n      testId={testId}\n      marginBottom={size === 'default' ? 'spacingL' : 'spacingXl'}\n      fontSize={fontSize}\n      lineHeight={lineHeight}\n      fontColor={fontColor}\n      fontWeight=\"fontWeightDemiBold\"\n      {...otherProps}\n      ref={ref}\n    >\n      {children}\n    </Text>\n  );\n}\n\n_DisplayText.displayName = 'DisplayText';\n\nexport const DisplayText: PolymorphicComponent<\n  ExpandProps<DisplayTextInternalProps>,\n  typeof DISPLAY_TEXT_DEFAULT_TAG\n> = React.forwardRef(_DisplayText);\n","import React from 'react';\nimport tokens from '@contentful/f36-tokens';\nimport { css, cx } from 'emotion';\nimport type {\n  PolymorphicComponent,\n  PolymorphicProps,\n  ExpandProps,\n} from '@contentful/f36-core';\nimport type { HeadingElement } from '../Heading';\nimport { Text, type TextProps } from '../Text';\nimport { useDensity } from '@contentful/f36-utils';\n\nconst SECTION_HEADING_DEFAULT_TAG = 'h2';\n\nexport interface SectionHeadingInternalProps extends Omit<TextProps, 'as'> {\n  children?: React.ReactNode;\n  as?: HeadingElement;\n  isTruncated?: boolean;\n  isWordBreak?: boolean;\n}\n\nexport type SectionHeadingProps<\n  E extends React.ElementType = typeof SECTION_HEADING_DEFAULT_TAG,\n> = PolymorphicProps<SectionHeadingInternalProps, E>;\n\nfunction _SectionHeading<\n  E extends React.ElementType = typeof SECTION_HEADING_DEFAULT_TAG,\n>(\n  {\n    children,\n    className,\n    testId = 'cf-ui-section-heading',\n    as,\n    fontColor = 'gray600',\n    marginBottom = 'spacingL',\n    ...otherProps\n  }: SectionHeadingProps<E>,\n  ref: React.Ref<HTMLHeadingElement>,\n) {\n  const density = useDensity();\n  const Element: React.ElementType = as || SECTION_HEADING_DEFAULT_TAG;\n\n  return (\n    <Text\n      as={Element}\n      testId={testId}\n      marginBottom={marginBottom}\n      fontWeight=\"fontWeightMedium\"\n      fontColor={fontColor}\n      fontSize={density === 'high' ? 'fontSizeSHigh' : 'fontSizeS'}\n      lineHeight={density === 'high' ? 'lineHeightSHigh' : 'lineHeightS'}\n      className={cx(\n        css({\n          letterSpacing: tokens.letterSpacingDefault,\n        }),\n        className,\n      )}\n      {...otherProps}\n      ref={ref}\n    >\n      {children}\n    </Text>\n  );\n}\n\n_SectionHeading.displayName = 'SectionHeading';\n\nexport const SectionHeading: PolymorphicComponent<\n  ExpandProps<SectionHeadingInternalProps>,\n  typeof SECTION_HEADING_DEFAULT_TAG\n> = React.forwardRef(_SectionHeading);\n","import React from 'react';\nimport type { PropsWithHTMLElement, ExpandProps } from '@contentful/f36-core';\nimport { Text, type TextProps } from '../Text';\nimport { useDensity } from '@contentful/f36-utils';\n\nexport type ParagraphInternalProps = TextProps & {\n  children: React.ReactNode;\n  isTruncated?: boolean;\n  isWordBreak?: boolean;\n};\n\nexport type ParagraphProps = PropsWithHTMLElement<ParagraphInternalProps, 'p'>;\n\nexport const Paragraph = React.forwardRef<\n  HTMLParagraphElement,\n  ExpandProps<ParagraphProps>\n>(\n  (\n    {\n      children,\n      testId = 'cf-ui-paragraph',\n      marginBottom = 'spacingM',\n      ...otherProps\n    },\n    ref,\n  ) => {\n    const density = useDensity();\n\n    return (\n      <Text\n        as=\"p\"\n        testId={testId}\n        fontSize={density === 'high' ? 'fontSizeMHigh' : 'fontSizeM'}\n        lineHeight={density === 'high' ? 'lineHeightMHigh' : 'lineHeightM'}\n        marginBottom={marginBottom}\n        {...otherProps}\n        ref={ref}\n      >\n        {children}\n      </Text>\n    );\n  },\n);\n\nParagraph.displayName = 'Paragraph';\n"]}