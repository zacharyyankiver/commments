import type { RawAxiosRequestHeaders } from 'axios';
import type { OptionalDefaults } from '../wrappers/wrap';
import type { BasicCursorPaginationOptions, CollectionProp, CursorPaginatedCollectionProp, GetResourceTypeParams, GetSpaceEnvironmentParams } from '../../common-types';
import type { ResourceTypeProps, UpsertResourceTypeProps } from '../../export-types';
import type { SpaceEnvResourceTypeProps } from '../../entities/resource-type';
export type ResourceTypePlainClientAPI = {
    get(params: OptionalDefaults<GetResourceTypeParams>): Promise<ResourceTypeProps>;
    upsert(params: OptionalDefaults<GetResourceTypeParams>, rawData: UpsertResourceTypeProps, headers?: RawAxiosRequestHeaders): Promise<ResourceTypeProps>;
    delete(params: OptionalDefaults<GetResourceTypeParams>): Promise<any>;
    getForEnvironment(params: OptionalDefaults<GetSpaceEnvironmentParams> & {
        query?: BasicCursorPaginationOptions;
    }): Promise<CursorPaginatedCollectionProp<SpaceEnvResourceTypeProps>>;
    getMany(params: OptionalDefaults<Omit<GetResourceTypeParams, 'resourceTypeId'>>): Promise<CollectionProp<ResourceTypeProps>>;
};
