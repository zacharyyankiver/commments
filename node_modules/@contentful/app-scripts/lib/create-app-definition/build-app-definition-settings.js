"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.buildAppDefinitionSettings = buildAppDefinitionSettings;
const chalk_1 = __importDefault(require("chalk"));
const inquirer_1 = __importDefault(require("inquirer"));
const node_path_1 = __importDefault(require("node:path"));
const constants_1 = require("../constants");
const build_app_parameter_settings_1 = require("./build-app-parameter-settings");
const location_prompts_1 = require("../location-prompts");
async function buildAppDefinitionSettings() {
    console.log(chalk_1.default.dim(`
NOTE: This will create an app definition in your Contentful organization.
      - Read more about app definitions: ${chalk_1.default.underline('https://ctfl.io/app-definitions')}
      - Read more about app locations: ${chalk_1.default.underline('https://ctfl.io/app-locations')}
  `));
    const appDefinitionSettings = await inquirer_1.default.prompt([
        {
            name: 'name',
            message: `App name (${node_path_1.default.basename(process.cwd())}):`,
        },
        { ...location_prompts_1.selectLocationsPrompt },
        { ...location_prompts_1.selectFieldsPrompt },
        { ...location_prompts_1.pageNavPrompt },
        { ...location_prompts_1.pageNavLinkNamePrompt },
        { ...location_prompts_1.pageNavLinkPathPrompt },
        {
            name: 'host',
            message: `Contentful CMA endpoint URL:`,
            default: constants_1.DEFAULT_CONTENTFUL_API_HOST,
        },
        {
            name: 'buildAppParameters',
            message: 'Would you like to specify App Parameter schemas? (see https://ctfl.io/app-parameters)',
            type: 'confirm',
            default: false,
        },
    ]);
    if (appDefinitionSettings.buildAppParameters) {
        appDefinitionSettings.parameters = await (0, build_app_parameter_settings_1.buildAppParameterSettings)();
    }
    appDefinitionSettings.locations = ['dialog', ...appDefinitionSettings.locations];
    return appDefinitionSettings;
}
