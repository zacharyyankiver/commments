import { GenerateFunctionSettingsInput } from '../types';
export declare function cloneFunction(localPath: string, settings: GenerateFunctionSettingsInput): Promise<void>;
export declare function getCloneURL(settings: GenerateFunctionSettingsInput): string;
export declare function touchupAppManifest(localPath: string, settings: GenerateFunctionSettingsInput, renameFunctionFile: string): Promise<void>;
export declare function moveFilesToFinalDirectory(localTmpPath: string, localFunctionsPath: string, localPath: string): void;
export declare function renameClonedFiles(localTmpPath: string, settings: GenerateFunctionSettingsInput): string;
export declare function resolvePaths(localPath: string): {
    localTmpPath: string;
    localFunctionsPath: string;
};
export declare function cloneAndResolveManifests(cloneURL: string, localTmpPath: string, localPath: string, localFunctionsPath: string, keepPackageJson?: boolean): Promise<void>;
export declare function clone(cloneURL: string, localFunctionsPath: string): Promise<any>;
export declare function mergeAppManifest(localPath: string, localTmpPath: string): Promise<void>;
export declare function updatePackageJsonWithBuild(localPath: string, localTmpPath: string): Promise<void>;
