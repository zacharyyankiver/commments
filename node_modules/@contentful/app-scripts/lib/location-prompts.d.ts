import { LocationsSettings } from './types';
export declare const selectLocationsPrompt: {
    name: string;
    message: string;
    type: string;
    choices: {
        name: string;
        value: string;
    }[];
};
export declare const selectFieldsPrompt: {
    name: string;
    message: string;
    type: string;
    choices: ({
        name: string;
        value: {
            type: string;
            items?: undefined;
            linkType?: undefined;
        };
    } | {
        name: string;
        value: {
            type: string;
            items: {
                type: string;
                linkType?: undefined;
            };
            linkType?: undefined;
        };
    } | {
        name: string;
        value: {
            type: string;
            linkType: string;
            items?: undefined;
        };
    } | {
        name: string;
        value: {
            type: string;
            items: {
                type: string;
                linkType: string;
            };
            linkType?: undefined;
        };
    })[];
    when(answers: LocationsSettings): boolean;
    validate(input: any): true | "You must choose at least one field type.";
};
export declare const pageNavPrompt: {
    name: string;
    message: string;
    type: string;
    default: boolean;
    when(answers: LocationsSettings): boolean;
};
export declare const pageNavLinkNamePrompt: {
    name: string;
    message: string;
    when(answers: LocationsSettings): boolean | undefined;
    validate(input: any): true | "Size must be at least 1 and at most 40";
};
export declare const pageNavLinkPathPrompt: {
    name: string;
    message: string;
    default: string;
    when(answers: LocationsSettings): boolean | undefined;
    validate(input: any): true | "Maximum 512 characters" | "Path cannot contain empty space" | "Path must start with /";
};
