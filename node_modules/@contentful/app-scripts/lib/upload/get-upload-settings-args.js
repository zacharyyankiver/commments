"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getUploadSettingsArgs = getUploadSettingsArgs;
const chalk_1 = __importDefault(require("chalk"));
const ora_1 = __importDefault(require("ora"));
const get_app_info_1 = require("../get-app-info");
const validate_arguments_1 = require("../validate-arguments");
const utils_1 = require("../utils");
const requiredOptions = {
    definitionId: '--definition-id',
    organizationId: '--organization-id',
    bundleDir: '--bundle-dir',
    token: '--token',
};
async function getUploadSettingsArgs(options) {
    const validateSpinner = (0, ora_1.default)('Validating your input...').start();
    const functionManifest = (0, utils_1.getFunctionsFromManifest)();
    const { bundleDir, comment, skipActivation, host, userAgentApplication } = options;
    try {
        (0, validate_arguments_1.validateArguments)(requiredOptions, options, 'upload');
        const appInfo = await (0, get_app_info_1.getAppInfo)(options);
        return {
            ...appInfo,
            bundleDirectory: bundleDir,
            skipActivation,
            comment,
            host,
            userAgentApplication,
            functions: functionManifest,
        };
    }
    catch (err) {
        console.log(`
      ${chalk_1.default.red('Validation failed!')}
      ${err.message}
    `);
        // eslint-disable-next-line no-process-exit
        process.exit(1);
    }
    finally {
        validateSpinner.stop();
    }
}
