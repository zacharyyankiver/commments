{"version":3,"sources":["../../src/Header.tsx","../../src/BackButton.tsx","../../src/Breadcrumb.tsx","../../src/Segmentation.tsx","../../src/Segmentation.styles.ts","../../src/Breadcrumb.styles.ts","../../src/Header.styles.ts","../../src/constants.ts"],"names":["React","forwardRef","isValidElement","cx","Flex","Subheading","IconButton","ArrowBackwardIcon","_BackButton","_a","ref","_b","onClick","ariaLabel","otherProps","__objRest","__spreadProps","__spreadValues","BackButton","Button","Box","Fragment","tokens","css","getSegmentationStyles","SEGMENTATION_DEFAULT_TAG","_Segmentation","forwardedRef","children","className","segments","SeparatorComponent","testId","styles","separator","mapSegments","segment","index","Segmentation","getBreadcrumbStyles","Breadcrumb","breadcrumbs","breadcrumb","handleBreadcrumbClick","HEADER_HEIGHT","getHeaderStyles","hasFilters","HEADER_DEFAULT_TAG","_Header","actions","as","backButtonProps","filters","metadata","title","withBackButton","Header"],"mappings":"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","sourcesContent":["import React, {\n  type ElementType,\n  forwardRef,\n  type Ref,\n  type ReactElement,\n  type ReactNode,\n  isValidElement,\n} from 'react';\nimport { cx } from 'emotion';\nimport {\n  Flex,\n  type ExpandProps,\n  type PolymorphicComponent,\n  type PolymorphicProps,\n} from '@contentful/f36-core';\nimport { Subheading } from '@contentful/f36-typography';\nimport { BackButton, type BackButtonProps } from './BackButton';\nimport { Breadcrumb, type BreadcrumbProps } from './Breadcrumb';\nimport { Segmentation } from './Segmentation';\nimport { getHeaderStyles } from './Header.styles';\n\nconst HEADER_DEFAULT_TAG = 'header';\n\ntype WithBackButtonOrNot =\n  | {\n      backButtonProps?: BackButtonProps;\n      /**\n       * If `true`, renders a leading back button within the header.\n       */\n      withBackButton: true;\n    }\n  | {\n      backButtonProps?: never;\n      withBackButton?: false | never;\n    };\n\ntype HeaderInternalProps = WithBackButtonOrNot & {\n  /**\n   * Optional JSX children to display as complementary actions (e.g. buttons) related to the current page/route.\n   */\n  actions?: ReactElement | ReactElement[];\n  /**\n   * An (optional) list of navigable links to prepend to the current title.\n   */\n  breadcrumbs?: BreadcrumbProps['breadcrumbs'];\n  /**\n   * An (optional) element displayed in the center of the header, typically used to render refinement/search UI.\n   */\n  filters?: ReactElement;\n  /**\n   * The title of the element this header pertains to.\n   */\n  title?: ReactElement | string;\n  metadata?: ReactNode;\n};\n\nexport type HeaderProps<E extends ElementType = typeof HEADER_DEFAULT_TAG> =\n  PolymorphicProps<HeaderInternalProps, E>;\n\nfunction _Header<E extends ElementType = typeof HEADER_DEFAULT_TAG>(\n  {\n    actions,\n    as,\n    backButtonProps,\n    breadcrumbs,\n    className,\n    filters,\n    metadata,\n    title,\n    withBackButton,\n    ...otherProps\n  }: HeaderProps<E>,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any -- polymorphic element\n  forwardedRef: Ref<any>,\n) {\n  const styles = getHeaderStyles();\n  return (\n    <Flex\n      alignItems=\"center\"\n      as={HEADER_DEFAULT_TAG}\n      gap=\"spacingM\"\n      className={cx(styles.root(Boolean(filters)), className)}\n      ref={forwardedRef}\n      {...otherProps}\n    >\n      <div className={styles.context}>\n        <Flex alignItems=\"center\" gap=\"spacingXs\">\n          <Segmentation>\n            {withBackButton && <BackButton {...backButtonProps} />}\n            {breadcrumbs && <Breadcrumb breadcrumbs={breadcrumbs} />}\n            {title && (\n              <div className={styles.noWrap}>\n                {isValidElement(title) ? (\n                  title\n                ) : (\n                  <Subheading as=\"h1\" className={styles.title}>\n                    {title}\n                  </Subheading>\n                )}\n              </div>\n            )}\n          </Segmentation>\n          {metadata && (\n            <Flex alignItems=\"center\" gap=\"spacing2Xs\">\n              {metadata}\n            </Flex>\n          )}\n        </Flex>\n      </div>\n      <div className={styles.filters}>{filters}</div>\n      <div className={styles.actions}>{actions}</div>\n    </Flex>\n  );\n}\n\nexport const Header: PolymorphicComponent<\n  ExpandProps<HeaderInternalProps>,\n  typeof HEADER_DEFAULT_TAG\n> = forwardRef(_Header);\n","import React, { forwardRef, type Ref } from 'react';\nimport { IconButton, type IconButtonProps } from '@contentful/f36-button';\nimport { ArrowBackwardIcon } from '@contentful/f36-icons';\n\nexport type BackButtonProps = Omit<\n  Partial<IconButtonProps>,\n  'children' | 'icon' | 'variant' | 'size'\n> & {\n  'aria-label'?: string;\n};\n\nfunction _BackButton(\n  {\n    onClick,\n    'aria-label': ariaLabel = 'Go back',\n    ...otherProps\n  }: BackButtonProps,\n  ref: Ref<HTMLButtonElement>,\n) {\n  return (\n    <IconButton\n      {...otherProps}\n      aria-label={ariaLabel}\n      icon={<ArrowBackwardIcon variant=\"muted\" />}\n      onClick={onClick}\n      size=\"small\"\n      ref={ref}\n      variant=\"transparent\"\n    />\n  );\n}\n\nexport const BackButton = forwardRef<HTMLButtonElement, BackButtonProps>(\n  _BackButton,\n);\n","import React, { MouseEventHandler } from 'react';\nimport { Button } from '@contentful/f36-button';\nimport { Segmentation } from './Segmentation';\nimport { getBreadcrumbStyles } from './Breadcrumb.styles';\n\ntype Breadcrumb = {\n  content: string;\n  url: string;\n  onClick?: MouseEventHandler<HTMLAnchorElement>;\n};\n\nexport type BreadcrumbProps = {\n  breadcrumbs: Breadcrumb[];\n};\n\nexport const Breadcrumb = ({ breadcrumbs, ...otherProps }: BreadcrumbProps) => {\n  const styles = getBreadcrumbStyles();\n  const segments = breadcrumbs.map((breadcrumb) => {\n    const handleBreadcrumbClick = breadcrumb.onClick;\n    return (\n      <Button\n        as=\"a\"\n        className={styles.button}\n        href={breadcrumb.url}\n        key={breadcrumb.url}\n        size=\"small\"\n        variant=\"transparent\"\n        onClick={handleBreadcrumbClick}\n      >\n        {breadcrumb.content}\n      </Button>\n    );\n  });\n  return <Segmentation segments={segments} {...otherProps} />;\n};\n","import {\n  Box,\n  type CommonProps,\n  type ExpandProps,\n  type PolymorphicComponent,\n  type PolymorphicProps,\n} from '@contentful/f36-core';\nimport { cx } from 'emotion';\nimport React, {\n  forwardRef,\n  type ElementType,\n  type Ref,\n  type ReactNode,\n  Fragment,\n  type ReactElement,\n} from 'react';\nimport { getSegmentationStyles } from './Segmentation.styles';\n\nconst SEGMENTATION_DEFAULT_TAG = 'div';\n\ntype ChildrenOrSegments =\n  | {\n      children: ReactNode[];\n      segments?: never;\n    }\n  | {\n      children?: never;\n      segments: ReactNode[];\n    };\n\ntype SegmentationInternalProps = CommonProps &\n  ChildrenOrSegments & {\n    separator?: ReactElement;\n  };\n\nexport type SegmentationProps<\n  E extends ElementType = typeof SEGMENTATION_DEFAULT_TAG,\n> = PolymorphicProps<SegmentationInternalProps, E>;\n\nfunction _Segmentation<E extends ElementType = typeof SEGMENTATION_DEFAULT_TAG>(\n  {\n    children,\n    className,\n    segments,\n    separator: SeparatorComponent,\n    testId = 'cf-ui-segmentation',\n    ...otherProps\n  }: SegmentationProps<E>,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any -- polymorphic element\n  forwardedRef: Ref<any>,\n) {\n  const styles = getSegmentationStyles();\n  const separator = SeparatorComponent ?? <div className={styles.separator} />;\n\n  const mapSegments = (segment: ReactNode, index: number) => (\n    <Fragment key={index}>\n      {index > 0 && separator}\n      {segment}\n    </Fragment>\n  );\n\n  return (\n    <Box\n      as={SEGMENTATION_DEFAULT_TAG}\n      className={cx(styles.root, className)}\n      ref={forwardedRef}\n      testId={testId}\n      {...otherProps}\n    >\n      {children\n        ? React.Children.toArray(children).map(mapSegments)\n        : segments.map(mapSegments)}\n    </Box>\n  );\n}\n\nexport const Segmentation: PolymorphicComponent<\n  ExpandProps<SegmentationInternalProps>,\n  typeof SEGMENTATION_DEFAULT_TAG\n> = forwardRef(_Segmentation);\n","import tokens from '@contentful/f36-tokens';\nimport { css } from 'emotion';\n\nexport const getSegmentationStyles = () => {\n  return {\n    root: css({\n      alignItems: 'center',\n      display: 'flex',\n    }),\n    separator: css({\n      height: tokens.spacingXl,\n      position: 'relative',\n      width: tokens.spacingXs,\n\n      '&::after': {\n        backgroundColor: tokens.gray200,\n        content: '\"\"',\n        display: 'block',\n        height: '16px',\n        position: 'absolute',\n        left: '50%',\n        top: '50%',\n        width: '1px',\n        transform: 'translate3d(-50%, -50%, 0) rotate3d(0, 0, 1, 18deg)',\n      },\n    }),\n  };\n};\n","import { css } from 'emotion';\nimport tokens from '@contentful/f36-tokens';\n\nexport const getBreadcrumbStyles = () => ({\n  button: css({\n    color: tokens.gray500,\n    fontSize: tokens.fontSizeL,\n    fontWeight: tokens.fontWeightNormal,\n    maxWidth: 'none',\n    paddingLeft: tokens.spacingXs,\n    paddingRight: tokens.spacingXs,\n  }),\n});\n","import { css } from 'emotion';\nimport tokens from '@contentful/f36-tokens';\nimport { HEADER_HEIGHT } from './constants';\n\nexport const getHeaderStyles = () => ({\n  actions: css({\n    flexGrow: 0,\n    flexShrink: 1,\n    flexBasis: '25%',\n    textAlign: 'right',\n  }),\n  context: css({\n    flexGrow: 0,\n    flexShrink: 1,\n    flexBasis: '25%',\n  }),\n  filters: css({\n    display: 'flex',\n    flexGrow: 1,\n    flexShrink: 1,\n    flexBasis: '50%',\n  }),\n  root: (hasFilters?: boolean) =>\n    css({\n      background: tokens.gray100,\n      height: `${HEADER_HEIGHT}px`,\n      // Reduce vertical padding when there's a filter in the header\n      padding: hasFilters\n        ? `${tokens.spacingXs} ${tokens.spacingS}`\n        : tokens.spacingS,\n    }),\n  separator: css({\n    backgroundColor: tokens.gray200,\n    height: '16px',\n    margin: `0 ${tokens.spacingS} 0 ${tokens.spacingXs}`,\n    transform: 'rotate3d(0, 0, 1, 18deg)',\n    width: '1px',\n  }),\n  title: css({\n    margin: `${tokens.spacing2Xs} 0`,\n    '&:not(:first-child)': {\n      marginLeft: tokens.spacingXs,\n    },\n  }),\n  noWrap: css({\n    textWrap: 'nowrap',\n    '&:not(:first-child)': {\n      marginLeft: tokens.spacingXs,\n    },\n  }),\n});\n","export const HEADER_HEIGHT = 56;\n"]}