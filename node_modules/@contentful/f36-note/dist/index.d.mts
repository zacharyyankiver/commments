import React from 'react';
import { PropsWithHTMLElement, CommonProps } from '@contentful/f36-core';

declare type NoteVariant = 'negative' | 'positive' | 'primary' | 'warning' | 'neutral' | 'premium';
declare type NoteInternalProps = CommonProps & {
    /**
     * Determines style variation of Note component
     */
    variant?: NoteVariant;
    /**
     * Sets title in the Note
     */
    title?: React.ReactNode;
    /**
     * Children of Note
     */
    children?: React.ReactNode | string;
    /**
     * Defines if the close button should be rendered
     * @default false
     */
    withCloseButton?: boolean;
    /**
     * Aria label for the close button
     * @default 'Dismiss'
     */
    closeButtonAriaLabel?: string;
    /**
     * Callback for handling closing
     */
    onClose?: React.MouseEventHandler<HTMLButtonElement>;
    /**
     * Expects any of the icon components to override the default Note variant icon
     */
    icon?: React.ReactElement;
};
declare type NoteProps = PropsWithHTMLElement<NoteInternalProps, 'article'>;
/**
 * @description: Note provides context and information about a situation or action.
 */
declare const Note: React.ForwardRefExoticComponent<Omit<Omit<Pick<React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>, "key" | keyof React.HTMLAttributes<HTMLElement>>, never>, "title" | "children" | keyof CommonProps | "variant" | "withCloseButton" | "closeButtonAriaLabel" | "onClose" | "icon"> & CommonProps & {
    /**
     * Determines style variation of Note component
     */
    variant?: NoteVariant;
    /**
     * Sets title in the Note
     */
    title?: React.ReactNode;
    /**
     * Children of Note
     */
    children?: React.ReactNode | string;
    /**
     * Defines if the close button should be rendered
     * @default false
     */
    withCloseButton?: boolean;
    /**
     * Aria label for the close button
     * @default 'Dismiss'
     */
    closeButtonAriaLabel?: string;
    /**
     * Callback for handling closing
     */
    onClose?: React.MouseEventHandler<HTMLButtonElement>;
    /**
     * Expects any of the icon components to override the default Note variant icon
     */
    icon?: React.ReactElement;
} & React.RefAttributes<HTMLElement>>;

export { Note, NoteProps };
