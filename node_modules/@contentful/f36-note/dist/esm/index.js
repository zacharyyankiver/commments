import { cx, css } from 'emotion';
import a from 'react';
import { Grid, Flex } from '@contentful/f36-core';
import { Button } from '@contentful/f36-button';
import { Heading, Text, Paragraph } from '@contentful/f36-typography';
import { CloseIcon, InfoCircleIcon, CheckCircleIcon, ErrorCircleIcon, WarningIcon, DiamondIcon } from '@contentful/f36-icons';
import { Icon } from '@contentful/f36-icon';
import o from '@contentful/f36-tokens';

var M=Object.defineProperty,S=Object.defineProperties;var T=Object.getOwnPropertyDescriptors;var c=Object.getOwnPropertySymbols;var y=Object.prototype.hasOwnProperty,h=Object.prototype.propertyIsEnumerable;var C=(e,t,r)=>t in e?M(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,p=(e,t)=>{for(var r in t||(t={}))y.call(t,r)&&C(e,r,t[r]);if(c)for(var r of c(t))h.call(t,r)&&C(e,r,t[r]);return e},v=(e,t)=>S(e,T(t));var x=(e,t)=>{var r={};for(var n in e)y.call(e,n)&&t.indexOf(n)<0&&(r[n]=e[n]);if(e!=null&&c)for(var n of c(e))t.indexOf(n)<0&&h.call(e,n)&&(r[n]=e[n]);return r};var z=e=>{switch(e){case"primary":return {backgroundColor:o.blue100,borderColor:o.blue300,a:{color:o.blue700}};case"positive":return {backgroundColor:o.green100,borderColor:o.green300,a:{color:o.blue700}};case"negative":return {backgroundColor:o.red100,borderColor:o.red300,a:{color:o.blue700}};case"warning":return {backgroundColor:o.orange100,borderColor:o.orange300,a:{color:o.blue700}};case"neutral":return {backgroundColor:o.gray100,borderColor:o.gray300,a:{color:o.blue700}};case"premium":return {backgroundColor:o.purple100,borderColor:o.purple300,a:{color:o.blue700}};default:return {}}},P=()=>({container:({variant:e})=>css(p({position:"relative",borderRadius:o.borderRadiusMedium,border:"1px solid"},z(e))),title:css({color:o.gray800,fontSize:o.fontSizeL,lineHeight:o.lineHeightL}),description:css({color:o.gray700}),close:css({position:"absolute",top:o.spacingXs,right:o.spacingXs,padding:o.spacingXs,"&:hover, &:active":{backgroundColor:"transparent"}}),closeIcon:css({fill:o.gray600})});var O={primary:InfoCircleIcon,positive:CheckCircleIcon,negative:ErrorCircleIcon,warning:WarningIcon,neutral:InfoCircleIcon,premium:DiamondIcon},k=a.forwardRef((e,t)=>{let N=e,{children:r,className:n,withCloseButton:u=!1,onClose:E,closeButtonAriaLabel:H="Dismiss",variant:l="primary",testId:d="cf-ui-note",title:m,icon:g}=N,w=x(N,["children","className","withCloseButton","onClose","closeButtonAriaLabel","variant","testId","title","icon"]),i=P(),b=m?"medium":"small",f=l==="neutral"?"muted":l,B=L=>a.cloneElement(L,{size:b,variant:f});return a.createElement(Grid,v(p({},w),{columns:u?"auto 1fr 24px":"auto 1fr",as:"article",className:cx(i.container({variant:l}),n),testId:d,ref:t,padding:"spacingM"}),g?B(g):a.createElement(Icon,{as:O[l],variant:f,size:b}),a.createElement(Flex,{flexDirection:"column"},m&&a.createElement(Heading,{as:"h2",className:i.title,marginBottom:r?"spacingS":"none"},m),r&&a.createElement(Text,{as:"div",lineHeight:"lineHeightM",className:i.description},typeof r=="string"?a.createElement(Paragraph,{marginBottom:"none"},r):r)),u&&a.createElement(Button,{variant:"transparent",startIcon:a.createElement(CloseIcon,{className:i.closeIcon}),onClick:E,testId:`${d}-close`,"aria-label":H,className:i.close}))});k.displayName="Note";

export { k as Note };
//# sourceMappingURL=out.js.map
//# sourceMappingURL=index.js.map