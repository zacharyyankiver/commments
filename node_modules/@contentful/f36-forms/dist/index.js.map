{"version":3,"sources":["../src/HelpText/HelpText.tsx","../src/FormControl/FormControlContext.tsx","../src/ValidationMessage/ValidationMessage.tsx","../src/Checkbox/Checkbox.tsx","../src/BaseCheckbox/BaseCheckbox.tsx","../src/BaseCheckbox/GhostCheckbox.tsx","../src/BaseCheckbox/GhostCheckbox.styles.ts","../src/BaseCheckbox/BaseCheckbox.styles.ts","../src/BaseCheckbox/BaseCheckboxGroupContext.tsx","../src/Checkbox/CheckboxGroup.tsx","../src/BaseCheckbox/BaseCheckboxGroup.tsx","../src/Checkbox/CompoundCheckbox.tsx","../src/FormControl/FormControl.tsx","../src/FormLabel/FormLabel.tsx","../src/FormLabel/FormLabel.styles.ts","../src/Counter/Counter.tsx","../src/Counter/Counter.styles.ts","../src/FormControl/CompoundFormControl.tsx","../src/Radio/Radio.tsx","../src/Radio/RadioGroup.tsx","../src/Radio/CompoundRadio.tsx","../src/TextInput/TextInput.tsx","../src/BaseInput/BaseInput.tsx","../src/BaseInput/BaseInput.styles.ts","../src/TextInput/input-group/InputGroup.tsx","../src/TextInput/input-group/InputGroup.styles.ts","../src/TextInput/CompoundTextInput.tsx","../src/Switch/Switch.tsx","../src/Textarea/Textarea.tsx","../src/Textarea/Textarea.styles.ts","../src/Select/SelectOption.tsx","../src/Select/Select.tsx","../src/Select/Select.styles.ts","../src/Select/CompoundSelect.tsx","../src/Form/Form.tsx"],"names":["React","Text","createContext","useContext","noop","FormControlContext","useFormControlContext","useFormControl","props","_a","_b","_c","_d","_e","context","useDensity","HelpText","ref","testId","otherProps","__objRest","id","density","__spreadProps","__spreadValues","forwardRef","Flex","ErrorCircleOutlineIcon","ValidationMessage","children","useId","useCallback","useEffect","useRef","DoneIcon","MinusIcon","CloseIcon","css","tokens","getBaseGhostStyles","isDisabled","getCheckboxStyles","getRadioStyles","getSwitchStyles","size","sizeStyle","disabledStyle","getStyles","args","GhostCheckbox_styles_default","GhostCheckbox","type","isIndeterminate","styles","sizeToStyle","getHelpTextStyle","inputWidth","BaseCheckbox_styles_default","_BaseCheckbox","isChecked","onChange","onFocus","onBlur","onKeyDown","value","isInvalid","isRequired","willBlurOnEsc","className","defaultChecked","name","inputProps","ariaLabel","helpText","inputRef","finalRef","formFieldId","handleFocus","e","handleBlur","handleKeyDown","ariaChecked","helpTextId","ariaDescribedBy","BaseCheckbox","BaseCheckboxGroupContext","useBaseCheckboxGroupContext","useBaseCheckboxGroup","event","_Checkbox","inputId","groupProps","inputValue","setInputValue","maxLength","setMaxLength","isReadOnly","formProps","Checkbox","Stack","_BaseCheckboxGroup","contextProps","BaseCheckboxGroup","_CheckboxGroup","CheckboxGroup","useState","Box","FORM_CONTROL_DEFAULT_TAG","_FormControl","as","marginBottom","generatedId","roleAttr","Element","FormControl","cx","getFormLabelStyles","FORM_LABEL_DEFAULT_TAG","_FormLabel","forwardedRef","requiredText","formControlProps","labelProps","FormLabel","getCounterStyles","Counter","_Radio","Radio","_RadioGroup","RadioGroup","getSizeStyles","isHighDensity","getZIndex","zIndexBase","getInvalidOrDisabledStyles","resize","densityStyles","BaseInput_styles_default","INPUT_DEFAULT_TAG","_BaseInput","placeholder","style","icon","defaultValue","handleChange","iconContent","inputContent","iconClassName","BaseInput","_TextInput","contextMaxLength","contextInputValue","handleOnChange","TextInput","getInputGroupStyle","spacing","densityBorderRadius","iconStyles","InputGroup_styles_default","_InputGroup","InputGroup","_Switch","Switch","_Textarea","Textarea","Option","ChevronDownIcon","getSelectStyles","getSizeAndDensityStyles","select","disabled","invalid","_Select","Select","_Form","onSubmit","handleSubmit","Form"],"mappings":"8lBAAA,OAAOA,OAAW,QAOlB,OAAS,QAAAC,OAAY,6BCPrB,OAAS,iBAAAC,GAAe,cAAAC,OAAkB,QAG1C,IAAMC,GAAO,IAAM,CAEnB,EAEaC,GAAqBH,GAEhC,MAAS,EAEEI,GAAwB,IACnBH,GAAWE,EAAkB,EAIlCE,EACXC,GAC4B,CAlB9B,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAmBE,IAAMC,EAAUR,GAAsB,EACtC,OAAKQ,EAGE,CACL,YAAYL,EAAAD,EAAM,aAAN,KAAAC,EAAoBK,EAAQ,WACxC,WAAWJ,EAAAF,EAAM,YAAN,KAAAE,EAAmBI,EAAQ,UACtC,YAAYH,EAAAH,EAAM,aAAN,KAAAG,EAAoBG,EAAQ,WACxC,YAAYF,EAAAJ,EAAM,aAAN,KAAAI,EAAoBE,EAAQ,WACxC,IAAID,EAAAL,EAAM,KAAN,KAAAK,EAAYC,EAAQ,GACxB,UAAWA,EAAQ,UACnB,WAAYA,EAAQ,WACpB,aAAcA,EAAQ,cAAgBV,GACtC,cAAeU,EAAQ,eAAiBV,EAC1C,EAZSI,CAaX,EDzBA,OAAS,cAAAO,OAAkB,wBAYpB,IAAMC,EAAWhB,GAAM,WAG5B,CAACS,EAA+CQ,IAAQ,CAAvD,IAAAP,EAAAD,EAAE,QAAAS,EAAS,iBAxBd,EAwBGR,EAAiCS,EAAAC,EAAjCV,EAAiC,CAA/B,WACH,GAAM,CAAE,GAAAW,CAAG,EAAId,EAAe,CAAC,CAAC,EAC1Be,EAAUP,GAAW,EAC3B,OACEf,GAAA,cAACC,GAAAsB,EAAAC,EAAA,CACC,GAAG,IACH,UAAU,UACV,SAAUF,IAAY,OAAS,gBAAkB,YACjD,WAAYA,IAAY,OAAS,kBAAoB,cACrD,OAAQJ,EACR,GAAI,GAAGG,CAAE,YACT,UAAU,aACNF,GARL,CASC,IAAKF,GACP,CAEJ,CAAC,EAEDD,EAAS,YAAc,WE1CvB,OAAOhB,GAAS,cAAAyB,OAAkB,QAClC,OACE,QAAAC,OAKK,uBACP,OAAS,0BAAAC,OAA8B,wBACvC,OAAS,QAAA1B,OAAY,6BAErB,OAAS,cAAAc,OAAkB,wBAapB,IAAMa,EAAoBH,GAG/B,CAAChB,EAAkEQ,IAAQ,CAA1E,IAAAP,EAAAD,EAAE,UAAAoB,EAAU,OAAAX,EAAS,0BA3BxB,EA2BGR,EAAoDS,EAAAC,EAApDV,EAAoD,CAAlD,WAAU,WACb,GAAM,CAAE,GAAAW,CAAG,EAAId,EAAe,CAAC,CAAC,EAC1Be,EAAUP,GAAW,EAE3B,OACEf,EAAA,cAAC0B,GAAAH,EAAAC,EAAA,CACC,UAAU,cACNL,GAFL,CAGC,IAAKF,EACL,OAAQC,EACR,WAAW,SACX,GAAIG,EAAK,GAAGA,CAAE,cAAgB,OAC9B,YAAU,cAEVrB,EAAA,cAAC0B,GAAA,CAAK,YAAaJ,IAAY,OAAS,aAAe,aACrDtB,EAAA,cAAC2B,GAAA,CACC,KAAML,IAAY,OAAS,OAAS,QACpC,QAAQ,WACR,cAAY,OACd,CACF,EACAtB,EAAA,cAACC,GAAA,CACC,GAAG,IACH,UAAU,SACV,SAAUqB,IAAY,OAAS,gBAAkB,YACjD,WAAYA,IAAY,OAAS,kBAAoB,eAEpDO,CACH,CACF,CAEJ,CAAC,EAEDD,EAAkB,YAAc,oBC5DhC,OAAO5B,OAAW,QAClB,OAAS,SAAA8B,OAA+B,uBCDxC,OAAO9B,GAAS,eAAA+B,GAAa,aAAAC,GAAW,UAAAC,OAAc,QCAtD,OAAOjC,MAAW,QAClB,OAAS,YAAAkC,GAAU,aAAAC,GAAW,aAAAC,OAAiB,wBCD/C,OAAS,OAAAC,MAAW,UAEpB,OAAOC,MAAY,yBAInB,IAAMC,GAAqB,CAAC,CAAE,WAAAC,CAAW,IACvCH,EAAI,CACF,WAAY,SACZ,WAAaG,EAAiCF,EAAO,QAA3BA,EAAO,WACjC,OAAQ,aAAaA,EAAO,OAAO,GACnC,UAAW,aACX,QAAS,cACT,OAAQA,EAAO,SACf,eAAgB,SAChB,MAAOA,EAAO,QAChB,CAAC,EAEGG,GAAoB,CAAC,CAAE,WAAAD,CAAW,IAC/BH,EAAI,CACTE,GAAmB,CAAE,WAAAC,CAAW,CAAC,EACjC,CACE,gBAAkBA,EAAiCF,EAAO,QAA3BA,EAAO,WACtC,aAAcA,EAAO,kBACrB,QAAS,CACP,KAAOE,EAAiCF,EAAO,QAA3BA,EAAO,UAC7B,EACA,6CAA8C,CAC5C,gBAAkBE,EAA8BF,EAAO,QAAxBA,EAAO,QACtC,YAAcE,EAA8BF,EAAO,QAAxBA,EAAO,QAClC,QAAS,CACP,KAAOE,EAAiCF,EAAO,QAA3BA,EAAO,UAC7B,CACF,CACF,CACF,CAAC,EAGGI,GAAiB,CAAC,CAAE,WAAAF,CAAW,IAC5BH,EAAI,CACTE,GAAmB,CAAE,WAAAC,CAAW,CAAC,EACjC,CACE,gBAAkBA,EAAiCF,EAAO,QAA3BA,EAAO,WACtC,aAAc,MACd,WAAY,CACV,QAAS,KACT,aAAc,MACd,gBAAkBE,EAAiCF,EAAO,QAA3BA,EAAO,WACtC,MAAOA,EAAO,mBACd,OAAQA,EAAO,kBACjB,EACA,oBAAqB,CACnB,gBAAkBE,EAA8BF,EAAO,QAAxBA,EAAO,QACtC,YAAcE,EAA8BF,EAAO,QAAxBA,EAAO,QAClC,WAAY,CACV,gBAAkBE,EAAiCF,EAAO,QAA3BA,EAAO,UACxC,CACF,CACF,CACF,CAAC,EAGGK,GAAkB,CAAC,CAAE,WAAAH,EAAY,KAAAI,CAAK,IAAM,CAChD,IAAMC,EACJD,IAAS,QACL,CACE,OAAQN,EAAO,SACf,MAAOA,EAAO,UACd,WAAY,CACV,OAAQA,EAAO,SACf,MAAOA,EAAO,QAChB,EACA,2BAA4B,CAC1B,UAAW,cAAcA,EAAO,QAAQ,GAC1C,CACF,EACA,CACE,OAAQ,OACR,MAAO,OACP,WAAY,CACV,OAAQA,EAAO,SACf,MAAOA,EAAO,QAChB,EACA,2BAA4B,CAC1B,UAAW,kBACb,CACF,EAEAQ,EAAgB,CACpB,uBAAwB,CACtB,WAAYR,EAAO,QACnB,YAAaA,EAAO,OACtB,EACA,WAAY,CACV,WAAYA,EAAO,OACrB,EACA,QAAS,CACP,KAAMA,EAAO,OACf,CACF,EAEA,OAAOD,EAAI,CACTE,GAAmB,CAAE,WAAAC,CAAW,CAAC,EACjC,CACE,WAAYF,EAAO,QACnB,YAAaA,EAAO,QACpB,aAAcA,EAAO,kBACrB,eAAgB,eAChB,SAAU,WACV,WAAY,EACZ,WAAY,CACV,WAAYA,EAAO,WACnB,aAAc,QAAQA,EAAO,iBAAiB,MAC9C,QAAS,KACT,KAAM,EACN,SAAU,WACV,WAAY,aAAaA,EAAO,uBAAuB,IAAIA,EAAO,yBAAyB,EAC7F,EACA,oBAAqB,CACnB,WAAYA,EAAO,QACnB,YAAaA,EAAO,OACtB,CACF,EACAO,EACAL,GAAcM,CAChB,CAAC,CACH,EAEMC,GAAaC,GAAqB,CACtC,GAAM,CAAE,WAAAR,EAAY,KAAAI,CAAK,EAAII,EAC7B,MAAO,CACL,MAAON,GAAe,CAAE,WAAAF,CAAW,CAAC,EACpC,SAAUC,GAAkB,CAAE,WAAAD,CAAW,CAAC,EAC1C,OAAQG,GAAgB,CAAE,WAAAH,EAAY,KAAAI,CAAK,CAAC,CAC9C,CACF,EAEOK,GAAQF,GD/HR,IAAMG,GAAiB1C,GAA8B,CAC1D,GAAM,CAAE,KAAA2C,EAAM,gBAAAC,EAAiB,WAAAZ,EAAY,KAAAI,EAAO,QAAS,EAAIpC,EACzD6C,EAASJ,GAAU,CAAE,WAAAT,EAAY,KAAAI,CAAK,CAAC,EAE7C,OAAIO,IAAS,SAETnD,EAAA,cAAC,QAAK,UAAWqD,EAAO,QACtBrD,EAAA,cAACkC,GAAA,CAAS,KAAK,OAAO,QAAQ,QAAQ,EACtClC,EAAA,cAACoC,GAAA,CAAU,KAAK,OAAO,QAAQ,QAAQ,CACzC,EAKFpC,EAAA,cAAC,QAAK,UAAWqD,EAAOF,CAAI,GACzBA,IAAS,aACPC,EACCpD,EAAA,cAACmC,GAAA,CAAU,KAAK,OAAO,QAAQ,QAAQ,EAEvCnC,EAAA,cAACkC,GAAA,CAAS,KAAK,OAAO,QAAQ,QAAQ,EAE5C,CAEJ,EEjCA,OAAS,OAAAG,OAAW,UACpB,OAAOC,MAAY,yBAGnB,IAAMgB,GAAeV,GACfA,IAAS,QACJ,CACL,OAAQN,EAAO,SACf,MAAOA,EAAO,SAChB,EAGK,CACL,OAAQ,OACR,MAAO,MACT,EAGIiB,GAAmB,CAAC,CAAE,KAAAX,EAAM,KAAAO,EAAM,QAAA7B,CAAQ,IAAM,CACpD,IAAIkC,EAAalB,EAAO,SACxB,OAAIa,IAAS,WACXK,EAAaF,GAAYV,CAAI,EAAE,OAG1B,CACL,WAAY,QAAQY,CAAU,MAAMlB,EAAO,SAAS,IACpD,UAAW,EACX,SAAUhB,IAAY,OAASgB,EAAO,cAAgBA,EAAO,UAC7D,WACEhB,IAAY,OAASgB,EAAO,gBAAkBA,EAAO,WACzD,CACF,EAEMS,GAAY,CAAC,CACjB,WAAAP,EACA,KAAAW,EACA,KAAAP,EACA,QAAAtB,CACF,KAGO,CACL,QAASe,GAAI,CACX,WAAY,SACZ,QAAS,cACT,SAAU,WACV,OAAQ,IACR,UAAWC,EAAO,SACpB,CAAC,EACD,MAAOD,GAAI,CACT,CACE,OAAQG,EAAa,cAAgB,UACrC,OAAQF,EAAO,SACf,OAAQ,EACR,QAAS,EACT,SAAU,WACV,MAAOA,EAAO,SACd,OAAQA,EAAO,cACf,SAAU,CACR,SAAUA,EAAO,QACnB,EACA,UAAW,CACT,QAAS,OACT,WAAY,CACV,UAAWA,EAAO,WACpB,CACF,EACA,qCAAsC,CACpC,UAAW,OACb,EACA,yBAA0B,CACxB,UAAWA,EAAO,WACpB,CACF,EACAa,IAAS,UAAYG,GAAYV,CAAI,CACvC,CAAC,EACD,SAAUP,GAAIkB,GAAiB,CAAE,KAAAX,EAAM,KAAAO,EAAM,QAAA7B,CAAQ,CAAC,CAAC,CACzD,GAEOmC,GAAQV,GH1Ef,OAAS,QAAA9C,OAAY,6BACrB,OAAS,QAAAyB,OAAY,uBACrB,OAAS,cAAAX,OAAkB,wBAU3B,SAAS2C,GACPlD,EACAS,EACA,CACA,IAwBIR,GAAAD,EAvBF,WAAAmD,EAAY,OACZ,SAAAC,EACA,QAAAC,EACA,OAAAC,EACA,UAAAC,EACA,KAAAZ,EAAO,WACP,MAAAa,EACA,WAAAxB,EACA,gBAAAY,EACA,UAAAa,EACA,WAAAC,EAAa,GACb,GAAA7C,EACA,cAAA8C,EAAgB,GAChB,OAAAjD,EAAS,sBACT,UAAAkD,EAAY,GACZ,eAAAC,EAAiB,OACjB,KAAAC,EACA,WAAAC,EAAa,CAAC,EACd,SAAA1C,EACA,aAAc2C,EACd,KAAA5B,EAAO,SACP,SAAA6B,CA3CJ,EA6CMhE,GADCU,EAAAC,EACDX,GADC,CAtBH,YACA,WACA,UACA,SACA,YACA,OACA,QACA,aACA,kBACA,YACA,aACA,KACA,gBACA,SACA,YACA,iBACA,OACA,aACA,WACA,aACA,OACA,aAGIa,EAAUP,GAAW,EACrB2D,EAAWzC,GAAyB,IAAI,EACxC0C,EAAW1D,GAAOyD,EAClB,CAAE,GAAIE,EAAY,EAAIrE,EAAe,CAAC,CAAC,EAE7CyB,GAAU,IAAM,CACV2C,EAAS,UACXA,EAAS,QAAQ,cAAgBvB,EAErC,EAAG,CAACA,EAAiBuB,CAAQ,CAAC,EAE9B,IAAMtB,EAASI,GAAU,CAAE,WAAAjB,EAAY,KAAAW,EAAM,KAAAP,EAAM,QAAAtB,CAAQ,CAAC,EAEtDuD,GAAc9C,GACjB+C,GAAM,CACLA,EAAE,QAAQ,EACNjB,GACFA,EAAQiB,CAAC,CAEb,EACA,CAACjB,CAAO,CACV,EAEMkB,GAAahD,GAChB+C,GAAM,CACLA,EAAE,QAAQ,EACNhB,GACFA,EAAOgB,CAAC,CAEZ,EACA,CAAChB,CAAM,CACT,EAEMkB,EAAgBjD,GACnB+C,GAAM,CAhFX,IAAArE,GAiFMqE,EAAE,QAAQ,EACNX,GAAiBW,EAAE,MAAQ,YAC7BrE,GAAAkE,GAAA,YAAAA,EAAU,UAAV,MAAAlE,GAAmB,QAEjBsD,GACFA,EAAUe,CAAC,CAEf,EACA,CAACX,EAAeJ,EAAWY,CAAQ,CACrC,EAEMM,EACJ,OAAOtB,IAAc,OAAYA,EAAYU,EAEzCa,EAAa7D,EAAK,GAAGA,CAAE,YAAc,OACrC8D,GAAkBlB,EACpB,GAAGW,EAAW,cACdH,EACAS,EACA,OAEJ,OACElF,EAAA,cAAC0B,GAAA,CAAK,WAAW,aAAa,cAAc,SAAS,UAAW0C,GAC9DpE,EAAA,cAACC,GAAAuB,EAAA,CACC,GAAG,QACH,UAAU,UACV,WAAW,mBACX,SAAUF,IAAY,OAAS,gBAAkB,YACjD,WAAYA,IAAY,OAAS,kBAAoB,cACrD,UAAW+B,EAAO,QAClB,QAAShC,EACT,OAAQH,GACJC,GAEJnB,EAAA,cAAC,QAAAuB,EAAAC,EAAA,GACK+C,GADL,CAEC,aAAYC,EACZ,QAASb,EACT,eAAgBU,EAChB,UAAWhB,EAAO,MAClB,KAAMF,IAAS,SAAW,WAAaA,EACvC,SAAUS,EACV,QAASiB,GACT,OAAQE,GACR,UAAWC,EACX,MAAOhB,EACP,SAAUxB,EACV,KAAMW,EACN,eAAcC,EAAkB,QAAU6B,EAC1C,IAAKN,EACL,SAAUT,EACV,gBAAeA,EAAa,OAAS,OACrC,eAAcD,EAAY,OAAS,OACnC,mBAAkBkB,GAClB,GAAI9D,EACJ,KAAMiD,GACR,EACAtE,EAAA,cAACkD,GAAA,CACC,KAAMC,EACN,WAAYX,EACZ,gBAAiBY,EACjB,KAAMR,EACR,EACCf,CACH,EACC4C,GACCzE,EAAA,cAACgB,EAAA,CAAS,GAAIkE,EAAY,UAAW7B,EAAO,UACzCoB,CACH,CAEJ,CAEJ,CAEAf,GAAc,YAAc,eAErB,IAAM0B,EAAepF,EAAM,WAAW0D,EAAa,EI7J1D,OAAS,iBAAAxD,GAAe,cAAAC,OAAkB,QAanC,IAAMkF,GAA2BnF,GAEtC,MAAS,EAEEoF,GAA8B,IACzBnF,GAAWkF,EAAwB,EAIxCE,GACX/E,GACkC,CAxBpC,IAAAC,EAAAC,EAAAC,EAyBE,IAAMG,EAAUwE,GAA4B,EAC5C,GAAI,CAACxE,EACH,OAAON,EAGT,IAAImD,EAAWU,EAEf,OAAIvD,EAAQ,OAAS,aACnB6C,EACE7C,EAAQ,QAAU,SAEdL,EAAAK,EAAQ,QAAR,KADA,OACAL,EAAe,SAASD,EAAM,OACpC6D,EACEV,IAAc,SAEVjD,EAAAI,EAAQ,eAAR,KADA,OACAJ,EAAsB,SAASF,EAAM,QAGzCM,EAAQ,OAAS,UACnB6C,EACE7C,EAAQ,QAAU,OAAY,OAAYA,EAAQ,QAAUN,EAAM,MACpE6D,EACEV,IAAc,OACV,OACA7C,EAAQ,eAAiBN,EAAM,OAahC,CACL,eAAA6D,EACA,UAAAV,EACA,OARc6B,GAAU,CACxBhF,EAAM,QAAUA,EAAM,OAAOgF,CAAK,EAClC1E,EAAQ,QAAUA,EAAQ,OAAO0E,CAAK,CACxC,EAME,SAdgBA,GAAU,CAC1BhF,EAAM,UAAYA,EAAM,SAASgF,CAAK,EACtC1E,EAAQ,UAAYA,EAAQ,SAAS0E,CAAK,CAC5C,EAYE,MAAM7E,EAAAG,EAAQ,OAAR,KAAAH,EAAgBH,EAAM,KAC5B,MAAOA,EAAM,KACf,CACF,EL9DA,IAAMiF,GAAY,CAChBjF,EACAS,IACG,CACH,IAcIR,EAAAD,EAbF,QAAAU,EAAS,iBACT,GAAAG,EACA,WAAAmB,EACA,WAAA0B,EACA,UAAAD,EACA,SAAApC,EACA,OAAAiC,EACA,SAAAF,EACA,eAAAS,EACA,UAAAV,EACA,MAAAK,EACA,KAAAM,CAxBJ,EA0BM7D,EADCU,EAAAC,EACDX,EADC,CAZH,SACA,KACA,aACA,aACA,YACA,WACA,SACA,WACA,iBACA,YACA,QACA,SAIIiF,EAAU5D,GAAMT,EAAI,UAAU,EAE9BsE,EAAaJ,GAAqB,CACtC,OAAAzB,EACA,SAAAF,EACA,MAAAI,EACA,eAAAK,EACA,UAAAV,EACA,KAAAW,CACF,CAAC,EAUG5D,EAAAH,EAAe,CACjB,GAAImF,EACJ,WAAAlD,EACA,UAAAyB,EACA,WAAAC,CACF,CAAC,EAXC,YAAA0B,EACA,cAAAC,EACA,UAAAC,EACA,aAAAC,EACA,WAAAC,CA7CJ,EA+CMtF,EADCuF,EAAA7E,EACDV,EADC,CALH,aACA,gBACA,YACA,eACA,eASF,OACEV,GAAA,cAACoF,EAAA7D,EAAAC,MAAA,GACKyE,GACAN,GACAxE,GAHL,CAIC,KAAK,WACL,OAAQD,EACR,IAAKD,IAEJY,CACH,CAEJ,EAEaqE,GAAWlG,GAAM,WAAWyF,EAAS,EMpElD,OAAOzF,OAAW,QCAlB,OAAOA,OAAgE,QACvE,OACE,SAAAmG,OAGK,uBAkCA,IAAMC,GAAqB,CAChC5F,EACAS,IACG,CACH,IAKIR,EAAAD,EAJF,UAAAqB,EACA,UAAAuC,EACA,OAAAlD,EAAS,2BA9Cb,EAgDMT,EADC4F,EAAAjF,EACDX,EADC,CAHH,WACA,YACA,WAGF,OACET,GAAA,cAACqF,GAAyB,SAAzB,CAAkC,MAAOgB,GACxCrG,GAAA,cAACmG,GAAA,CACC,IAAKlF,EACL,OAAQC,EACR,UAAWkD,EACX,cAAc,SACd,WAAW,aACX,QAAQ,aAEPvC,CACH,CACF,CAEJ,EAEayE,GAAoBtG,GAAM,WAAWoG,EAAkB,ED9C7D,IAAMG,GAAiB,CAC5B/F,EACAS,IACG,CACH,IAAqER,EAAAD,EAA7D,UAAAqB,EAAU,OAAAX,EAAS,sBAvB7B,EAuBuET,EAAfU,EAAAC,EAAeX,EAAf,CAA9C,WAAU,WAClB,OACET,GAAA,cAACsG,GAAA9E,EAAA,CACC,IAAKP,EACL,OAAQC,EACR,KAAK,YACDC,GAEHU,CACH,CAEJ,EAEa2E,GAAgBxG,GAAM,WAAWuG,EAAc,EE7BrD,IAAML,GAAWA,GACxBA,GAAS,MAAQM,GCRjB,OAAOxG,IAAS,YAAAyG,OAAgB,QAChC,OACE,SAAA3E,OAMK,uBACP,OAAS,OAAA4E,OAAW,uBAKpB,IAAMC,GAA2B,MAcjC,SAASC,GAGPnG,EAYAQ,EACA,CAbA,IAAAP,EAAAD,EACE,IAAAoG,EACA,UAAA5C,EACA,WAAAC,EACA,WAAA1B,EACA,WAAAwD,EACA,SAAAnE,EACA,aAAAiF,EAAe,WACf,GAAAzF,EACA,OAAAH,EAAS,oBAxCb,EA+BER,EAUKS,EAAAC,EAVLV,EAUK,CATH,KACA,YACA,aACA,aACA,aACA,WACA,eACA,KACA,WAKF,IAAMqG,EAAcjF,GAAMT,EAAI,QAAQ,EAChC,CAACuE,EAAYC,CAAa,EAAIY,GAAS,EAAE,EACzC,CAACX,EAAWC,CAAY,EAAIU,GAAS,CAAC,EACtCO,EAAWH,IAAO,WAAa,OAAY,QAC3CI,EAA6BJ,GAAMF,GAEnC7F,EAAU,CACd,GAAIiG,EACJ,WAAA7C,EACA,WAAA1B,EACA,UAAAyB,EACA,WAAA+B,EACA,WAAAJ,EACA,cAAAC,EACA,UAAAC,EACA,aAAAC,CACF,EAEA,OACE/F,GAAA,cAACK,GAAmB,SAAnB,CAA4B,MAAOS,GAClCd,GAAA,cAAC0G,GAAAlF,EAAA,CACC,GAAIyF,EACJ,IAAKhG,EACL,KAAM+F,EACN,OAAQ9F,EACR,aAAc4F,GACV3F,GAEHU,CACH,CACF,CAEJ,CAEA+E,GAAa,YAAc,cAEpB,IAAMM,GAGTlH,GAAM,WAAW4G,EAAY,ECpFjC,OAAS,MAAAO,OAAU,UACnB,OAAOnH,IAAS,cAAAyB,OAAkC,QCDlD,OAAOa,OAAY,yBACnB,OAAS,OAAAD,OAAW,UAEb,SAAS+E,IAAqB,CACnC,MAAO,CACL,KAAM/E,GAAI,CACR,QAAS,eACT,WAAYC,GAAO,gBACrB,CAAC,EACD,UAAWD,GAAI,CACb,MAAOC,GAAO,QACd,WAAYA,GAAO,iBACnB,WAAYA,GAAO,UACrB,CAAC,CACH,CACF,CDJA,OAAS,QAAArC,OAAY,6BACrB,OAAS,cAAAc,OAAkB,wBA2B3B,IAAMsG,GAAyB,QAM/B,SAASC,GAGP7G,EASA8G,EACA,CAVA,IAAA7G,EAAAD,EACE,IAAAoG,EACA,SAAAhF,EACA,UAAAuC,EACA,WAAAF,EACA,aAAAsD,EAAe,WACf,OAAAtG,EAAS,kBAtDb,EAgDER,EAOKS,EAAAC,EAPLV,EAOK,CANH,KACA,WACA,YACA,aACA,eACA,WAKF,IAAMY,EAAUP,GAAW,EACrBsC,EAAS+D,GAAmB,EAC5BK,EAAmBlH,EAAe,CAAE,WAAA2D,CAAW,CAAC,EAEhD7C,EAAKoG,EAAiB,GAAKA,EAAiB,GAAK,SAAW,OAE5DC,EACJb,IAAO,SACH,CACE,QAAS1F,EAAW,SAAWsG,EAAiB,EAClD,EACA,CAAC,EAIP,OACEzH,GAAA,cAACC,GAAAsB,EAAAC,EAAAD,EAAAC,EAAA,CACC,GAJ+BqF,GAAMQ,GAKrC,aAAa,aACTlG,GAHL,CAIC,UAAU,UACV,GAAIE,IACAqG,GANL,CAOC,UAAWP,GAAG9D,EAAO,KAAMe,CAAS,EACpC,IAAKmD,EACL,OAAQrG,EACR,SAAUI,IAAY,OAAS,gBAAkB,YACjD,WAAYA,IAAY,OAAS,kBAAoB,gBAEpDO,EACA4F,EAAiB,YAChBzH,GAAA,cAAC,QAAK,UAAWqD,EAAO,WAAW,IAAEmE,EAAa,GAAC,CAEvD,CAEJ,CAEAF,GAAW,YAAc,YAElB,IAAMK,GAGTlG,GAAW6F,EAAU,EErGzB,OAAOtH,IAAS,cAAAyB,OAAkB,QAClC,OAAS,MAAA0F,OAAU,UAMnB,OAAS,QAAAlH,OAAY,6BCPrB,OAAOqC,OAAY,yBACnB,OAAS,OAAAD,OAAW,UAEb,SAASuF,IAAmB,CACjC,MAAO,CACL,KAAMvF,GAAI,CACR,WAAY,EACZ,YAAaC,GAAO,SACpB,UAAW,OACb,CAAC,CACH,CACF,CDGO,IAAMuF,EAAUpG,GAGrB,CAAChB,EAAwDQ,IAAQ,CAAhE,IAAAP,EAAAD,EAAE,QAAAS,EAAS,gBAAiB,UAAAkD,CAjB/B,EAiBG1D,EAA0CS,EAAAC,EAA1CV,EAA0C,CAAxC,SAA0B,cAC7B,GAAM,CAAE,UAAAoF,EAAW,WAAAF,CAAW,EAAIrF,EAAe,CAAC,CAAC,EAC7C8C,EAASuE,GAAiB,EAEhC,MACE,EAAQ9B,GACN9F,GAAA,cAACC,GAAAsB,EAAAC,EAAA,CACC,GAAG,IACH,UAAU,UACV,SAAS,YACT,OAAQN,EACR,UAAU,aACNC,GANL,CAOC,UAAWgG,GAAG9D,EAAO,KAAMe,CAAS,EACpC,IAAKnD,IAEJ2E,EAAW,OAAO,MAAIE,CACzB,CAGN,CAAC,EAED+B,EAAQ,YAAc,UE1Bf,IAAMX,EAAcA,GAC3BA,EAAY,MAAQS,GACpBT,EAAY,kBAAoBtF,EAChCsF,EAAY,SAAWlG,EACvBkG,EAAY,QAAUW,ECjBtB,OAAO7H,OAAW,QAClB,OAAS,SAAA8B,OAA+B,uBAWxC,IAAMgG,GAAS,CACbtH,EACAS,IACG,CACH,IAcIR,EAAAD,EAbF,QAAAU,EAAS,qBACT,GAAAG,EACA,WAAAmB,EACA,UAAAyB,EACA,WAAAC,EACA,SAAArC,EACA,OAAAiC,EACA,SAAAF,EACA,eAAAS,EACA,UAAAV,EACA,MAAAK,EACA,KAAAM,CA5BJ,EA8BM7D,EADCU,EAAAC,EACDX,EADC,CAZH,SACA,KACA,aACA,YACA,aACA,WACA,SACA,WACA,iBACA,YACA,QACA,SAIIiF,EAAU5D,GAAMT,EAAI,OAAO,EAE3BsE,EAAaJ,GAAqB,CACtC,OAAAzB,EACA,SAAAF,EACA,MAAAI,EACA,eAAAK,EACA,UAAAV,EACA,KAAAW,CACF,CAAC,EAUG5D,EAAAH,EAAe,CACjB,GAAImF,EACJ,WAAAlD,EACA,UAAAyB,EACA,WAAAC,CACF,CAAC,EAXC,YAAA0B,EACA,cAAAC,EACA,UAAAC,EACA,aAAAC,EACA,WAAAC,CAjDJ,EAmDMtF,EADCuF,EAAA7E,EACDV,EADC,CALH,aACA,gBACA,YACA,eACA,eASF,OACEV,GAAA,cAACoF,EAAA7D,EAAAC,MAAA,GACKyE,GACA9E,GACAwE,GAHL,CAIC,KAAK,QACL,OAAQzE,EACR,IAAKD,IAEJY,CACH,CAEJ,EAEakG,GAAQ/H,GAAM,WAAW8H,EAAM,ECxE5C,OAAO9H,OAAW,QAiBX,IAAMgI,GAAc,CACzBxH,EACAS,IACG,CACH,IAAkER,EAAAD,EAA1D,UAAAqB,EAAU,OAAAX,EAAS,mBArB7B,EAqBoET,EAAfkF,EAAAvE,EAAeX,EAAf,CAA3C,WAAU,WAClB,OACET,GAAA,cAACsG,GAAA9E,EAAA,CAAkB,IAAKP,EAAK,OAAQC,EAAQ,KAAK,SAAYyE,GAC3D9D,CACH,CAEJ,EAEaoG,GAAajI,GAAM,WAAWgI,EAAW,ECtB/C,IAAMD,GAAQA,GACrBA,GAAM,MAAQE,GCRd,OAAOjI,IAAS,UAAAiC,GAAQ,aAAAD,OAAiB,QCAzC,OAAOhC,GACL,eAAA+B,OAIK,QACP,OAAS,MAAAoF,OAAU,UACnB,OACE,OAAAT,OAIK,uBCZP,OAAS,OAAArE,OAAW,UACpB,OAAOC,MAAY,yBAQnB,IAAM4F,GAAgB,CAAC,CAAE,KAAAtF,EAAM,QAAAtB,CAAQ,IAA0B,CAC/D,IAAM6G,EAAgB7G,IAAY,OAClC,OAAIsB,IAAS,QACJ,CACL,QAASN,EAAO,UAChB,UAAW6F,EAAgB7F,EAAO,SAAWA,EAAO,UACpD,UAAW6F,EAAgB7F,EAAO,SAAWA,EAAO,SACtD,EAGK,CACL,QAAS6F,EAAgB7F,EAAO,UAAY,QAAQA,EAAO,QAAQ,GACnE,UAAW6F,EAAgB7F,EAAO,UAAY,OAC9C,UAAW6F,EAAgB7F,EAAO,UAAY,MAChD,CACF,EAEM8F,GAAY,CAAC,CACjB,WAAA5F,EACA,UAAAyB,EACA,WAAAoE,EAAa/F,EAAO,aACtB,IAIOE,GAAcyB,EAAYoE,EAAa,EAAIA,EAS5CC,GAA6B,CAAC,CAClC,WAAA9F,EACA,UAAAyB,CACF,IAIMzB,EACK,CACL,YAAaF,EAAO,QACpB,UAAW,MACb,EAEE2B,EACK,CACL,YAAa3B,EAAO,OACpB,UAAWA,EAAO,YACpB,EAEK,CAAC,EAGJS,GAAY,CAAC,CACjB,GAAA8D,EACA,WAAArE,EACA,UAAAyB,EACA,KAAArB,EACA,OAAA2F,EACA,QAAAjH,EAAU,KACZ,IAA2B,CACzB,IAAMkH,EAAgB,CACpB,IAAK,CACH,aAAclG,EAAO,mBACrB,WAAYA,EAAO,YACnB,SAAUA,EAAO,SACnB,EACA,KAAM,CACJ,aAAcA,EAAO,kBACrB,WAAYA,EAAO,gBACnB,SAAUA,EAAO,aACnB,CACF,EAEA,MAAO,CACL,sBAAuBD,GAAI,CACzB,SAAU,WACV,QAAS,OACT,MAAO,OACP,OAAQ+F,GAAU,CAAE,WAAA5F,EAAY,UAAAyB,CAAU,CAAC,CAC7C,CAAC,EACD,MAAO5B,GAAId,EAAAC,IAAA,CACT,QAAS,OACT,UAAWc,EAAO,sBAClB,UAAW,aACX,gBAAiBE,EAAaF,EAAO,QAAUA,EAAO,WACtD,OAAQ,aAAa2B,EAAY3B,EAAO,OAASA,EAAO,OAAO,GAC/D,MAAOA,EAAO,QACd,WAAYA,EAAO,iBACnB,OAAQ,EACR,OAAQE,EAAa,cAAgB,OACrC,MAAO,OACP,OAAQ4F,GAAU,CAAE,WAAA5F,EAAY,UAAAyB,CAAU,CAAC,GACxCuE,EAAclH,CAAO,GAGpBuF,IAAO,WAAa,CAAE,OAAA0B,CAAO,EAAIL,GAAc,CAAE,KAAAtF,EAAM,QAAAtB,CAAQ,CAAC,GAf3D,CAiBT,iBAAkB,CAChB,MAAOgB,EAAO,OAChB,EAEA,oCAAqCd,EAAA,CACnC,YAAac,EAAO,QACpB,UAAWA,EAAO,aACfgG,GAA2B,CAAE,WAAA9F,EAAY,UAAAyB,CAAU,CAAC,EAE3D,EAAC,EAED,cAAe5B,GAAI,CACjB,YAAaC,EAAO,SACtB,CAAC,EAED,gBAAiBD,GAAI,CACnB,SAAU,WACV,cAAe,OACf,IAAK,EACL,OAAQ,EACR,KAAMO,IAAS,QAAUN,EAAO,UAAYA,EAAO,SACnD,QAAS,OACT,WAAY,SACZ,OAAQA,EAAO,aACjB,CAAC,CACH,CACF,EAEOmG,GAAQ1F,GD1Hf,OAAS,cAAAhC,OAAkB,wBAE3B,IAAM2H,GAAoB,QAU1B,SAASC,GACPnI,EACAS,EACA,CACA,IAwBIR,EAAAD,EAvBF,IAAAqG,EAAK6B,GACL,UAAAtE,EACA,WAAA5B,EACA,WAAAwD,EACA,WAAA9B,EACA,UAAAD,EACA,GAAA5C,EACA,KAAAiD,EACA,OAAAR,EACA,SAAAF,EACA,QAAAC,EACA,UAAAE,EACA,OAAA7C,EAAS,mBACT,KAAAiC,EAAO,OACP,MAAAa,EAAQ,OACR,YAAA4E,EACA,cAAAzE,EAAgB,GAChB,MAAA0E,EACA,KAAAC,EACA,aAAAC,EACA,KAAAnG,EAAO,SACP,OAAA2F,EAAS,UAtDb,EAwDM9H,EADCU,EAAAC,EACDX,EADC,CAtBH,KACA,YACA,aACA,aACA,aACA,YACA,KACA,OACA,SACA,WACA,UACA,YACA,SACA,OACA,QACA,cACA,gBACA,QACA,OACA,eACA,OACA,WAGIa,EAAUP,GAAW,EACrBsC,EAASoF,GAAe,CAC5B,GAAA5B,EACA,WAAArE,EACA,UAAAyB,EACA,KAAArB,EACA,OAAA2F,EACA,QAAAjH,CACF,CAAC,EAEKuD,EAAc9C,GACjB+C,GAA0D,CACzDA,EAAE,QAAQ,EACNjB,GACFA,EAAQiB,CAAC,CAEb,EACA,CAACjB,CAAO,CACV,EAEMmF,GAAejH,GAClB+C,GAAqC,CACpCA,EAAE,QAAQ,EACN,EAAAtC,GAAcwD,IAEdpC,GACFA,EAASkB,CAAC,CAEd,EACA,CAAClB,EAAUpB,EAAYwD,CAAU,CACnC,EAEMhB,EAAgBjD,GACnB+C,GAAuC,CACtCA,EAAE,QAAQ,EAENf,GACFA,EAAUe,CAAC,EAGTA,EAAE,YAAY,OAAS,UAAYX,GACrCW,EAAE,cAAc,KAAK,CAEzB,EACA,CAACX,EAAeJ,CAAS,CAC3B,EAEMkF,GAAcH,GAClB9I,EAAA,cAAC0G,GAAA,CAAI,GAAG,OAAO,UAAWrD,EAAO,iBAC9BrD,EAAM,aAAa8I,EAAM,CACxB,KAAM,OACN,QAAS,QACT,cAAe,EACjB,CAAC,CACH,EAGI7B,GAAUJ,EAEVqC,EAAgBC,GACpBnJ,EAAA,cAACiH,GAAA1F,EAAAC,EAAA,GACKL,GADL,CAEC,MAAO6C,EACP,aAAc+E,EACd,eAAc7H,EACd,MAAO2H,EACP,YAAaD,EACb,UAAWzB,GAAG9D,EAAO,MAAO8F,EAAe/E,CAAS,EACpD,KAAME,EACN,KAAMnB,EACN,IAAKlC,EACL,GAAII,EACJ,SAAU2E,EACV,gBAAeA,EAAa,OAAS,OACrC,gBAAe9B,EAAa,OAAS,OACrC,eAAcD,EAAY,OAAS,OACnC,mBACE5C,EAAK,GAAGA,CAAE,IAAI4C,EAAY,aAAe,UAAU,GAAK,OAE1D,SAAUzB,EACV,SAAU0B,EACV,SAAU8E,GACV,OAAQlF,EACR,UAAWkB,EACX,QAASH,EACT,KAAMjC,GACR,EAGF,OAAIkG,EAEA9I,EAAA,cAAC0G,GAAA,CAAI,GAAG,MAAM,UAAWrD,EAAO,uBAC7B6F,EAAa7F,EAAO,aAAa,EACjC4F,EACH,EAIGC,EAAa,CACtB,CAEAP,GAAW,YAAc,YAElB,IAAMS,EAITpJ,EAAM,WAAW2I,EAAU,ED9JxB,IAAMU,GAAa,CACxB5I,EAgBAQ,IACG,CAjBH,IAAAP,EAAAD,EACE,WAAA2D,EACA,OAAAlD,EAAS,mBACT,GAAAG,EACA,MAAA2C,EACA,aAAA+E,EACA,SAAAnF,EACA,QAAAC,EACA,UAAAI,EACA,WAAAzB,EACA,WAAA0B,EACA,WAAA8B,EACA,KAAApD,EAAO,SACP,UAAAkD,CApBJ,EAOEpF,EAcKS,EAAAC,EAdLV,EAcK,CAbH,YACA,SACA,KACA,QACA,eACA,WACA,UACA,YACA,aACA,aACA,aACA,OACA,cAKF,IAMID,EAAAF,EAAe,CACjB,GAAAc,EACA,UAAA4C,EACA,WAAAzB,EACA,WAAA0B,EACA,WAAA8B,CACF,CAAC,EAXC,cAAAD,EACA,UAAWuD,EACX,cAAAzD,EACA,WAAY0D,CA7BhB,EA+BM9I,EADCwF,EAAA7E,EACDX,EADC,CAJH,eACA,YACA,gBACA,eAUFuB,GAAU,IAAM,CAvClB,IAAAvB,EAwCQqF,IAAc,QAAa,OAAOC,GAAiB,aACrDA,EAAaD,CAAS,EACtBD,GAAcpF,EAAAuD,GAAA,KAAAA,EAAS+E,IAAT,KAAAtI,EAAyB,EAAE,EAE7C,EAAG,CAACqF,EAAWC,EAAcF,EAAekD,EAAc/E,CAAK,CAAC,EAEhE,IAAMwF,EAAkBhE,GAAU,CAC5B,OAAOK,GAAkB,YAC3BA,EAAcL,EAAM,OAAO,KAAK,EAElC5B,GAAA,MAAAA,EAAW4B,EACb,EAEMd,EAAWzC,GAAyB,IAAI,EACxC0C,EAAW1D,GAAOyD,EAExB,OACE1E,GAAA,cAACoJ,EAAA7H,EAAAC,IAAA,CACC,KAAK,QACDL,GACA8E,GAHL,CAIC,OAAQ/E,EACR,IAAKyD,EACL,SAAUmB,EAAY0D,EAAiB5F,EACvC,QAASC,EACT,GAAG,QACH,UAAWO,EACX,MAAOJ,EACP,aAAc+E,EACd,KAAMnG,EACN,UAAWkD,GACb,CAEJ,EAEa2D,GAAYzJ,GAAM,WAAWqJ,EAAU,EG3EpD,OAAOrJ,OAAW,QAClB,OAAS,MAAAmH,OAAU,UACnB,OACE,SAAAhB,OAGK,uBCNP,OAAS,OAAA9D,OAAW,UACpB,OAAOC,OAAY,yBAGnB,IAAMoH,GAAqB,CAAC,CAAE,QAAAC,EAAS,QAAArI,CAAQ,IAAM,CACnD,IAAMsI,EACJtI,IAAY,OAASgB,GAAO,kBAAoBA,GAAO,mBAEnDuH,EACJvI,IAAY,OACR,CACE,QAAS,CACP,MAAO,OACP,OAAQ,MACV,CACF,EACA,CAAC,EAEP,OAAIqI,IAAY,OACPtH,GAAIb,EAAA,CACT,oBAAqB,CACnB,aAAcoI,EACd,OAAQ,MACV,GACGC,EACJ,EAGIxH,GAAId,EAAAC,EAAA,CACT,SAAU,WACV,oBAAqB,CACnB,aAAc,eACd,OAAQ,MACV,GACGqI,GANM,CAOT,QAAS,CACP,YAAa,kBACb,sCAAuC,CACrC,UAAW,iBACb,EACA,6DAA8D,CAC5D,uBAAwB,GAAGD,CAAmB,cAC9C,oBAAqB,GAAGA,CAAmB,aAC7C,EACA,0DAA2D,CACzD,wBAAyB,GAAGA,CAAmB,cAC/C,qBAAsB,GAAGA,CAAmB,cAC5C,YAAa,cACf,EACA,0BAA2B,CACzB,OAAQtH,GAAO,cAAgB,CACjC,CACF,CACF,EAAC,CACH,EAEOwH,GAAQ,CAAC,CAAE,QAAAH,EAAS,QAAArI,CAAQ,KAA0B,CAC3D,WAAYoI,GAAmB,CAAE,QAAAC,EAAS,QAAArI,CAAQ,CAAC,CACrD,GDjDA,OAAS,cAAAP,OAAkB,wBAW3B,IAAMgJ,GAAc,CAClBvJ,EACAS,IACG,CACH,IAAiER,EAAAD,EAAzD,UAAAqB,EAAU,UAAAuC,EAAW,QAAAuF,EAAU,MAxBzC,EAwBmElJ,EAAfU,EAAAC,EAAeX,EAAf,CAA1C,WAAU,YAAW,YACvBa,EAAUP,GAAW,EACrBsC,EAASyG,GAAU,CAAE,QAAAH,EAAS,QAAArI,CAAQ,CAAC,EAC7C,OACEtB,GAAA,cAACmG,GAAA5E,EAAAC,EAAA,GACKL,GADL,CAEC,QAASwI,EACT,IAAK1I,EACL,UAAS,GACT,UAAWkG,GAAG9D,EAAO,WAAYe,CAAS,IAEzCvC,CACH,CAEJ,EAEamI,GAAahK,GAAM,WAAW+J,EAAW,EEjC/C,IAAMN,GAAYA,GACzBA,GAAU,MAAQO,GCRlB,OAAOhK,OAAW,QAOlB,IAAMiK,GAAU,CACdzJ,EACAS,IACG,CACH,IAQIR,EAAAD,EAPF,QAAAU,EAAS,eACT,GAAAG,EACA,WAAAmB,EACA,UAAAyB,EACA,WAAAC,EACA,SAAArC,CAjBJ,EAmBMpB,EADCU,EAAAC,EACDX,EADC,CANH,SACA,KACA,aACA,YACA,aACA,aAYEC,EAAAH,EAAe,CACjB,GAAAc,EACA,WAAAmB,EACA,UAAAyB,EACA,WAAAC,CACF,CAAC,EAXC,YAAA0B,EACA,cAAAC,EACA,UAAAC,EACA,aAAAC,EACA,WAAAC,CA3BJ,EA6BMtF,EADCuF,EAAA7E,EACDV,EADC,CALH,aACA,gBACA,YACA,eACA,eASF,OACEV,GAAA,cAACoF,EAAA7D,EAAAC,IAAA,GACKyE,GACA9E,GAFL,CAGC,OAAQD,EACR,KAAK,SACL,IAAKD,IAEJY,CACH,CAEJ,EAEaqI,GAASlK,GAAM,WAAWiK,EAAO,ECjD9C,OAAOjK,IAAS,aAAAgC,OAAiB,QACjC,OAAS,MAAAmF,OAAU,UCDnB,OAAS,OAAA9E,OAAW,UACpB,OAAOC,OAAY,yBAEZ,IAAMS,GAAY,KAChB,CACL,KAAMV,GAAI,CACR,QAAS,QAAQC,GAAO,QAAQ,EAClC,CAAC,EACD,MAAOD,GAAI,CACT,UAAW,CACT,YAAaC,GAAO,OACpB,UAAWA,GAAO,YACpB,CACF,CAAC,EACD,SAAUD,GAAI,CACZ,UAAW,CACT,YAAaC,GAAO,QACpB,UAAW,MACb,CACF,CAAC,CACH,GDJF,IAAM6H,GAAY,CAChB1J,EAeAQ,IACG,CAhBH,IAAAP,EAAAD,EACE,WAAA2D,EACA,WAAA5B,EACA,UAAAyB,EACA,WAAAC,EACA,WAAA8B,EACA,SAAApC,EACA,OAAA1C,EAAS,iBACT,GAAAG,EACA,OAAAkH,EAAS,WACT,UAAAzC,EACA,MAAA9B,EACA,aAAA+E,CA7BJ,EAiBErI,EAaKS,EAAAC,EAbLV,EAaK,CAZH,YACA,aACA,YACA,aACA,aACA,WACA,SACA,KACA,SACA,YACA,QACA,iBAKF,IAAM2C,EAASN,GAAU,EAQrBtC,EAAAF,EAAe,CACjB,GAAAc,EACA,UAAA4C,EACA,WAAAzB,EACA,WAAA0B,EACA,WAAA8B,CACF,CAAC,EAXC,cAAAD,EACA,UAAWuD,EACX,cAAAzD,EACA,WAAY0D,CAxChB,EA0CM9I,EADCwF,EAAA7E,EACDX,EADC,CAJH,eACA,YACA,gBACA,eAUFuB,GAAU,IAAM,CAlDlB,IAAAvB,EAmDQqF,IAAc,QAAa,OAAOC,GAAiB,aACrDA,EAAaD,CAAS,EACtBD,GAAcpF,EAAAuD,GAAA,KAAAA,EAAS+E,IAAT,KAAAtI,EAAyB,EAAE,EAE7C,EAAG,CAACsI,EAAcjD,EAAWD,EAAeE,EAAc/B,CAAK,CAAC,EAEhE,IAAMwF,EAAkBhE,GAAU,CAC5B,OAAOK,GAAkB,YAC3BA,EAAcL,EAAM,OAAO,KAAK,EAElC5B,GAAA,MAAAA,EAAW4B,EACb,EAEA,OACExF,GAAA,cAACoJ,EAAA7H,EAAAC,IAAA,GACKL,GACA8E,GAFL,CAGC,aAAc8C,EACd,MAAO/E,EACP,OAAQ9C,EACR,GAAG,WACH,IAAKD,EACL,UAAWkG,GAAG9D,EAAO,KAAMe,EAAW,CACpC,CAACf,EAAO,QAAQ,EAAGb,EACnB,CAACa,EAAO,KAAK,EAAGY,CAClB,CAAC,EACD,UAAW6B,EACX,OAAQyC,EACR,SAAUzC,EAAY0D,EAAiB5F,GACzC,CAEJ,EAKawG,GAAWpK,GAAM,WAAWmK,EAAS,EEvFlD,OAAOnK,OAAW,QAaX,IAAMqK,GAAU5J,GAIJ,CAJI,IAAAC,EAAAD,EACrB,QAAAS,EAAS,sBACT,WAAAsB,CAfF,EAauB9B,EAGlBS,EAAAC,EAHkBV,EAGlB,CAFH,SACA,eAGA,OAAOV,GAAA,cAAC,SAAAuB,EAAAC,EAAA,CAAO,eAAcN,GAAYC,GAAjC,CAA6C,SAAUqB,GAAY,CAC7E,ECnBA,OAAOxC,IACL,eAAA+B,OAIK,QACP,OAAS,MAAAoF,OAAU,UACnB,OAAS,mBAAAmD,OAAuB,wBCPhC,OAAOhI,MAAY,yBACnB,OAAS,OAAAD,MAAW,UAEb,SAASkI,GAAgB,CAAE,UAAAtG,EAAW,WAAAzB,EAAY,KAAAI,EAAM,QAAAtB,CAAQ,EAAG,CACxE,IAAMkJ,EAA0B,IAAM,CACpC,OAAQ,GAAM,CACZ,KAAK5H,IAAS,QACZ,MAAO,CACL,QAAS,GAAGN,EAAO,UAAU,IAAIA,EAAO,QAAQ,IAAIA,EAAO,UAAU,IAAIA,EAAO,SAAS,GACzF,OAAQ,MACV,EAEF,KAAKM,IAAS,UAAYtB,IAAY,QACpC,MAAO,CACL,QAAS,GAAGgB,EAAO,UAAU,IAAIA,EAAO,QAAQ,IAAIA,EAAO,UAAU,IAAIA,EAAO,SAAS,GACzF,OAAQ,OACR,SAAUA,EAAO,cACjB,WAAYA,EAAO,gBACnB,aAAcA,EAAO,iBACvB,EAEF,KAAKM,IAAS,UAAYtB,IAAY,OACtC,QACE,MAAO,CACL,QAAS,QAAQgB,EAAO,QAAQ,SAASA,EAAO,QAAQ,GACxD,OAAQ,MACV,CACJ,CACF,EAEMmI,EAASpI,EAAI,CACjB,MAAO,OACP,QAAS,QACT,WAAY,OACZ,gBAAiBC,EAAO,WACxB,MAAOA,EAAO,QAEd,SAAUA,EAAO,UACjB,WAAYA,EAAO,YACnB,WAAYA,EAAO,iBACnB,aAAcA,EAAO,mBACrB,UAAWA,EAAO,sBAClB,QAAS,OACT,OAAQ,aAAaA,EAAO,OAAO,GACnC,OAAQ,UACR,SAAU,SACV,aAAc,WAEd,iBAAkB,CAChB,MAAOA,EAAO,OAChB,EACA,UAAW,CACT,QAAS,OACT,UAAWA,EAAO,YAClB,YAAaA,EAAO,OACtB,EACA,mBAAoB,CAAE,MAAO,cAAe,WAAY,YAAa,EACrE,gBAAiB,CAAE,QAAS,MAAO,CACrC,CAAC,EAEKoI,EAAWrI,EAAI,CACnB,gBAAiBC,EAAO,QACxB,OAAQ,cACR,MAAOA,EAAO,QACd,oBAAqB,CAAE,YAAaA,EAAO,OAAQ,CACrD,CAAC,EAEKqI,EAAUtI,EAAI,CAClB,YAAaG,EAAaF,EAAO,OAASA,EAAO,OACjD,UAAW,CACT,YAAaA,EAAO,OACpB,UAAWA,EAAO,YACpB,CACF,CAAC,EAED,MAAO,CACL,QAASD,EAAI,CACX,SAAU,WACV,QAAS,QACT,MAAO,MACT,CAAC,EACD,OAAQA,EAAI,CACVoI,EACAD,EAAwB,EACxBhI,GAAckI,EACdzG,GAAa0G,CACf,CAAC,EACD,KAAMtI,EAAI,CACR,SAAU,WACV,MAAOC,EAAO,UACd,IAAK,MACL,UAAW,OACX,cAAe,MACjB,CAAC,CACH,CACF,CD/EA,OAAS,cAAAvB,OAAkB,wBAsB3B,IAAM6J,GAAU,CACdnK,EAeAQ,IACG,CAhBH,IAAAP,EAAAD,EACE,IAAAY,EACA,SAAAQ,EACA,UAAAuC,EACA,UAAAH,EACA,WAAAzB,EACA,WAAA0B,EACA,OAAAhD,EAAS,eACT,cAAAiD,EAAgB,GAChB,UAAAJ,EACA,KAAAnB,EAAO,SACP,MAAAoB,EAAQ,OACR,aAAA+E,EAAe,MAnDnB,EAuCErI,EAaKS,EAAAC,EAbLV,EAaK,CAZH,KACA,WACA,YACA,YACA,aACA,aACA,SACA,gBACA,YACA,OACA,QACA,iBAKF,IAAMuF,EAAY1F,EAAe,CAC/B,WAAAiC,EACA,UAAAyB,EACA,WAAAC,EACA,GAAA7C,CACF,CAAC,EAEKC,EAAUP,GAAW,EAErBsC,EAASkH,GAAgB,CAC7B,WAAYtE,EAAU,WACtB,UAAWA,EAAU,UACrB,KAAArD,EACA,QAAAtB,CACF,CAAC,EAEK0D,EAAgBjD,GACnB+C,GAAwC,CACnCA,EAAE,YAAY,OAAS,UAAYX,GACrCW,EAAE,cAAc,KAAK,EAEnBf,GACFA,EAAUe,CAAC,CAEf,EACA,CAACf,EAAWI,CAAa,CAC3B,EAEA,OACEnE,GAAA,cAAC,OAAI,UAAWmH,GAAG9D,EAAO,QAASe,CAAS,GAC1CpE,GAAA,cAAC,SAAAuB,EAAAC,EAAA,GACKL,GADL,CAEC,GAAI8E,EAAU,GACd,eAAc/E,EACd,UAAWmC,EAAO,OAClB,UAAW2B,EACX,SAAUiB,EAAU,WACpB,gBAAeA,EAAU,WAAa,OAAS,OAC/C,eAAcA,EAAU,UAAY,GAAO,OAC3C,mBACEA,EAAU,GACN,GAAGA,EAAU,EAAE,IACbA,EAAU,UAAY,aAAe,UACvC,GACA,OAEN,SAAUA,EAAU,WACpB,aAAc8C,EACd,MAAO/E,EACP,IAAK/C,IAEJY,CACH,EACA7B,GAAA,cAACsK,GAAA,CAAgB,UAAWjH,EAAO,KAAM,QAAQ,QAAQ,CAC3D,CAEJ,EAEawH,GAAS7K,GAAM,WAAW4K,EAAO,EE3GvC,IAAMC,GAASA,GACtBA,GAAO,OAASR,GCRhB,OAAOrK,IAAS,cAAAyB,GAAY,eAAAM,OAAmC,QAU/D,SAAS+I,GACPrK,EAMAQ,EACA,CAPA,IAAAP,EAAAD,EACE,UAAAoB,EACA,SAAAkJ,EACA,OAAA7J,EAAS,kBAdb,EAWER,EAIKS,EAAAC,EAJLV,EAIK,CAHH,WACA,WACA,WAKF,IAAMsK,EAAejJ,GAClByD,GAAsC,CACrCA,EAAM,eAAe,EACjBuF,GACFA,EAASvF,CAAK,CAElB,EACA,CAACuF,CAAQ,CACX,EACA,OACE/K,GAAA,cAAC,OAAAwB,EAAA,CACC,IAAKP,EACL,eAAcC,EACd,SAAU8J,GACN7J,GAEHU,CACH,CAEJ,CAEAiJ,GAAM,YAAc,OAEb,IAAMG,GAAOxJ,GAAWqJ,EAAK","sourcesContent":["import React from 'react';\nimport type {\n  CommonProps,\n  MarginProps,\n  PropsWithHTMLElement,\n  ExpandProps,\n} from '@contentful/f36-core';\nimport { Text } from '@contentful/f36-typography';\nimport { useFormControl } from '../FormControl/FormControlContext';\nimport { useDensity } from '@contentful/f36-utils';\n\nexport interface HelpTextInternalProps extends CommonProps, MarginProps {\n  children: React.ReactNode;\n}\n\nexport type HelpTextProps = PropsWithHTMLElement<HelpTextInternalProps, 'p'>;\n\n/**\n * `HelpText` is a styled copy block with guidance, placed in the context of form components.\n */\n\nexport const HelpText = React.forwardRef<\n  HTMLParagraphElement,\n  ExpandProps<HelpTextProps>\n>(({ testId = 'cf-ui-help-text', ...otherProps }, ref) => {\n  const { id } = useFormControl({});\n  const density = useDensity();\n  return (\n    <Text\n      as=\"p\"\n      fontColor=\"gray500\"\n      fontSize={density === 'high' ? 'fontSizeMHigh' : 'fontSizeM'}\n      lineHeight={density === 'high' ? 'lineHeightMHigh' : 'lineHeightM'}\n      testId={testId}\n      id={`${id}-helptext`}\n      marginTop=\"spacingXs\"\n      {...otherProps}\n      ref={ref}\n    />\n  );\n});\n\nHelpText.displayName = 'HelpText';\n","import { createContext, useContext } from 'react';\nimport type { FormControlContextProps } from './types';\n\nconst noop = () => {\n  // do nothing\n};\n\nexport const FormControlContext = createContext<\n  FormControlContextProps | undefined\n>(undefined);\n\nexport const useFormControlContext = () => {\n  const context = useContext(FormControlContext);\n  return context;\n};\n\nexport const useFormControl = (\n  props: Partial<FormControlContextProps>,\n): FormControlContextProps => {\n  const context = useFormControlContext();\n  if (!context) {\n    return props;\n  }\n  return {\n    isDisabled: props.isDisabled ?? context.isDisabled,\n    isInvalid: props.isInvalid ?? context.isInvalid,\n    isReadOnly: props.isReadOnly ?? context.isReadOnly,\n    isRequired: props.isRequired ?? context.isRequired,\n    id: props.id ?? context.id,\n    maxLength: context.maxLength,\n    inputValue: context.inputValue,\n    setMaxLength: context.setMaxLength || noop,\n    setInputValue: context.setInputValue || noop,\n  };\n};\n","import React, { forwardRef } from 'react';\nimport {\n  Flex,\n  type CommonProps,\n  type MarginProps,\n  type PropsWithHTMLElement,\n  type ExpandProps,\n} from '@contentful/f36-core';\nimport { ErrorCircleOutlineIcon } from '@contentful/f36-icons';\nimport { Text } from '@contentful/f36-typography';\nimport { useFormControl } from '../FormControl/FormControlContext';\nimport { useDensity } from '@contentful/f36-utils';\n\nexport interface ValidationMessageInternalProps\n  extends CommonProps,\n    MarginProps {\n  children: React.ReactNode;\n}\n\nexport type ValidationMessageProps = PropsWithHTMLElement<\n  ValidationMessageInternalProps,\n  'div'\n>;\n\nexport const ValidationMessage = forwardRef<\n  HTMLDivElement,\n  ExpandProps<ValidationMessageProps>\n>(({ children, testId = 'cf-ui-validation-message', ...otherProps }, ref) => {\n  const { id } = useFormControl({});\n  const density = useDensity();\n\n  return (\n    <Flex\n      marginTop=\"spacing2Xs\"\n      {...otherProps}\n      ref={ref}\n      testId={testId}\n      alignItems=\"center\"\n      id={id ? `${id}-validation` : undefined}\n      aria-live=\"assertive\"\n    >\n      <Flex marginRight={density === 'high' ? 'spacing2Xs' : 'spacingXs'}>\n        <ErrorCircleOutlineIcon\n          size={density === 'high' ? 'tiny' : 'small'}\n          variant=\"negative\"\n          aria-hidden=\"true\"\n        />\n      </Flex>\n      <Text\n        as=\"p\"\n        fontColor=\"red600\"\n        fontSize={density === 'high' ? 'fontSizeMHigh' : 'fontSizeM'}\n        lineHeight={density === 'high' ? 'lineHeightMHigh' : 'lineHeightM'}\n      >\n        {children}\n      </Text>\n    </Flex>\n  );\n});\n\nValidationMessage.displayName = 'ValidationMessage';\n","import React from 'react';\nimport { useId, type ExpandProps } from '@contentful/f36-core';\nimport { BaseCheckbox, BaseCheckboxProps } from '../BaseCheckbox';\nimport { useFormControl } from '../FormControl/FormControlContext';\nimport { useBaseCheckboxGroup } from '../BaseCheckbox/BaseCheckboxGroupContext';\n\nexport type CheckboxProps = Omit<BaseCheckboxProps, 'type' | 'size'>;\n\nconst _Checkbox = (\n  props: ExpandProps<CheckboxProps>,\n  ref: React.Ref<HTMLInputElement>,\n) => {\n  const {\n    testId = 'cf-ui-checkbox',\n    id,\n    isDisabled,\n    isRequired,\n    isInvalid,\n    children,\n    onBlur,\n    onChange,\n    defaultChecked,\n    isChecked,\n    value,\n    name,\n    ...otherProps\n  } = props;\n\n  const inputId = useId(id, 'checkbox');\n\n  const groupProps = useBaseCheckboxGroup({\n    onBlur,\n    onChange,\n    value,\n    defaultChecked,\n    isChecked,\n    name,\n  });\n\n  // Removes the not needed properties that comes from FormControl context.\n  const {\n    inputValue,\n    setInputValue,\n    maxLength,\n    setMaxLength,\n    isReadOnly,\n    ...formProps\n  } = useFormControl({\n    id: inputId,\n    isDisabled,\n    isInvalid,\n    isRequired,\n  });\n\n  return (\n    <BaseCheckbox\n      {...formProps}\n      {...groupProps}\n      {...otherProps}\n      type=\"checkbox\"\n      testId={testId}\n      ref={ref}\n    >\n      {children}\n    </BaseCheckbox>\n  );\n};\n\nexport const Checkbox = React.forwardRef(_Checkbox);\n","import React, { useCallback, useEffect, useRef } from 'react';\nimport type { PropsWithHTMLElement, ExpandProps } from '@contentful/f36-core';\nimport type { BaseCheckboxInternalProps } from './types';\nimport { GhostCheckbox } from './GhostCheckbox';\nimport getStyles from './BaseCheckbox.styles';\nimport { Text } from '@contentful/f36-typography';\nimport { Flex } from '@contentful/f36-core';\nimport { useDensity } from '@contentful/f36-utils';\nimport { HelpText } from '../HelpText/HelpText';\nimport { useFormControl } from '../FormControl/FormControlContext';\n\nexport type BaseCheckboxProps = PropsWithHTMLElement<\n  BaseCheckboxInternalProps,\n  'label',\n  'htmlFor'\n>;\n\nfunction _BaseCheckbox(\n  props: ExpandProps<BaseCheckboxProps>,\n  ref: React.RefObject<HTMLInputElement>,\n) {\n  const {\n    isChecked = undefined,\n    onChange,\n    onFocus,\n    onBlur,\n    onKeyDown,\n    type = 'checkbox',\n    value,\n    isDisabled,\n    isIndeterminate,\n    isInvalid,\n    isRequired = false,\n    id,\n    willBlurOnEsc = true,\n    testId = 'cf-ui-base-checkbox',\n    className = '',\n    defaultChecked = undefined,\n    name,\n    inputProps = {},\n    children,\n    'aria-label': ariaLabel,\n    size = 'medium',\n    helpText,\n    ...otherProps\n  } = props;\n  const density = useDensity();\n  const inputRef = useRef<HTMLInputElement>(null);\n  const finalRef = ref || inputRef;\n  const { id: formFieldId } = useFormControl({});\n\n  useEffect(() => {\n    if (finalRef.current) {\n      finalRef.current.indeterminate = isIndeterminate;\n    }\n  }, [isIndeterminate, finalRef]);\n\n  const styles = getStyles({ isDisabled, type, size, density });\n\n  const handleFocus = useCallback(\n    (e) => {\n      e.persist();\n      if (onFocus) {\n        onFocus(e);\n      }\n    },\n    [onFocus],\n  );\n\n  const handleBlur = useCallback(\n    (e) => {\n      e.persist();\n      if (onBlur) {\n        onBlur(e);\n      }\n    },\n    [onBlur],\n  );\n\n  const handleKeyDown = useCallback(\n    (e) => {\n      e.persist();\n      if (willBlurOnEsc && e.key === 'Escape') {\n        finalRef?.current?.blur();\n      }\n      if (onKeyDown) {\n        onKeyDown(e);\n      }\n    },\n    [willBlurOnEsc, onKeyDown, finalRef],\n  );\n\n  const ariaChecked =\n    typeof isChecked !== undefined ? isChecked : defaultChecked;\n\n  const helpTextId = id ? `${id}-helptext` : undefined;\n  const ariaDescribedBy = isInvalid\n    ? `${formFieldId}-validation`\n    : helpText\n    ? helpTextId\n    : undefined;\n\n  return (\n    <Flex alignItems=\"flex-start\" flexDirection=\"column\" className={className}>\n      <Text\n        as=\"label\"\n        fontColor=\"gray900\"\n        fontWeight=\"fontWeightMedium\"\n        fontSize={density === 'high' ? 'fontSizeMHigh' : 'fontSizeM'}\n        lineHeight={density === 'high' ? 'lineHeightMHigh' : 'lineHeightM'}\n        className={styles.wrapper}\n        htmlFor={id}\n        testId={testId}\n        {...otherProps}\n      >\n        <input\n          {...inputProps}\n          aria-label={ariaLabel}\n          checked={isChecked}\n          defaultChecked={defaultChecked}\n          className={styles.input}\n          type={type === 'switch' ? 'checkbox' : type}\n          onChange={onChange}\n          onFocus={handleFocus}\n          onBlur={handleBlur}\n          onKeyDown={handleKeyDown}\n          value={value}\n          disabled={isDisabled}\n          role={type}\n          aria-checked={isIndeterminate ? 'mixed' : ariaChecked}\n          ref={finalRef}\n          required={isRequired}\n          aria-required={isRequired ? 'true' : undefined}\n          aria-invalid={isInvalid ? 'true' : undefined}\n          aria-describedby={ariaDescribedBy}\n          id={id}\n          name={name}\n        />\n        <GhostCheckbox\n          type={type}\n          isDisabled={isDisabled}\n          isIndeterminate={isIndeterminate}\n          size={size}\n        />\n        {children}\n      </Text>\n      {helpText && (\n        <HelpText id={helpTextId} className={styles.helpText}>\n          {helpText}\n        </HelpText>\n      )}\n    </Flex>\n  );\n}\n\n_BaseCheckbox.displayName = 'BaseCheckbox';\n\nexport const BaseCheckbox = React.forwardRef(_BaseCheckbox);\n","import React from 'react';\nimport { DoneIcon, MinusIcon, CloseIcon } from '@contentful/f36-icons';\nimport type { BaseCheckboxInternalProps } from './types';\nimport getStyles from './GhostCheckbox.styles';\n\nexport type GhostCheckboxProps = Pick<\n  BaseCheckboxInternalProps,\n  'type' | 'isIndeterminate' | 'isDisabled' | 'size'\n>;\n\nexport const GhostCheckbox = (props: GhostCheckboxProps) => {\n  const { type, isIndeterminate, isDisabled, size = 'medium' } = props;\n  const styles = getStyles({ isDisabled, size });\n\n  if (type === 'switch') {\n    return (\n      <span className={styles.switch}>\n        <DoneIcon size=\"tiny\" variant=\"white\" />\n        <CloseIcon size=\"tiny\" variant=\"white\" />\n      </span>\n    );\n  }\n\n  return (\n    <span className={styles[type]}>\n      {type === 'checkbox' &&\n        (isIndeterminate ? (\n          <MinusIcon size=\"tiny\" variant=\"white\" />\n        ) : (\n          <DoneIcon size=\"tiny\" variant=\"white\" />\n        ))}\n    </span>\n  );\n};\n","import { css } from 'emotion';\nimport type { GhostCheckboxProps } from './GhostCheckbox';\nimport tokens from '@contentful/f36-tokens';\n\ntype stylesArgs = Pick<GhostCheckboxProps, 'isDisabled' | 'size'>;\n\nconst getBaseGhostStyles = ({ isDisabled }) =>\n  css({\n    alignItems: 'center',\n    background: !isDisabled ? tokens.colorWhite : tokens.gray300,\n    border: `2px solid ${tokens.gray300}`,\n    boxSizing: 'border-box',\n    display: 'inline-flex',\n    height: tokens.spacingM,\n    justifyContent: 'center',\n    width: tokens.spacingM,\n  });\n\nconst getCheckboxStyles = ({ isDisabled }) => {\n  return css([\n    getBaseGhostStyles({ isDisabled }),\n    {\n      backgroundColor: !isDisabled ? tokens.colorWhite : tokens.gray300,\n      borderRadius: tokens.borderRadiusSmall,\n      '& svg': {\n        fill: !isDisabled ? tokens.colorWhite : tokens.gray300,\n      },\n      'input:indeterminate + &, input:checked + &': {\n        backgroundColor: !isDisabled ? tokens.blue600 : tokens.gray300,\n        borderColor: !isDisabled ? tokens.blue600 : tokens.gray300,\n        '& svg': {\n          fill: !isDisabled ? tokens.colorWhite : tokens.gray600,\n        },\n      },\n    },\n  ]);\n};\n\nconst getRadioStyles = ({ isDisabled }) => {\n  return css([\n    getBaseGhostStyles({ isDisabled }),\n    {\n      backgroundColor: !isDisabled ? tokens.colorWhite : tokens.gray300,\n      borderRadius: '50%',\n      '&:before': {\n        content: '\"\"',\n        borderRadius: '50%',\n        backgroundColor: !isDisabled ? tokens.colorWhite : tokens.gray300,\n        width: tokens.borderRadiusMedium,\n        height: tokens.borderRadiusMedium,\n      },\n      'input:checked + &': {\n        backgroundColor: !isDisabled ? tokens.blue600 : tokens.gray300,\n        borderColor: !isDisabled ? tokens.blue600 : tokens.gray300,\n        '&:before': {\n          backgroundColor: !isDisabled ? tokens.colorWhite : tokens.gray600,\n        },\n      },\n    },\n  ]);\n};\n\nconst getSwitchStyles = ({ isDisabled, size }) => {\n  const sizeStyle =\n    size === 'small'\n      ? {\n          height: tokens.spacingM,\n          width: tokens.spacingXl,\n          '&:before': {\n            height: tokens.spacingS,\n            width: tokens.spacingS,\n          },\n          'input:checked + &:before': {\n            transform: `translateX(${tokens.spacingM})`,\n          },\n        }\n      : {\n          height: '20px',\n          width: '40px',\n          '&:before': {\n            height: tokens.spacingM,\n            width: tokens.spacingM,\n          },\n          'input:checked + &:before': {\n            transform: 'translateX(20px)',\n          },\n        };\n\n  const disabledStyle = {\n    '&, input:checked + &': {\n      background: tokens.gray200,\n      borderColor: tokens.gray200,\n    },\n    '&:before': {\n      background: tokens.gray400,\n    },\n    '& svg': {\n      fill: tokens.gray400,\n    },\n  };\n\n  return css([\n    getBaseGhostStyles({ isDisabled }),\n    {\n      background: tokens.gray600,\n      borderColor: tokens.gray600,\n      borderRadius: tokens.borderRadiusSmall,\n      justifyContent: 'space-around',\n      position: 'relative',\n      flexShrink: 0,\n      '&:before': {\n        background: tokens.colorWhite,\n        borderRadius: `calc(${tokens.borderRadiusSmall}/2)`,\n        content: '\"\"',\n        left: 0,\n        position: 'absolute',\n        transition: `transform ${tokens.transitionEasingDefault} ${tokens.transitionDurationDefault}`,\n      },\n      'input:checked + &': {\n        background: tokens.blue600,\n        borderColor: tokens.blue600,\n      },\n    },\n    sizeStyle,\n    isDisabled && disabledStyle,\n  ]);\n};\n\nconst getStyles = (args: stylesArgs) => {\n  const { isDisabled, size } = args;\n  return {\n    radio: getRadioStyles({ isDisabled }),\n    checkbox: getCheckboxStyles({ isDisabled }),\n    switch: getSwitchStyles({ isDisabled, size }),\n  };\n};\n\nexport default getStyles;\n","import { css } from 'emotion';\nimport tokens from '@contentful/f36-tokens';\nimport type { BaseCheckboxInternalProps } from './types';\n\nconst sizeToStyle = (size) => {\n  if (size === 'small') {\n    return {\n      height: tokens.spacingM,\n      width: tokens.spacingXl,\n    };\n  }\n\n  return {\n    height: '20px',\n    width: '40px',\n  };\n};\n\nconst getHelpTextStyle = ({ size, type, density }) => {\n  let inputWidth = tokens.spacingM;\n  if (type === 'switch') {\n    inputWidth = sizeToStyle(size).width;\n  }\n\n  return {\n    marginLeft: `calc(${inputWidth} + ${tokens.spacingXs})`,\n    marginTop: 0,\n    fontSize: density === 'high' ? tokens.fontSizeMHigh : tokens.fontSizeM,\n    lineHeight:\n      density === 'high' ? tokens.lineHeightMHigh : tokens.lineHeightM,\n  };\n};\n\nconst getStyles = ({\n  isDisabled,\n  type,\n  size,\n  density,\n}: Pick<\n  BaseCheckboxInternalProps,\n  'isDisabled' | 'type' | 'size' | 'density'\n>) => ({\n  wrapper: css({\n    alignItems: 'center',\n    display: 'inline-flex',\n    position: 'relative',\n    margin: '0',\n    columnGap: tokens.spacingXs,\n  }),\n  input: css([\n    {\n      cursor: isDisabled ? 'not-allowed' : 'pointer',\n      height: tokens.spacingM,\n      margin: 0,\n      opacity: 0,\n      position: 'absolute',\n      width: tokens.spacingM,\n      zIndex: tokens.zIndexDefault,\n      '+ span': {\n        minWidth: tokens.spacingM,\n      },\n      '&:focus': {\n        outline: 'none',\n        '& + span': {\n          boxShadow: tokens.glowPrimary,\n        },\n      },\n      '&:focus:not(:focus-visible) + span': {\n        boxShadow: 'unset',\n      },\n      '&:focus-visible + span': {\n        boxShadow: tokens.glowPrimary,\n      },\n    },\n    type === 'switch' && sizeToStyle(size),\n  ]),\n  helpText: css(getHelpTextStyle({ size, type, density })),\n});\n\nexport default getStyles;\n","import { createContext, useContext } from 'react';\nimport { BaseCheckboxProps } from './BaseCheckbox';\nimport { BaseCheckboxGroupProps } from './BaseCheckboxGroup';\n\nexport type BaseCheckboxGroupContextProps = Omit<\n  BaseCheckboxGroupProps,\n  'children'\n>;\nexport type BaseCheckboxGroupContextValue = Pick<\n  BaseCheckboxProps,\n  'isChecked' | 'defaultChecked' | 'onChange' | 'onBlur' | 'name' | 'value'\n>;\n\nexport const BaseCheckboxGroupContext = createContext<\n  BaseCheckboxGroupContextProps | undefined\n>(undefined);\n\nexport const useBaseCheckboxGroupContext = () => {\n  const context = useContext(BaseCheckboxGroupContext);\n  return context;\n};\n\nexport const useBaseCheckboxGroup = (\n  props: Partial<BaseCheckboxProps>,\n): BaseCheckboxGroupContextValue => {\n  const context = useBaseCheckboxGroupContext();\n  if (!context) {\n    return props;\n  }\n\n  let isChecked, defaultChecked;\n\n  if (context.type === 'checkbox') {\n    isChecked =\n      context.value === undefined\n        ? undefined\n        : context.value?.includes(props.value);\n    defaultChecked =\n      isChecked !== undefined\n        ? undefined\n        : context.defaultValue?.includes(props.value);\n  }\n\n  if (context.type === 'radio') {\n    isChecked =\n      context.value === undefined ? undefined : context.value === props.value;\n    defaultChecked =\n      isChecked !== undefined\n        ? undefined\n        : context.defaultValue === props.value;\n  }\n\n  const onChange = (event) => {\n    props.onChange && props.onChange(event);\n    context.onChange && context.onChange(event);\n  };\n\n  const onBlur = (event) => {\n    props.onBlur && props.onBlur(event);\n    context.onBlur && context.onBlur(event);\n  };\n\n  return {\n    defaultChecked,\n    isChecked,\n    onBlur,\n    onChange,\n    name: context.name ?? props.name,\n    value: props.value,\n  };\n};\n","import React from 'react';\nimport {\n  BaseCheckboxGroup,\n  BaseCheckboxGroupProps,\n} from '../BaseCheckbox/BaseCheckboxGroup';\nimport type { ExpandProps } from '@contentful/f36-core';\n\nexport interface CheckboxGroupProps\n  extends Omit<BaseCheckboxGroupProps, 'type'> {\n  /**\n   * Array of values of the checkboxes that should be checked for uncontrolled inputs\n   */\n  defaultValue?: Array<string>;\n  /**\n   * Array of values of the checkboxes that should be checked for controlled inputs\n   */\n  value?: Array<string>;\n}\n\nexport const _CheckboxGroup = (\n  props: ExpandProps<CheckboxGroupProps>,\n  ref: React.Ref<HTMLDivElement>,\n) => {\n  const { children, testId = 'cf-ui-checkbox-group', ...otherProps } = props;\n  return (\n    <BaseCheckboxGroup\n      ref={ref}\n      testId={testId}\n      type=\"checkbox\"\n      {...otherProps}\n    >\n      {children}\n    </BaseCheckboxGroup>\n  );\n};\n\nexport const CheckboxGroup = React.forwardRef(_CheckboxGroup);\n","import React, { type ChangeEventHandler, type FocusEventHandler } from 'react';\nimport {\n  Stack,\n  type CommonProps,\n  type ExpandProps,\n} from '@contentful/f36-core';\nimport { BaseCheckboxGroupContext } from './BaseCheckboxGroupContext';\n\nexport interface BaseCheckboxGroupProps extends CommonProps {\n  /**\n   * Handler that will be triggered when any checkbox inside the group loses focus\n   */\n  onBlur?: FocusEventHandler<HTMLInputElement>;\n  /**\n   * Handler that will be triggered when any checkbox inside the group has their checked state changed\n   */\n  onChange?: ChangeEventHandler<HTMLInputElement>;\n  /**\n   * Name that will be assigned to all checkboxes inside the group, unless a different name is passed to the checkbox\n   */\n  name?: string;\n  /**\n   * Elements that should be in the group\n   */\n  children: React.ReactNode;\n  /**\n   * Type of the inputs used within the group\n   */\n  type: 'checkbox' | 'radio';\n  /**\n   * Array of values for checkboxes or single value for radio, that should be checked for uncontrolled inputs\n   */\n  defaultValue?: Array<string> | string;\n  /**\n   * Array of values for checkboxes or single value for radio, that should be checked for controlled inputs\n   */\n  value?: Array<string> | string;\n}\n\nexport const _BaseCheckboxGroup = (\n  props: ExpandProps<BaseCheckboxGroupProps>,\n  ref: React.Ref<HTMLDivElement>,\n) => {\n  const {\n    children,\n    className,\n    testId = 'cf-ui-base-checkbox-group',\n    ...contextProps\n  } = props;\n  return (\n    <BaseCheckboxGroupContext.Provider value={contextProps}>\n      <Stack\n        ref={ref}\n        testId={testId}\n        className={className}\n        flexDirection=\"column\"\n        alignItems=\"flex-start\"\n        spacing=\"spacingXs\"\n      >\n        {children}\n      </Stack>\n    </BaseCheckboxGroupContext.Provider>\n  );\n};\n\nexport const BaseCheckboxGroup = React.forwardRef(_BaseCheckboxGroup);\n","import { Checkbox as OriginalCheckbox } from './Checkbox';\nimport { CheckboxGroup } from './CheckboxGroup';\n\ntype CompoundCheckbox = typeof OriginalCheckbox & {\n  Group: typeof CheckboxGroup;\n};\n\nexport const Checkbox = OriginalCheckbox as CompoundCheckbox;\nCheckbox.Group = CheckboxGroup;\n","import React, { useState } from 'react';\nimport {\n  useId,\n  type CommonProps,\n  type MarginProps,\n  type PolymorphicProps,\n  type PolymorphicComponent,\n  type ExpandProps,\n} from '@contentful/f36-core';\nimport { Box } from '@contentful/f36-core';\n\nimport { FormControlContext } from './FormControlContext';\nimport type { FormControlContextProps } from './types';\n\nconst FORM_CONTROL_DEFAULT_TAG = 'div';\n\nexport interface FormControlInternalProps\n  extends FormControlContextProps,\n    CommonProps,\n    MarginProps {\n  as?: 'div' | 'fieldset';\n  children: React.ReactNode;\n}\n\nexport type FormControlProps<\n  E extends React.ElementType = typeof FORM_CONTROL_DEFAULT_TAG,\n> = PolymorphicProps<FormControlInternalProps, E>;\n\nfunction _FormControl<\n  E extends React.ElementType = typeof FORM_CONTROL_DEFAULT_TAG,\n>(\n  {\n    as,\n    isInvalid,\n    isRequired,\n    isDisabled,\n    isReadOnly,\n    children,\n    marginBottom = 'spacingL',\n    id,\n    testId = 'cf-ui-form-control',\n    ...otherProps\n  }: FormControlProps<E>,\n  ref: React.Ref<any>,\n) {\n  const generatedId = useId(id, 'field-');\n  const [inputValue, setInputValue] = useState('');\n  const [maxLength, setMaxLength] = useState(0);\n  const roleAttr = as === 'fieldset' ? undefined : 'group';\n  const Element: React.ElementType = as || FORM_CONTROL_DEFAULT_TAG;\n\n  const context = {\n    id: generatedId,\n    isRequired,\n    isDisabled,\n    isInvalid,\n    isReadOnly,\n    inputValue,\n    setInputValue,\n    maxLength,\n    setMaxLength,\n  };\n\n  return (\n    <FormControlContext.Provider value={context}>\n      <Box\n        as={Element}\n        ref={ref}\n        role={roleAttr}\n        testId={testId}\n        marginBottom={marginBottom}\n        {...otherProps}\n      >\n        {children}\n      </Box>\n    </FormControlContext.Provider>\n  );\n}\n\n_FormControl.displayName = 'FormControl';\n\nexport const FormControl: PolymorphicComponent<\n  ExpandProps<FormControlInternalProps>,\n  typeof FORM_CONTROL_DEFAULT_TAG\n> = React.forwardRef(_FormControl);\n","import { cx } from 'emotion';\nimport React, { forwardRef, type ReactNode } from 'react';\nimport { getFormLabelStyles } from './FormLabel.styles';\nimport { useFormControl } from '../FormControl/FormControlContext';\nimport type {\n  CommonProps,\n  MarginProps,\n  PolymorphicProps,\n  PolymorphicComponent,\n  ExpandProps,\n} from '@contentful/f36-core';\nimport { Text } from '@contentful/f36-typography';\nimport { useDensity } from '@contentful/f36-utils';\n\nexport interface FormLabelInternalProps extends CommonProps, MarginProps {\n  /**\n   * Label value to show\n   */\n  children: ReactNode;\n  /**\n   * Whether or not the associated input element is required\n   *\n   * @default false\n   */\n  isRequired?: boolean;\n  /**\n   * Custom text to show in parentheses that gets rendered if the associated\n   * input is required\n   *\n   * @default \"required\"\n   */\n  requiredText?: string;\n  /**\n   * Defines how the element will be rendered\n   * @default label\n   */\n  as?: 'label' | 'legend';\n}\n\nconst FORM_LABEL_DEFAULT_TAG = 'label';\n\nexport type FormLabelProps<\n  E extends React.ElementType = typeof FORM_LABEL_DEFAULT_TAG,\n> = PolymorphicProps<FormLabelInternalProps, E>;\n\nfunction _FormLabel<\n  E extends React.ElementType = typeof FORM_LABEL_DEFAULT_TAG,\n>(\n  {\n    as,\n    children,\n    className,\n    isRequired,\n    requiredText = 'required',\n    testId = 'cf-ui-form-label',\n    ...otherProps\n  }: FormLabelProps<E>,\n  forwardedRef: React.Ref<HTMLLabelElement>,\n) {\n  const density = useDensity();\n  const styles = getFormLabelStyles();\n  const formControlProps = useFormControl({ isRequired });\n\n  const id = formControlProps.id ? formControlProps.id + '-label' : undefined;\n\n  const labelProps =\n    as !== 'legend'\n      ? {\n          htmlFor: otherProps.htmlFor || formControlProps.id,\n        }\n      : {};\n\n  const Element: React.ElementType = as || FORM_LABEL_DEFAULT_TAG;\n\n  return (\n    <Text\n      as={Element}\n      marginBottom=\"spacingXs\"\n      {...otherProps}\n      fontColor=\"gray900\"\n      id={id}\n      {...labelProps}\n      className={cx(styles.root, className)}\n      ref={forwardedRef}\n      testId={testId}\n      fontSize={density === 'high' ? 'fontSizeMHigh' : 'fontSizeM'}\n      lineHeight={density === 'high' ? 'lineHeightMHigh' : 'lineHeightM'}\n    >\n      {children}\n      {formControlProps.isRequired && (\n        <span className={styles.indicator}>({requiredText})</span>\n      )}\n    </Text>\n  );\n}\n\n_FormLabel.displayName = 'FormLabel';\n\nexport const FormLabel: PolymorphicComponent<\n  ExpandProps<FormLabelInternalProps>,\n  typeof FORM_LABEL_DEFAULT_TAG\n> = forwardRef(_FormLabel);\n","import tokens from '@contentful/f36-tokens';\nimport { css } from 'emotion';\n\nexport function getFormLabelStyles() {\n  return {\n    root: css({\n      display: 'inline-block',\n      fontWeight: tokens.fontWeightMedium,\n    }),\n    indicator: css({\n      color: tokens.gray500,\n      fontWeight: tokens.fontWeightNormal,\n      marginLeft: tokens.spacing2Xs,\n    }),\n  };\n}\n","import React, { forwardRef } from 'react';\nimport { cx } from 'emotion';\nimport type {\n  CommonProps,\n  PropsWithHTMLElement,\n  ExpandProps,\n} from '@contentful/f36-core';\nimport { Text } from '@contentful/f36-typography';\nimport { getCounterStyles } from './Counter.styles';\n\nimport { useFormControl } from '../FormControl/FormControlContext';\n\nexport type CounterProps = PropsWithHTMLElement<CommonProps, 'p'>;\n\nexport const Counter = forwardRef<\n  HTMLParagraphElement,\n  ExpandProps<CounterProps>\n>(({ testId = 'cf-ui-counter', className, ...otherProps }, ref) => {\n  const { maxLength, inputValue } = useFormControl({});\n  const styles = getCounterStyles();\n\n  return (\n    Boolean(maxLength) && (\n      <Text\n        as=\"p\"\n        fontColor=\"gray700\"\n        fontSize=\"fontSizeM\"\n        testId={testId}\n        marginTop=\"spacingXs\"\n        {...otherProps}\n        className={cx(styles.root, className)}\n        ref={ref}\n      >\n        {inputValue.length} / {maxLength}\n      </Text>\n    )\n  );\n});\n\nCounter.displayName = 'Counter';\n","import tokens from '@contentful/f36-tokens';\nimport { css } from 'emotion';\n\nexport function getCounterStyles() {\n  return {\n    root: css({\n      flexShrink: 0,\n      paddingLeft: tokens.spacingM,\n      textAlign: 'right',\n    }),\n  };\n}\n","import { FormControl as OriginalFormControl } from './FormControl';\nimport { FormLabel } from '../FormLabel';\nimport { ValidationMessage } from '../ValidationMessage';\nimport { HelpText } from '../HelpText';\nimport { Counter } from '../Counter';\n\ntype CompoundFormControl = typeof OriginalFormControl & {\n  Label: typeof FormLabel;\n  ValidationMessage: typeof ValidationMessage;\n  HelpText: typeof HelpText;\n  Counter: typeof Counter;\n};\n\nexport const FormControl = OriginalFormControl as CompoundFormControl;\nFormControl.Label = FormLabel;\nFormControl.ValidationMessage = ValidationMessage;\nFormControl.HelpText = HelpText;\nFormControl.Counter = Counter;\n","import React from 'react';\nimport { useId, type ExpandProps } from '@contentful/f36-core';\n\nimport { BaseCheckbox, BaseCheckboxProps } from '../BaseCheckbox';\nimport { useFormControl } from '../FormControl/FormControlContext';\nimport { useBaseCheckboxGroup } from '../BaseCheckbox/BaseCheckboxGroupContext';\n\nexport type RadioProps = Omit<\n  BaseCheckboxProps,\n  'type' | 'isIndeterminate' | 'size'\n>;\n\nconst _Radio = (\n  props: ExpandProps<RadioProps>,\n  ref: React.Ref<HTMLInputElement>,\n) => {\n  const {\n    testId = 'cf-ui-radio-button',\n    id,\n    isDisabled,\n    isInvalid,\n    isRequired,\n    children,\n    onBlur,\n    onChange,\n    defaultChecked,\n    isChecked,\n    value,\n    name,\n    ...otherProps\n  } = props;\n\n  const inputId = useId(id, 'radio');\n\n  const groupProps = useBaseCheckboxGroup({\n    onBlur,\n    onChange,\n    value,\n    defaultChecked,\n    isChecked,\n    name,\n  });\n\n  // Removes the not needed properties that comes from FormControl context.\n  const {\n    inputValue,\n    setInputValue,\n    maxLength,\n    setMaxLength,\n    isReadOnly,\n    ...formProps\n  } = useFormControl({\n    id: inputId,\n    isDisabled,\n    isInvalid,\n    isRequired,\n  });\n\n  return (\n    <BaseCheckbox\n      {...formProps}\n      {...otherProps}\n      {...groupProps}\n      type=\"radio\"\n      testId={testId}\n      ref={ref}\n    >\n      {children}\n    </BaseCheckbox>\n  );\n};\n\nexport const Radio = React.forwardRef(_Radio);\n","import React from 'react';\nimport {\n  BaseCheckboxGroup,\n  BaseCheckboxGroupProps,\n} from '../BaseCheckbox/BaseCheckboxGroup';\n\nexport interface RadioGroupProps extends Omit<BaseCheckboxGroupProps, 'type'> {\n  /**\n   * Value of the radio that should be checked for uncontrolled inputs\n   */\n  defaultValue?: string;\n  /**\n   * Value of the radio that should be checked for controlled inputs\n   */\n  value?: string;\n}\n\nexport const _RadioGroup = (\n  props: RadioGroupProps,\n  ref: React.Ref<HTMLDivElement>,\n) => {\n  const { children, testId = 'cf-ui-radio-group', ...groupProps } = props;\n  return (\n    <BaseCheckboxGroup ref={ref} testId={testId} type=\"radio\" {...groupProps}>\n      {children}\n    </BaseCheckboxGroup>\n  );\n};\n\nexport const RadioGroup = React.forwardRef(_RadioGroup);\n","import { Radio as OriginalRadio } from './Radio';\nimport { RadioGroup } from './RadioGroup';\n\ntype CompoundRadio = typeof OriginalRadio & {\n  Group: typeof RadioGroup;\n};\n\nexport const Radio = OriginalRadio as CompoundRadio;\nRadio.Group = RadioGroup;\n","import React, { useRef, useEffect } from 'react';\nimport { BaseInput } from '../BaseInput';\nimport { TextInputProps } from './types';\nimport { useFormControl } from '../FormControl/FormControlContext';\nimport type { ExpandProps } from '@contentful/f36-core';\n\nexport const _TextInput = (\n  {\n    className,\n    testId = 'cf-ui-text-input',\n    id,\n    value,\n    defaultValue,\n    onChange,\n    onFocus,\n    isInvalid,\n    isDisabled,\n    isRequired,\n    isReadOnly,\n    size = 'medium',\n    maxLength,\n    ...otherProps\n  }: ExpandProps<TextInputProps>,\n  ref: React.RefObject<HTMLInputElement>,\n) => {\n  const {\n    setMaxLength,\n    maxLength: contextMaxLength,\n    setInputValue,\n    inputValue: contextInputValue,\n    ...formProps\n  } = useFormControl({\n    id,\n    isInvalid,\n    isDisabled,\n    isRequired,\n    isReadOnly,\n  });\n\n  useEffect(() => {\n    if (maxLength !== undefined && typeof setMaxLength === 'function') {\n      setMaxLength(maxLength);\n      setInputValue(value ?? defaultValue ?? '');\n    }\n  }, [maxLength, setMaxLength, setInputValue, defaultValue, value]);\n\n  const handleOnChange = (event) => {\n    if (typeof setInputValue === 'function') {\n      setInputValue(event.target.value);\n    }\n    onChange?.(event);\n  };\n\n  const inputRef = useRef<HTMLInputElement>(null);\n  const finalRef = ref || inputRef;\n\n  return (\n    <BaseInput\n      type=\"text\"\n      {...otherProps}\n      {...formProps}\n      testId={testId}\n      ref={finalRef}\n      onChange={maxLength ? handleOnChange : onChange}\n      onFocus={onFocus}\n      as=\"input\"\n      className={className}\n      value={value}\n      defaultValue={defaultValue}\n      size={size}\n      maxLength={maxLength}\n    />\n  );\n};\n\nexport const TextInput = React.forwardRef(_TextInput);\n","import React, {\n  useCallback,\n  type FocusEvent,\n  type KeyboardEvent,\n  type ChangeEvent,\n} from 'react';\nimport { cx } from 'emotion';\nimport {\n  Box,\n  type PolymorphicProps,\n  type PolymorphicComponent,\n  type ExpandProps,\n} from '@contentful/f36-core';\n\nimport getInputStyles from './BaseInput.styles';\nimport { BaseInputInternalProps } from './types';\nimport { useDensity } from '@contentful/f36-utils';\n\nconst INPUT_DEFAULT_TAG = 'input';\n\nexport type BaseInputProps<\n  E extends React.ElementType = typeof INPUT_DEFAULT_TAG,\n> = PolymorphicProps<\n  BaseInputInternalProps,\n  E,\n  'disabled' | 'required' | 'readOnly'\n>;\n\nfunction _BaseInput<E extends React.ElementType = typeof INPUT_DEFAULT_TAG>(\n  props: BaseInputProps<E>,\n  ref: React.Ref<HTMLInputElement | HTMLTextAreaElement>,\n) {\n  const {\n    as = INPUT_DEFAULT_TAG,\n    className,\n    isDisabled,\n    isReadOnly,\n    isRequired,\n    isInvalid,\n    id,\n    name,\n    onBlur,\n    onChange,\n    onFocus,\n    onKeyDown,\n    testId = 'cf-ui-base-input',\n    type = 'text',\n    value = undefined,\n    placeholder,\n    willBlurOnEsc = true,\n    style,\n    icon,\n    defaultValue,\n    size = 'medium',\n    resize = 'vertical',\n    ...otherProps\n  } = props;\n  const density = useDensity();\n  const styles = getInputStyles({\n    as,\n    isDisabled,\n    isInvalid,\n    size,\n    resize,\n    density,\n  });\n\n  const handleFocus = useCallback(\n    (e: FocusEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n      e.persist();\n      if (onFocus) {\n        onFocus(e);\n      }\n    },\n    [onFocus],\n  );\n\n  const handleChange = useCallback(\n    (e: ChangeEvent<HTMLInputElement>) => {\n      e.persist();\n      if (isDisabled || isReadOnly) return;\n\n      if (onChange) {\n        onChange(e);\n      }\n    },\n    [onChange, isDisabled, isReadOnly],\n  );\n\n  const handleKeyDown = useCallback(\n    (e: KeyboardEvent<HTMLInputElement>) => {\n      e.persist();\n\n      if (onKeyDown) {\n        onKeyDown(e);\n      }\n\n      if (e.nativeEvent.code === 'Escape' && willBlurOnEsc) {\n        e.currentTarget.blur();\n      }\n    },\n    [willBlurOnEsc, onKeyDown],\n  );\n\n  const iconContent = icon && (\n    <Box as=\"span\" className={styles.iconPlaceholder}>\n      {React.cloneElement(icon, {\n        size: 'tiny',\n        variant: 'muted',\n        'aria-hidden': true,\n      })}\n    </Box>\n  );\n\n  const Element = as as React.ElementType;\n\n  const inputContent = (iconClassName?: string) => (\n    <Element\n      {...otherProps}\n      value={value}\n      defaultValue={defaultValue}\n      data-test-id={testId}\n      style={style}\n      placeholder={placeholder}\n      className={cx(styles.input, iconClassName, className)}\n      name={name}\n      type={type}\n      ref={ref}\n      id={id}\n      readOnly={isReadOnly}\n      aria-readonly={isReadOnly ? 'true' : undefined}\n      aria-required={isRequired ? 'true' : undefined}\n      aria-invalid={isInvalid ? 'true' : undefined}\n      aria-describedby={\n        id ? `${id}-${isInvalid ? `validation` : `helptext`}` : undefined\n      }\n      disabled={isDisabled}\n      required={isRequired}\n      onChange={handleChange}\n      onBlur={onBlur}\n      onKeyDown={handleKeyDown}\n      onFocus={handleFocus}\n      size={size}\n    />\n  );\n\n  if (icon) {\n    return (\n      <Box as=\"div\" className={styles.rootComponentWithIcon}>\n        {inputContent(styles.inputWithIcon)}\n        {iconContent}\n      </Box>\n    );\n  }\n\n  return inputContent();\n}\n\n_BaseInput.displayName = 'BaseInput';\n\nexport const BaseInput: PolymorphicComponent<\n  ExpandProps<BaseInputInternalProps>,\n  typeof INPUT_DEFAULT_TAG,\n  'disabled'\n> = React.forwardRef(_BaseInput);\n","import { css } from 'emotion';\nimport tokens from '@contentful/f36-tokens';\nimport type { Density } from '@contentful/f36-utils';\nimport type { BaseInputInternalProps } from './types';\n\ntype getSizeStylesProps = Pick<BaseInputInternalProps, 'size'> & {\n  density?: Density;\n};\n\nconst getSizeStyles = ({ size, density }: getSizeStylesProps) => {\n  const isHighDensity = density === 'high';\n  if (size === 'small') {\n    return {\n      padding: tokens.spacingXs,\n      minHeight: isHighDensity ? tokens.spacingL : tokens.spacingXl,\n      maxHeight: isHighDensity ? tokens.spacingL : tokens.spacingXl,\n    };\n  }\n\n  return {\n    padding: isHighDensity ? tokens.spacingXs : `10px ${tokens.spacingS}`,\n    minHeight: isHighDensity ? tokens.spacingXl : '40px',\n    maxHeight: isHighDensity ? tokens.spacingXl : '40px',\n  };\n};\n\nconst getZIndex = ({\n  isDisabled,\n  isInvalid,\n  zIndexBase = tokens.zIndexDefault,\n}: {\n  isDisabled?: boolean;\n  isInvalid?: boolean;\n  zIndexBase?: number;\n}) => (isDisabled || isInvalid ? zIndexBase + 1 : zIndexBase);\n\ntype getInputStylesProps = Pick<\n  BaseInputInternalProps,\n  'as' | 'isDisabled' | 'isInvalid' | 'size' | 'resize'\n> & {\n  density?: Density;\n};\n\nconst getInvalidOrDisabledStyles = ({\n  isDisabled,\n  isInvalid,\n}: {\n  isDisabled?: boolean;\n  isInvalid?: boolean;\n}) => {\n  if (isDisabled) {\n    return {\n      borderColor: tokens.gray300,\n      boxShadow: 'none',\n    };\n  }\n  if (isInvalid) {\n    return {\n      borderColor: tokens.red600,\n      boxShadow: tokens.glowNegative,\n    };\n  }\n  return {};\n};\n\nconst getStyles = ({\n  as,\n  isDisabled,\n  isInvalid,\n  size,\n  resize,\n  density = 'low',\n}: getInputStylesProps) => {\n  const densityStyles = {\n    low: {\n      borderRadius: tokens.borderRadiusMedium,\n      lineHeight: tokens.lineHeightM,\n      fontSize: tokens.fontSizeM,\n    },\n    high: {\n      borderRadius: tokens.borderRadiusSmall,\n      lineHeight: tokens.lineHeightMHigh,\n      fontSize: tokens.fontSizeMHigh,\n    },\n  };\n\n  return {\n    rootComponentWithIcon: css({\n      position: 'relative',\n      display: 'flex',\n      width: '100%',\n      zIndex: getZIndex({ isDisabled, isInvalid }),\n    }),\n    input: css({\n      outline: 'none',\n      boxShadow: tokens.insetBoxShadowDefault,\n      boxSizing: 'border-box',\n      backgroundColor: isDisabled ? tokens.gray100 : tokens.colorWhite,\n      border: `1px solid ${isInvalid ? tokens.red600 : tokens.gray300}`,\n      color: tokens.gray700,\n      fontFamily: tokens.fontStackPrimary,\n      margin: 0,\n      cursor: isDisabled ? 'not-allowed' : 'auto',\n      width: '100%',\n      zIndex: getZIndex({ isDisabled, isInvalid }),\n      ...densityStyles[density],\n\n      // if the input is a textarea, the resize prop is applied and size should be ignored\n      ...(as === 'textarea' ? { resize } : getSizeStyles({ size, density })),\n\n      '&::placeholder': {\n        color: tokens.gray500,\n      },\n\n      '&:active, &:active:hover, &:focus': {\n        borderColor: tokens.blue600,\n        boxShadow: tokens.glowPrimary,\n        ...getInvalidOrDisabledStyles({ isDisabled, isInvalid }),\n      },\n    }),\n\n    inputWithIcon: css({\n      paddingLeft: tokens.spacingXl,\n    }),\n\n    iconPlaceholder: css({\n      position: 'absolute',\n      pointerEvents: 'none',\n      top: 0,\n      bottom: 0,\n      left: size === 'small' ? tokens.spacingXs : tokens.spacingS,\n      display: 'flex',\n      alignItems: 'center',\n      zIndex: tokens.zIndexDefault,\n    }),\n  };\n};\n\nexport default getStyles;\n","import React from 'react';\nimport { cx } from 'emotion';\nimport {\n  Stack,\n  type ExpandProps,\n  type CommonProps,\n} from '@contentful/f36-core';\nimport getStyles from './InputGroup.styles';\nimport type { InputGroupSpacing } from './types';\nimport { useDensity } from '@contentful/f36-utils';\n\nexport interface InputGroupProps extends CommonProps {\n  /**\n   * Sets the spacing of the elements if variant is separate.\n   * @default spacingS\n   */\n  spacing?: InputGroupSpacing;\n  children: React.ReactNode;\n}\n\nconst _InputGroup = (\n  props: ExpandProps<InputGroupProps>,\n  ref: React.Ref<HTMLDivElement>,\n) => {\n  const { children, className, spacing = 'none', ...otherProps } = props;\n  const density = useDensity();\n  const styles = getStyles({ spacing, density });\n  return (\n    <Stack\n      {...otherProps}\n      spacing={spacing}\n      ref={ref}\n      fullWidth\n      className={cx(styles.inputGroup, className)}\n    >\n      {children}\n    </Stack>\n  );\n};\n\nexport const InputGroup = React.forwardRef(_InputGroup);\n","import { css } from 'emotion';\nimport tokens from '@contentful/f36-tokens';\nimport type { GetStyleArguments } from './types';\n\nconst getInputGroupStyle = ({ spacing, density }) => {\n  const densityBorderRadius =\n    density === 'high' ? tokens.borderRadiusSmall : tokens.borderRadiusMedium;\n\n  const iconStyles =\n    density === 'high'\n      ? {\n          '& svg': {\n            width: '14px',\n            height: '14px',\n          },\n        }\n      : {};\n\n  if (spacing !== 'none') {\n    return css({\n      '& button, & input': {\n        borderRadius: densityBorderRadius,\n        height: 'auto',\n      },\n      ...iconStyles,\n    });\n  }\n\n  return css({\n    position: 'relative',\n    '& button, & input': {\n      borderRadius: '0 !important',\n      height: 'auto',\n    },\n    ...iconStyles,\n    '& > *': {\n      marginRight: '-1px !important',\n      '&:not(:focus), & button:not(:focus)': {\n        boxShadow: 'none !important',\n      },\n      '&:first-child, &:first-child > input, &:first-child button': {\n        borderBottomLeftRadius: `${densityBorderRadius} !important`,\n        borderTopLeftRadius: `${densityBorderRadius} !important`,\n      },\n      '&:last-child, &:last-child > input, &:last-child button': {\n        borderBottomRightRadius: `${densityBorderRadius} !important`,\n        borderTopRightRadius: `${densityBorderRadius} !important`,\n        marginRight: '0 !important',\n      },\n      '&:focus, &:focus-within': {\n        zIndex: tokens.zIndexDefault + 1,\n      },\n    },\n  });\n};\n\nexport default ({ spacing, density }: GetStyleArguments) => ({\n  inputGroup: getInputGroupStyle({ spacing, density }),\n});\n","import { TextInput as OriginalTextInput } from './TextInput';\nimport { InputGroup } from './input-group/InputGroup';\n\ntype CompoundTextInput = typeof OriginalTextInput & {\n  Group: typeof InputGroup;\n};\n\nexport const TextInput = OriginalTextInput as CompoundTextInput;\nTextInput.Group = InputGroup;\n","import React from 'react';\nimport { BaseCheckbox, BaseCheckboxProps } from '../BaseCheckbox';\nimport { useFormControl } from '../FormControl/FormControlContext';\nimport type { ExpandProps } from '@contentful/f36-core';\n\nexport type SwitchProps = Omit<BaseCheckboxProps, 'type' | 'isIndeterminate'>;\n\nconst _Switch = (\n  props: ExpandProps<SwitchProps>,\n  ref: React.Ref<HTMLInputElement>,\n) => {\n  const {\n    testId = 'cf-ui-switch',\n    id,\n    isDisabled,\n    isInvalid,\n    isRequired,\n    children,\n    ...otherProps\n  } = props;\n\n  // Removes the not needed properties that comes from FormControl context.\n  const {\n    inputValue,\n    setInputValue,\n    maxLength,\n    setMaxLength,\n    isReadOnly,\n    ...formProps\n  } = useFormControl({\n    id,\n    isDisabled,\n    isInvalid,\n    isRequired,\n  });\n\n  return (\n    <BaseCheckbox\n      {...formProps}\n      {...otherProps}\n      testId={testId}\n      type=\"switch\"\n      ref={ref}\n    >\n      {children}\n    </BaseCheckbox>\n  );\n};\n\nexport const Switch = React.forwardRef(_Switch);\n","import React, { useEffect } from 'react';\nimport { cx } from 'emotion';\n\nimport { BaseInput, type BaseInputProps } from '../BaseInput';\nimport { useFormControl } from '../FormControl/FormControlContext';\nimport { getStyles } from './Textarea.styles';\nimport type { ExpandProps } from '@contentful/f36-core';\n\nexport interface TextareaProps\n  extends Omit<BaseInputProps<'textarea'>, 'as' | 'type' | 'size'> {\n  /**\n   * Set's default value for textarea\n   */\n  defaultValue?: string;\n}\n\nconst _Textarea = (\n  {\n    className,\n    isDisabled,\n    isInvalid,\n    isRequired,\n    isReadOnly,\n    onChange,\n    testId = 'cf-ui-textarea',\n    id,\n    resize = 'vertical',\n    maxLength,\n    value,\n    defaultValue,\n    ...otherProps\n  }: ExpandProps<TextareaProps>,\n  ref: React.Ref<HTMLTextAreaElement>,\n) => {\n  const styles = getStyles();\n\n  const {\n    setMaxLength,\n    maxLength: contextMaxLength,\n    setInputValue,\n    inputValue: contextInputValue,\n    ...formProps\n  } = useFormControl({\n    id,\n    isInvalid,\n    isDisabled,\n    isRequired,\n    isReadOnly,\n  });\n\n  useEffect(() => {\n    if (maxLength !== undefined && typeof setMaxLength === 'function') {\n      setMaxLength(maxLength);\n      setInputValue(value ?? defaultValue ?? '');\n    }\n  }, [defaultValue, maxLength, setInputValue, setMaxLength, value]);\n\n  const handleOnChange = (event) => {\n    if (typeof setInputValue === 'function') {\n      setInputValue(event.target.value);\n    }\n    onChange?.(event);\n  };\n\n  return (\n    <BaseInput\n      {...otherProps}\n      {...formProps}\n      defaultValue={defaultValue}\n      value={value}\n      testId={testId}\n      as=\"textarea\"\n      ref={ref}\n      className={cx(styles.root, className, {\n        [styles.disabled]: isDisabled,\n        [styles.error]: isInvalid,\n      })}\n      maxLength={maxLength}\n      resize={resize}\n      onChange={maxLength ? handleOnChange : onChange}\n    />\n  );\n};\n\n/**\n * Textarea is a form component that allows the user to enter a sizeable amount of multi-line plain text.\n */\nexport const Textarea = React.forwardRef(_Textarea);\n","import { css } from 'emotion';\nimport tokens from '@contentful/f36-tokens';\n\nexport const getStyles = () => {\n  return {\n    root: css({\n      padding: `10px ${tokens.spacingS}`,\n    }),\n    error: css({\n      '&:focus': {\n        borderColor: tokens.red600,\n        boxShadow: tokens.glowNegative,\n      },\n    }),\n    disabled: css({\n      '&:focus': {\n        borderColor: tokens.gray300,\n        boxShadow: 'none',\n      },\n    }),\n  };\n};\n","import React from 'react';\nimport type { CommonProps, PropsWithHTMLElement } from '@contentful/f36-core';\n\nexport type OptionInternalProps = CommonProps & {\n  isDisabled?: boolean;\n};\n\nexport type OptionProps = PropsWithHTMLElement<\n  OptionInternalProps,\n  'option',\n  'defaultChecked' | 'defaultValue' | 'selected' | 'disabled'\n>;\n\nexport const Option = ({\n  testId = 'cf-ui-select-option',\n  isDisabled,\n  ...otherProps\n}: OptionProps) => {\n  return <option data-test-id={testId} {...otherProps} disabled={isDisabled} />;\n};\n","import React, {\n  useCallback,\n  KeyboardEvent,\n  ReactNode,\n  ChangeEventHandler,\n} from 'react';\nimport { cx } from 'emotion';\nimport { ChevronDownIcon } from '@contentful/f36-icons';\n\nimport type {\n  CommonProps,\n  PropsWithHTMLElement,\n  ExpandProps,\n} from '@contentful/f36-core';\nimport { useFormControl } from '../FormControl/FormControlContext';\nimport { getSelectStyles } from './Select.styles';\nimport { useDensity } from '@contentful/f36-utils';\n\nexport type SelectSize = 'small' | 'medium';\n\nexport type SelectInternalProps = CommonProps & {\n  isRequired?: boolean;\n  isInvalid?: boolean;\n  isDisabled?: boolean;\n  onChange?: ChangeEventHandler<HTMLSelectElement>;\n  children: ReactNode;\n  willBlurOnEsc?: boolean;\n  size?: SelectSize;\n  value?: string;\n  defaultValue?: string;\n};\n\nexport type SelectProps = PropsWithHTMLElement<\n  SelectInternalProps,\n  'select',\n  'disabled' | 'required'\n>;\n\nconst _Select = (\n  {\n    id,\n    children,\n    className,\n    isInvalid,\n    isDisabled,\n    isRequired,\n    testId = 'cf-ui-select',\n    willBlurOnEsc = true,\n    onKeyDown,\n    size = 'medium',\n    value = undefined,\n    defaultValue = undefined,\n    ...otherProps\n  }: ExpandProps<SelectProps>,\n  ref: React.Ref<HTMLSelectElement>,\n) => {\n  const formProps = useFormControl({\n    isDisabled,\n    isInvalid,\n    isRequired,\n    id,\n  });\n\n  const density = useDensity();\n\n  const styles = getSelectStyles({\n    isDisabled: formProps.isDisabled,\n    isInvalid: formProps.isInvalid,\n    size,\n    density,\n  });\n\n  const handleKeyDown = useCallback(\n    (e: KeyboardEvent<HTMLSelectElement>) => {\n      if (e.nativeEvent.code === 'Escape' && willBlurOnEsc) {\n        e.currentTarget.blur();\n      }\n      if (onKeyDown) {\n        onKeyDown(e);\n      }\n    },\n    [onKeyDown, willBlurOnEsc],\n  );\n\n  return (\n    <div className={cx(styles.wrapper, className)}>\n      <select\n        {...otherProps}\n        id={formProps.id}\n        data-test-id={testId}\n        className={styles.select}\n        onKeyDown={handleKeyDown}\n        required={formProps.isRequired}\n        aria-required={formProps.isRequired ? 'true' : undefined}\n        aria-invalid={formProps.isInvalid ? true : undefined}\n        aria-describedby={\n          formProps.id\n            ? `${formProps.id}-${\n                formProps.isInvalid ? `validation` : `helptext`\n              }`\n            : undefined\n        }\n        disabled={formProps.isDisabled}\n        defaultValue={defaultValue}\n        value={value}\n        ref={ref}\n      >\n        {children}\n      </select>\n      <ChevronDownIcon className={styles.icon} variant=\"muted\" />\n    </div>\n  );\n};\n\nexport const Select = React.forwardRef(_Select);\n","import tokens from '@contentful/f36-tokens';\nimport { css } from 'emotion';\n\nexport function getSelectStyles({ isInvalid, isDisabled, size, density }) {\n  const getSizeAndDensityStyles = () => {\n    switch (true) {\n      case size === 'small':\n        return {\n          padding: `${tokens.spacing2Xs} ${tokens.spacingL} ${tokens.spacing2Xs} ${tokens.spacingXs}`,\n          height: '32px',\n        };\n\n      case size === 'medium' && density === 'high':\n        return {\n          padding: `${tokens.spacing2Xs} ${tokens.spacingL} ${tokens.spacing2Xs} ${tokens.spacingXs}`,\n          height: '32px',\n          fontSize: tokens.fontSizeMHigh,\n          lineHeight: tokens.lineHeightMHigh,\n          borderRadius: tokens.borderRadiusSmall,\n        };\n\n      case size === 'medium' || density === 'low':\n      default:\n        return {\n          padding: `10px ${tokens.spacingL} 10px ${tokens.spacingS}`,\n          height: '40px',\n        };\n    }\n  };\n\n  const select = css({\n    width: '100%',\n    display: 'block',\n    appearance: 'none',\n    backgroundColor: tokens.colorWhite,\n    color: tokens.gray700,\n\n    fontSize: tokens.fontSizeM,\n    lineHeight: tokens.lineHeightM,\n    fontFamily: tokens.fontStackPrimary,\n    borderRadius: tokens.borderRadiusMedium,\n    boxShadow: tokens.insetBoxShadowDefault,\n    outline: 'none',\n    border: `1px solid ${tokens.gray300}`,\n    cursor: 'pointer',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n\n    '&::placeholder': {\n      color: tokens.gray500,\n    },\n    '&:focus': {\n      outline: 'none',\n      boxShadow: tokens.glowPrimary,\n      borderColor: tokens.blue500,\n    },\n    '&:-moz-focusring': { color: 'transparent', textShadow: '0 0 0 #000' },\n    '&::-ms-expand': { display: 'none' },\n  });\n\n  const disabled = css({\n    backgroundColor: tokens.gray100,\n    cursor: 'not-allowed',\n    color: tokens.gray600,\n    '&:focus, &:active': { borderColor: tokens.gray300 },\n  });\n\n  const invalid = css({\n    borderColor: isDisabled ? tokens.red300 : tokens.red600,\n    '&:focus': {\n      borderColor: tokens.red600,\n      boxShadow: tokens.glowNegative,\n    },\n  });\n\n  return {\n    wrapper: css({\n      position: 'relative',\n      display: 'block',\n      width: 'auto',\n    }),\n    select: css([\n      select,\n      getSizeAndDensityStyles(),\n      isDisabled && disabled,\n      isInvalid && invalid,\n    ]),\n    icon: css({\n      position: 'absolute',\n      right: tokens.spacingXs,\n      top: '50%',\n      marginTop: '-8px',\n      pointerEvents: 'none',\n    }),\n  };\n}\n","import { Select as OriginalSelect } from './Select';\nimport { Option } from './SelectOption';\n\ntype CompoundSelect = typeof OriginalSelect & {\n  Option: typeof Option;\n};\n\nexport const Select = OriginalSelect as CompoundSelect;\nSelect.Option = Option;\n","import React, { forwardRef, useCallback, type FormEvent } from 'react';\n\nimport type {\n  CommonProps,\n  PropsWithHTMLElement,\n  ExpandProps,\n} from '@contentful/f36-core';\n\nexport type FormProps = PropsWithHTMLElement<CommonProps, 'form'>;\n\nfunction _Form(\n  {\n    children,\n    onSubmit,\n    testId = 'cf-ui-form-label',\n    ...otherProps\n  }: ExpandProps<FormProps>,\n  ref: React.Ref<HTMLFormElement>,\n) {\n  const handleSubmit = useCallback(\n    (event: FormEvent<HTMLFormElement>) => {\n      event.preventDefault();\n      if (onSubmit) {\n        onSubmit(event);\n      }\n    },\n    [onSubmit],\n  );\n  return (\n    <form\n      ref={ref}\n      data-test-id={testId}\n      onSubmit={handleSubmit}\n      {...otherProps}\n    >\n      {children}\n    </form>\n  );\n}\n\n_Form.displayName = 'Form';\n\nexport const Form = forwardRef(_Form);\n"]}