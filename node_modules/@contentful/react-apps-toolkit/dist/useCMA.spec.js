"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var react_hooks_1 = require("@testing-library/react-hooks");
var useCMA_1 = require("./useCMA");
var mockedCma = 'mocked-cma';
var mockedSdk = {
    cmaAdapter: 'placholder',
    ids: {
        environment: 'placeholder',
        space: 'placeholder',
    },
};
jest.mock('./useSDK', function () { return (__assign(__assign({}, jest.requireActual('./useSDK')), { useSDK: function () { return mockedSdk; } })); });
jest.mock('./SDKProvider', function () { return ({
    SDKContext: {},
}); });
jest.mock('contentful-management', function () {
    return __assign(__assign({}, jest.requireActual('contentful-management')), { createClient: function () { return mockedCma; } });
});
describe('useCMA', function () {
    test('should return cma client', function () {
        var result = (0, react_hooks_1.renderHook)(function () { return (0, useCMA_1.useCMA)(); }).result;
        expect(result.current).toBe(mockedCma);
    });
});
