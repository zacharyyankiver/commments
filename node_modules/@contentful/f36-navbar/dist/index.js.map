{"version":3,"sources":["../src/CompoundNavbar.ts","../src/Navbar.tsx","../src/Navbar.styles.ts","../src/utils.styles.ts","../src/NavbarAccount/NavbarAccount.tsx","../src/NavbarAccount/NavbarAccount.styles.ts","../src/NavbarMenu/NavbarMenu.tsx","../src/NavbarMenu/NavbarMenu.styles.ts","../src/NavbarAccount/NavbarAccountSkeleton.tsx","../src/NavbarItem/NavbarItem.tsx","../src/NavbarItem/NavbarItem.styles.ts","../src/NavbarItemIcon/NavbarItemIcon.tsx","../src/NavbarItemIcon/NavbarItemIcon.styles.ts","../src/icons/CircleIcon.tsx","../src/icons/ArrowDownIcon.tsx","../src/icons/HelpIcon.tsx","../src/icons/SearchIcon.tsx","../src/icons/ContentfulLogoIcon.tsx","../src/NavbarItem/NavbarItemSkeleton.tsx","../src/NavbarMenuItem/NavbarMenuItem.tsx","../src/NavbarMenuItem/NavbarMenuItem.styles.ts","../src/NavbarMenuItem/NavbarMenuItemSkeleton.tsx","../src/NavbarSwitcher/NavbarSwitcher.tsx","../src/NavbarSwitcher/NavbarSwitcher.styles.ts","../src/NavbarSwitcher/NavbarSwitcherSkeleton.tsx","../src/NavbarSearch/NavbarSearch.tsx","../src/NavbarSearch/NavbarSearch.styles.ts","../src/NavbarSwitcherItem/NavbarSwitcherItem.tsx","../src/NavbarSwitcherItem/NavbarSwitcherItem.styles.ts","../src/NavbarSwitcherItem/NavbarEnvVariant.tsx","../src/NavbarHelp/NavbarHelp.tsx","../src/NavbarHelp/NavbarHelp.styles.ts","../src/NavbarBadge/NavbarBadge.tsx","../src/NavbarBadge/NavbarBadge.styles.ts","../src/NavbarTopbarItem/NavbarTopbarItem.tsx","../src/NavbarTopbarItem/NavbarTopbarItem.styles.ts"],"names":["MenuDivider","MenuSectionTitle","Box","Flex","React","css","tokens","mqs","getGlowOnFocusStyles","shadow","getNavbarStyles","maxWidth","_Navbar","props","ref","_a","children","account","search","switcher","help","badge","bottomRightItems","topRightItems","contentMaxWidth","testId","otherProps","__objRest","styles","__spreadProps","__spreadValues","Navbar","cx","notificationVarianColorMap","getNavbarAccountStyles","variant","Menu","getNavbarMenuStyles","NavbarMenu","trigger","onOpen","onClose","Avatar","_NavbarAccount","className","avatar","initials","username","hasNotification","notificationVariant","NavbarAccount","SkeletonContainer","SkeletonImage","NavbarAccountSkeleton","ariaLabel","hexToRGBA","getNavbarItemActiveStyles","commonItemStyles","getNavbarItemStyles","getNavbarItemSkeletonStyles","getNavbarItemIconStyles","NavbarItemIcon","_b","icon","generateIcon","CircleIcon","ArrowDownIcon","HelpIcon","SearchIcon","ContentfulLogoIcon","NAVBAR_ITEM_DEFAULT_TAG","_NavbarItem","Comp","title","isActive","item","isNavbarItemHasMenu","NavbarItem","SkeletonText","NavbarItemSkeleton","estimatedWidth","getNavbarMenuItemStyles","ExternalLinkIcon","NAVBAR_MENU_ITEM_DEFAULT_TAG","_NavbarMenuItem","itemIsExternalLink","isExternalLink","externalIcon","NavbarMenuItem","SkeletonBodyText","NavbarMenuItemSkeleton","getNavbarSwitcherStyles","MenuIcon","_NavbarSwitcher","logo","NavbarSwitcher","SkeletonDisplayText","NavbarSwitcherSkeleton","getNavbarSearchStyles","_NavbarSearch","NavbarSearch","mobileIcon","getNavbarSwitcherItemStyles","EnvironmentAliasIcon","EnvironmentIcon","NavbarEnvVariant","isAlias","_NavbarSwitcherItem","isCircle","envVariant","classes","NavbarSwitcherItem","getNavbarHelpStyles","_NavbarHelp","NavbarHelp","getNavbarBadgeStyles","NAVBAR_BADGE_DEFAULT_TAG","_NavbarBadge","NavbarBadge","getNavbarTopbarItemStyles","_NavbarTopbarItem","NavbarTopbarItem"],"mappings":"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","sourcesContent":["import { MenuDivider } from '@contentful/f36-menu';\nimport { MenuSectionTitle } from '@contentful/f36-menu';\nimport { Navbar as OriginalNavbar } from './Navbar';\n\nimport { NavbarAccount, NavbarAccountSkeleton } from './NavbarAccount';\nimport { NavbarItem, NavbarItemSkeleton } from './NavbarItem';\nimport { NavbarMenuItem, NavbarMenuItemSkeleton } from './NavbarMenuItem';\nimport { NavbarSwitcher, NavbarSwitcherSkeleton } from './NavbarSwitcher';\n\nimport { NavbarSearch } from './NavbarSearch/NavbarSearch';\nimport { NavbarSwitcherItem } from './NavbarSwitcherItem/NavbarSwitcherItem';\nimport { NavbarHelp } from './NavbarHelp/NavbarHelp';\nimport { NavbarBadge } from './NavbarBadge/NavbarBadge';\nimport { NavbarTopbarItem } from './NavbarTopbarItem/NavbarTopbarItem';\n\ntype CompoundNavbar = typeof OriginalNavbar & {\n  Item: typeof NavbarItem;\n  ItemSkeleton: typeof NavbarItemSkeleton;\n  MenuItem: typeof NavbarMenuItem;\n  MenuItemSkeleton: typeof NavbarMenuItemSkeleton;\n  MenuDivider: typeof MenuDivider;\n  MenuSectionTitle: typeof MenuSectionTitle;\n  Switcher: typeof NavbarSwitcher;\n  SwitcherSkeleton: typeof NavbarSwitcherSkeleton;\n  SwitcherItem: typeof NavbarSwitcherItem;\n  Search: typeof NavbarSearch;\n  Help: typeof NavbarHelp;\n  Account: typeof NavbarAccount;\n  AccountSkeleton: typeof NavbarAccountSkeleton;\n  Badge: typeof NavbarBadge;\n  TopbarItem: typeof NavbarTopbarItem;\n};\n\nexport const Navbar = OriginalNavbar as CompoundNavbar;\nNavbar.Item = NavbarItem;\nNavbar.ItemSkeleton = NavbarItemSkeleton;\nNavbar.MenuItem = NavbarMenuItem;\nNavbar.MenuItemSkeleton = NavbarMenuItemSkeleton;\nNavbar.MenuDivider = MenuDivider;\nNavbar.MenuSectionTitle = MenuSectionTitle;\nNavbar.Switcher = NavbarSwitcher;\nNavbar.SwitcherSkeleton = NavbarSwitcherSkeleton;\nNavbar.SwitcherItem = NavbarSwitcherItem;\nNavbar.Search = NavbarSearch;\nNavbar.Help = NavbarHelp;\nNavbar.Account = NavbarAccount;\nNavbar.AccountSkeleton = NavbarAccountSkeleton;\nNavbar.Badge = NavbarBadge;\nNavbar.TopbarItem = NavbarTopbarItem;\n","import {\n  Box,\n  type CommonProps,\n  type ExpandProps,\n  Flex,\n} from '@contentful/f36-core';\nimport React from 'react';\nimport { getNavbarStyles } from './Navbar.styles';\n\ntype NavbarOwnProps = CommonProps & {\n  children?: React.ReactNode;\n  account?: React.ReactNode;\n  search?: React.ReactNode;\n  switcher?: React.ReactNode;\n  help?: React.ReactNode;\n  badge?: React.ReactNode;\n  /**\n   * Items that will be rendered on the bottom-right of the navbar.\n   * Useful for separating other navigation items from main ones, (e.g. separating \"Settings\" from all other navigation items).\n   */\n  bottomRightItems?: React.ReactNode;\n  /**\n   * Items that will be rendered on the top-right of the navbar.\n   * Useful for providing additional context or actions to the user (e.g. a Feedback form link).\n   */\n  topRightItems?: React.ReactNode;\n  /**\n   * Defines the max-width of the content inside the navbar.\n   * @default '100%'\n   */\n  contentMaxWidth?: string;\n};\n\n// expose only the HTML props that are needed to not pollute the API\ntype NavbarHTMLElementProps = Pick<React.ComponentPropsWithoutRef<'div'>, 'id'>;\n\nexport type NavbarProps = NavbarHTMLElementProps & NavbarOwnProps;\n\nfunction _Navbar(props: ExpandProps<NavbarProps>, ref: React.Ref<HTMLElement>) {\n  const {\n    children,\n    account,\n    search,\n    switcher,\n    help,\n    badge,\n    bottomRightItems,\n    topRightItems,\n    contentMaxWidth = '100%',\n    testId = 'cf-ui-navbar',\n    ...otherProps\n  } = props;\n  const styles = getNavbarStyles(contentMaxWidth);\n\n  return (\n    <Box {...otherProps} ref={ref} testId={testId}>\n      <Flex className={styles.containerTop}>\n        <Flex\n          className={styles.containerTopContent}\n          justifyContent=\"space-between\"\n        >\n          <Flex>{switcher}</Flex>\n          <Flex alignItems=\"center\" gap=\"spacingXs\">\n            {topRightItems}\n            {badge}\n            {search}\n            {help}\n            {account}\n          </Flex>\n        </Flex>\n      </Flex>\n\n      <Flex className={styles.containerBottom}>\n        <Flex\n          className={styles.containerBottomContent}\n          justifyContent=\"space-between\"\n        >\n          <Flex as=\"nav\" aria-label=\"Main Navigation\" alignItems=\"stretch\">\n            {children}\n          </Flex>\n          {bottomRightItems && <Flex>{bottomRightItems}</Flex>}\n        </Flex>\n      </Flex>\n    </Box>\n  );\n}\n\nexport const Navbar = React.forwardRef(_Navbar);\n","import { css } from 'emotion';\nimport tokens from '@contentful/f36-tokens';\nimport { mqs } from './utils.styles';\n\nexport const getNavbarStyles = (maxWidth: string) => ({\n  containerTop: css({\n    justifyContent: 'center',\n    backgroundColor: '#0C141C',\n  }),\n  containerBottom: css({\n    justifyContent: 'center',\n    borderTop: `1px solid #21262D`,\n    backgroundColor: '#161B22',\n  }),\n  containerTopContent: css({\n    width: '100%',\n    maxWidth: maxWidth,\n    padding: `${tokens.spacingXs}`,\n    minHeight: '2.5rem',\n    [mqs.medium]: {\n      padding: `${tokens.spacingXs} ${tokens.spacingM}`,\n    },\n  }),\n  containerBottomContent: css({\n    width: '100%',\n    maxWidth: maxWidth,\n    padding: 0,\n    minHeight: '2.5rem',\n    overflow: 'auto',\n    [mqs.medium]: {\n      padding: `0 ${tokens.spacing2Xs}`,\n    },\n  }),\n});\n","import tokens from '@contentful/f36-tokens';\n\ntype screens = 'medium' | 'large' | 'xlarge';\ntype mediaqueries = Record<screens, string>;\nexport const mqs: mediaqueries = {\n  medium: '@media (min-width: 480px)',\n  large: '@media (min-width: 768px)',\n  xlarge: '@media (min-width: 1920px)',\n};\n\nexport const getGlowOnFocusStyles = (shadow: string = tokens.glowPrimary) => ({\n  '&:focus': {\n    boxShadow: shadow,\n  },\n  '&:focus:not(:focus-visible)': {\n    boxShadow: 'unset',\n  },\n  '&:focus-visible': {\n    boxShadow: shadow,\n  },\n});\n","import React from 'react';\nimport { cx } from 'emotion';\nimport { getNavbarAccountStyles } from './NavbarAccount.styles';\nimport {\n  Flex,\n  type PropsWithHTMLElement,\n  type CommonProps,\n  type ExpandProps,\n} from '@contentful/f36-core';\nimport { NavbarMenu } from '../NavbarMenu/NavbarMenu';\nimport { Avatar } from '@contentful/f36-avatar';\n\ntype NavbarAccountOwnProps = CommonProps & {\n  children: React.ReactNode;\n  username: string;\n  avatar?: string;\n  initials?: string;\n  hasNotification?: boolean;\n  /**\n   * @default 'warning'\n   */\n  notificationVariant?: 'warning' | 'negative' | 'info';\n};\n\nexport type NavbarAccountProps = PropsWithHTMLElement<\n  NavbarAccountOwnProps,\n  'button'\n>;\n\nfunction _NavbarAccount(\n  props: ExpandProps<NavbarAccountProps>,\n  ref: React.Ref<HTMLButtonElement>,\n) {\n  const {\n    children,\n    className,\n    testId = 'cf-ui-navbar-account-trigger',\n    avatar,\n    initials,\n    username,\n    hasNotification,\n    notificationVariant = 'warning',\n    ...otherProps\n  } = props;\n  const styles = getNavbarAccountStyles();\n\n  return (\n    <NavbarMenu\n      trigger={\n        <Flex\n          {...otherProps}\n          as=\"button\"\n          ref={ref}\n          className={cx(styles.root, className)}\n          testId={testId}\n        >\n          <Avatar\n            src={avatar}\n            initials={initials}\n            size=\"small\"\n            variant=\"user\"\n          />\n          {hasNotification ? (\n            <span className={styles.notificationIcon(notificationVariant)} />\n          ) : null}\n        </Flex>\n      }\n    >\n      {children}\n    </NavbarMenu>\n  );\n}\n\nexport const NavbarAccount = React.forwardRef(_NavbarAccount);\n","import { css } from 'emotion';\nimport tokens from '@contentful/f36-tokens';\nimport { NavbarAccountProps } from './NavbarAccount';\nimport { getGlowOnFocusStyles } from '../utils.styles';\n\nconst notificationVarianColorMap: Record<\n  NavbarAccountProps['notificationVariant'],\n  string\n> = {\n  warning: tokens.colorWarning,\n  negative: tokens.colorNegative,\n  info: tokens.blue500,\n};\n\nexport const getNavbarAccountStyles = () => ({\n  root: css(\n    {\n      // default button reset styles\n      margin: 0,\n      padding: 0,\n      background: 'none',\n      border: 'none',\n\n      cursor: 'pointer',\n      position: 'relative',\n      alignItems: 'center',\n      justifyContent: 'center',\n      gap: tokens.spacing2Xs,\n      outline: 'none',\n      borderRadius: '50%',\n    },\n    getGlowOnFocusStyles(),\n  ),\n  avatar: css({\n    borderRadius: '50%',\n    display: 'block',\n    height: '24px',\n    width: '24px',\n  }),\n  notificationIcon: (variant: NavbarAccountProps['notificationVariant']) =>\n    css({\n      position: 'absolute',\n      top: 0,\n      right: 0,\n      height: tokens.spacingS,\n      width: tokens.spacingS,\n      borderRadius: '50%',\n      border: `2px solid ${tokens.gray900}`,\n      backgroundColor: notificationVarianColorMap[variant],\n      transform: 'translate(30%, -30%)',\n      zIndex: 1, // move above the avatar\n    }),\n});\n","import React from 'react';\nimport { Menu, type MenuListProps, type MenuProps } from '@contentful/f36-menu';\nimport { getNavbarMenuStyles } from './NavbarMenu.styles';\n\nexport type NavbarMenuProps = {\n  trigger: React.ReactNode;\n  children?: React.ReactNode;\n} & Pick<MenuListProps, 'testId'> &\n  Pick<MenuProps, 'onOpen' | 'onClose'>;\n\nexport const NavbarMenu = (props: NavbarMenuProps) => {\n  const {\n    trigger,\n    children,\n    testId = 'cf-ui-navbar-menu-list',\n    onOpen,\n    onClose,\n  } = props;\n  const styles = getNavbarMenuStyles();\n\n  return (\n    <Menu onOpen={onOpen} onClose={onClose}>\n      <Menu.Trigger>{trigger}</Menu.Trigger>\n      <Menu.List className={styles.menuList} testId={testId}>\n        {children}\n      </Menu.List>\n    </Menu>\n  );\n};\n","import { css } from 'emotion';\n\nexport const getNavbarMenuStyles = () => ({\n  menuList: css({\n    minWidth: '250px',\n  }),\n});\n","import React from 'react';\nimport { SkeletonContainer, SkeletonImage } from '@contentful/f36-skeleton';\nimport tokens from '@contentful/f36-tokens';\n\nexport function NavbarAccountSkeleton({ ariaLabel }: { ariaLabel?: string }) {\n  return (\n    <SkeletonContainer\n      svgWidth={24}\n      svgHeight={24}\n      ariaLabel={ariaLabel}\n      backgroundColor={tokens.gray800}\n      foregroundColor={tokens.gray700}\n    >\n      <SkeletonImage width={24} height={24} radiusX={12} radiusY={12} />\n    </SkeletonContainer>\n  );\n}\n","import React from 'react';\nimport { cx } from 'emotion';\nimport { getNavbarItemStyles } from './NavbarItem.styles';\nimport { NavbarMenu, type NavbarMenuProps } from '../NavbarMenu/NavbarMenu';\nimport {\n  NavbarItemIcon,\n  type NavbarItemIconProps,\n} from '../NavbarItemIcon/NavbarItemIcon';\nimport { ArrowDownIcon } from '../icons';\nimport type {\n  CommonProps,\n  ExpandProps,\n  PolymorphicComponent,\n  PolymorphicProps,\n} from '@contentful/f36-core';\n\nconst NAVBAR_ITEM_DEFAULT_TAG = 'button';\n\ntype NavbarItemTriggerProps = CommonProps & {\n  title: string;\n  icon?: NavbarItemIconProps['icon'];\n  isActive?: boolean;\n  as?: React.ElementType;\n};\n\ntype NavbarItemAsMenuProps = NavbarItemTriggerProps &\n  Pick<NavbarMenuProps, 'onOpen' | 'onClose'> & {\n    children: React.ReactNode;\n  };\ntype NavbarItemAsItemProps = NavbarItemTriggerProps & {\n  children?: never;\n  onOpen?: never;\n  onClose?: never;\n};\ntype NavbarItemOwnProps = NavbarItemAsItemProps | NavbarItemAsMenuProps;\n\nexport type NavbarItemProps<\n  E extends React.ElementType = typeof NAVBAR_ITEM_DEFAULT_TAG,\n> = PolymorphicProps<NavbarItemOwnProps, E>;\n\nfunction _NavbarItem(\n  props: NavbarItemProps<React.ElementType>,\n  ref: React.Ref<any>,\n) {\n  const {\n    as: Comp = NAVBAR_ITEM_DEFAULT_TAG,\n    icon,\n    title,\n    children,\n    className,\n    isActive,\n    testId = 'cf-ui-navbar-item',\n    onOpen,\n    onClose,\n    ...otherProps\n  } = props;\n  const styles = getNavbarItemStyles();\n\n  const item = (\n    <Comp\n      {...otherProps}\n      ref={ref}\n      data-test-id={testId}\n      className={cx(styles.root, isActive && styles.isActive, className)}\n    >\n      {icon ? <NavbarItemIcon icon={icon} variant=\"white\" /> : null}\n      <span>{title}</span>\n      {isNavbarItemHasMenu(props) && (\n        <ArrowDownIcon className={styles.dropdownIcon} />\n      )}\n    </Comp>\n  );\n\n  if (isNavbarItemHasMenu(props)) {\n    return (\n      <NavbarMenu\n        trigger={item}\n        testId={testId}\n        onOpen={onOpen}\n        onClose={onClose}\n      >\n        {children}\n      </NavbarMenu>\n    );\n  }\n\n  return item;\n}\n\nconst isNavbarItemHasMenu = <E extends React.ElementType>(\n  props: NavbarItemProps<E>,\n): props is PolymorphicProps<NavbarItemAsMenuProps, E> =>\n  Boolean(props.children);\n\nexport const NavbarItem: PolymorphicComponent<\n  ExpandProps<NavbarItemOwnProps>,\n  typeof NAVBAR_ITEM_DEFAULT_TAG\n> = React.forwardRef(_NavbarItem);\n","import { css } from 'emotion';\nimport tokens from '@contentful/f36-tokens';\nimport { hexToRGBA } from '@contentful/f36-utils';\nimport { getGlowOnFocusStyles, mqs } from '../utils.styles';\n\nexport const getNavbarItemActiveStyles = () =>\n  css({\n    '&': {\n      color: tokens.colorWhite,\n      '& svg': {\n        fill: tokens.colorWhite,\n      },\n    },\n\n    '&::after': {\n      content: '\"\"',\n      position: 'absolute',\n      width: `calc(100% - ${tokens.spacingM})`,\n      height: '2px',\n      bottom: '0.5px',\n      left: 0,\n      right: 0,\n      margin: 'auto',\n      backgroundColor: tokens.colorWhite,\n      zIndex: 0,\n    },\n  });\n\nconst commonItemStyles = {\n  display: 'flex',\n  justifyContent: 'center',\n  padding: `10px ${tokens.spacingS}`,\n  alignItems: 'center',\n  background: 'none',\n};\n\nexport const getNavbarItemStyles = () => ({\n  root: css(\n    commonItemStyles,\n    {\n      alignItems: 'center',\n      background: 'none',\n      border: 0,\n      margin: 0,\n      outline: 'none',\n      fontSize: tokens.fontSizeM,\n      lineHeight: tokens.lineHeightM,\n      fontWeight: tokens.fontWeightMedium,\n      position: 'relative',\n      textAlign: 'left',\n      whiteSpace: 'nowrap',\n      cursor: 'pointer',\n      hyphens: 'auto',\n      textDecoration: 'none',\n      color: hexToRGBA(tokens.gray300, 0.8),\n      boxSizing: 'border-box',\n      transition: `color ${tokens.transitionDurationShort} ${tokens.transitionEasingCubicBezier}`,\n      borderRadius: tokens.borderRadiusMedium,\n\n      '&::before': {\n        content: '\"\"',\n        position: 'absolute',\n        width: `calc(100% - ${tokens.spacingXs})`,\n        height: `calc(100% - ${tokens.spacingS})`,\n        top: `calc(${tokens.spacingS} / 2)`,\n        left: 0,\n        right: 0,\n        margin: 'auto',\n        borderRadius: tokens.borderRadiusSmall,\n        backgroundColor: hexToRGBA(tokens.colorWhite, 0.08),\n        opacity: 0,\n        zIndex: 0,\n        scale: 0,\n        transition: `all ${tokens.transitionDurationShort} ${tokens.transitionEasingCubicBezier}`,\n      },\n\n      '&:hover::before': {\n        opacity: 1,\n        scale: '1',\n      },\n\n      '&:active::before': {\n        backgroundColor: `rgba(255, 255, 255, 0.1)`,\n      },\n      '&:disabled': {\n        cursor: 'auto',\n      },\n\n      '& svg': {\n        fill: hexToRGBA(tokens.gray300, 0.8),\n        transition: `fill ${tokens.transitionDurationShort} ${tokens.transitionEasingCubicBezier}`,\n\n        '&:first-child': {\n          display: 'none',\n          [mqs.large]: {\n            display: 'block',\n          },\n        },\n      },\n      '& > svg, & > span': {\n        zIndex: tokens.zIndexDefault,\n      },\n    },\n    getGlowOnFocusStyles(`inset ${tokens.glowPrimary}`),\n  ),\n  isActive: getNavbarItemActiveStyles(),\n  dropdownIcon: css({\n    paddingLeft: tokens.spacing2Xs,\n  }),\n});\n\nexport const getNavbarItemSkeletonStyles = () => ({\n  root: css(commonItemStyles),\n});\n","import React from 'react';\nimport type { IconProps } from '@contentful/f36-icons';\nimport { getNavbarItemIconStyles } from './NavbarItemIcon.styles';\nimport { cx } from 'emotion';\n\nexport type NavbarItemIconProps = {\n  icon: React.ReactElement<IconProps>;\n} & Pick<IconProps, 'variant'>;\n\nexport const NavbarItemIcon = (props: NavbarItemIconProps) => {\n  const { icon, variant } = props;\n  const styles = getNavbarItemIconStyles();\n\n  return React.cloneElement(icon, {\n    className: cx(icon.props.className, styles.root),\n    size: icon.props.size ?? 'tiny',\n    variant: icon.props.variant ?? variant,\n  });\n};\n","import { css } from 'emotion';\nimport tokens from '@contentful/f36-tokens';\n\nexport const getNavbarItemIconStyles = () => ({\n  root: css({\n    '&:first-child': {\n      marginRight: tokens.spacing2Xs,\n    },\n    '&:last-child': {\n      marginLeft: tokens.spacing2Xs,\n    },\n    'img&': {\n      borderRadius: tokens.borderRadiusSmall,\n      maxWidth: tokens.spacingM,\n      maxHeight: tokens.spacingM,\n    },\n  }),\n});\n","import React from 'react';\nimport { generateIcon } from '@contentful/f36-icon';\n\nexport const CircleIcon = /*#__PURE__*/ generateIcon({\n  name: 'CircleIcon',\n  viewBox: '0 0 24 24',\n  path: (\n    <path\n      d=\"M11.994 6.526A5.47 5.47 0 0 0 6.526 12a5.47 5.47 0 0 0 5.468 5.473A5.476 5.476 0 0 0 17.473 12a5.477 5.477 0 0 0-5.479-5.474ZM12 15.447a3.448 3.448 0 1 1 0-6.896 3.448 3.448 0 0 1 0 6.896Z\"\n      fill=\"currentFill\"\n    />\n  ),\n});\n","import React from 'react';\nimport { generateIcon } from '@contentful/f36-icon';\n\nexport const ArrowDownIcon = /*#__PURE__*/ generateIcon({\n  name: 'ArrowDownIcon',\n  viewBox: '0 0 12 20',\n  path: (\n    <path\n      d=\"M3.03076 8C2.20109 8 1.73228 8.95209 2.23814 9.60971L5.20727 13.4696C5.60757 13.99 6.39223 13.99 6.79252 13.4696L9.76166 9.60971C10.2675 8.95209 9.79871 8 8.96904 8L3.03076 8Z\"\n      fill=\"#9FA8B2\"\n    />\n  ),\n});\n","import React from 'react';\nimport { generateIcon } from '@contentful/f36-icon';\n\nexport const HelpIcon = /*#__PURE__*/ generateIcon({\n  name: 'HelpIcon',\n  viewBox: '0 0 24 24',\n  path: (\n    <>\n      <g clipPath=\"url(#HelpIcon_svg__a)\">\n        <path\n          d=\"M12 2.25A9.75 9.75 0 1 0 21.75 12 9.769 9.769 0 0 0 12 2.25ZM12 18a1.125 1.125 0 1 1 0-2.25A1.125 1.125 0 0 1 12 18Zm.75-4.584v.084a.75.75 0 1 1-1.5 0v-.75A.75.75 0 0 1 12 12a1.875 1.875 0 1 0-1.875-1.875.75.75 0 1 1-1.5 0 3.375 3.375 0 1 1 4.125 3.29Z\"\n          fill=\"currentFill\"\n        />\n      </g>\n      <defs>\n        <clipPath id=\"HelpIcon_svg__a\">\n          <path fill=\"currentFill\" d=\"M0 0h24v24H0z\" />\n        </clipPath>\n      </defs>\n    </>\n  ),\n});\n","import React from 'react';\nimport { generateIcon } from '@contentful/f36-icon';\n\nexport const SearchIcon = /*#__PURE__*/ generateIcon({\n  name: 'SearchIcon',\n  viewBox: '0 0 24 24',\n  path: (\n    <>\n      <g clipPath=\"url(#SearchIcon_svg__a)\">\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M6 11.125a5.125 5.125 0 1 1 10.25 0 5.125 5.125 0 0 1-10.25 0ZM11.125 4a7.125 7.125 0 1 0 4.282 12.82l2.886 2.887a1 1 0 0 0 1.414-1.414l-2.886-2.887A7.125 7.125 0 0 0 11.125 4Z\"\n          fill=\"currentFill\"\n        />\n      </g>\n      <defs>\n        <clipPath id=\"SearchIcon_svg__a\">\n          <path fill=\"#fff\" d=\"M0 0h24v24H0z\" />\n        </clipPath>\n      </defs>\n    </>\n  ),\n});\n","import React from 'react';\nimport { generateIcon } from '@contentful/f36-icon';\n\nexport const ContentfulLogoIcon = /*#__PURE__*/ generateIcon({\n  name: 'ContentfulLogoIcon',\n  viewBox: '0 0 24 24',\n  path: (\n    <>\n      <g clipPath=\"url(#a)\">\n        <path\n          d=\"M8.71 3.007c.844.843 1.17 2.078.844 3.228a6.683 6.683 0 0 1 3.444-.953h.025a6.701 6.701 0 0 1 4.743 1.988 2.637 2.637 0 0 0 3.73.093 2.637 2.637 0 0 0 .094-3.731c-.025-.027-.052-.052-.08-.08A11.95 11.95 0 0 0 13.036.006h-.046a11.92 11.92 0 0 0-6.691 2.038h.074c.876 0 1.715.346 2.335.966l.002-.002Z\"\n          fill=\"#1773EB\"\n        />\n        <path\n          d=\"M19.593 16.006c-.696 0-1.365.276-1.86.765a6.706 6.706 0 0 1-4.732 1.953h-.025a6.617 6.617 0 0 1-3.446-.97c.079.287.117.584.117.882a3.3 3.3 0 0 1-3.299 3.3h-.087a11.929 11.929 0 0 0 6.696 2.07h.046a11.934 11.934 0 0 0 8.45-3.486 2.64 2.64 0 0 0-1.857-4.514h-.003Z\"\n          fill=\"#E44F20\"\n        />\n        <path\n          d=\"M4.013 16.301a3.283 3.283 0 0 1 2.335-.967c.303 0 .604.041.893.123a6.696 6.696 0 0 1 .014-6.928 3.302 3.302 0 0 1-4.176-3.187v-.09a12 12 0 0 0-.033 13.452v-.068c0-.877.344-1.715.967-2.335Z\"\n          fill=\"#FFDA00\"\n        />\n        <path\n          d=\"M6.378 2.627c-.751 0-1.275.311-1.912.948-.606.606-.797 1.136-.8 1.767a2.712 2.712 0 1 0 5.427-.003A2.713 2.713 0 0 0 6.38 2.627h-.003Z\"\n          fill=\"#1773EB\"\n        />\n        <path\n          d=\"M3.628 18.639c0 .748.311 1.275.948 1.912.606.606 1.136.8 1.767.8a2.703 2.703 0 1 0-.017-5.408 2.703 2.703 0 0 0-2.695 2.704v-.008h-.003Z\"\n          fill=\"#E44F20\"\n        />\n      </g>\n      <defs>\n        <clipPath id=\"a\">\n          <path fill=\"#fff\" d=\"M0 0h24v24H0z\" />\n        </clipPath>\n      </defs>\n    </>\n  ),\n});\n","import React from 'react';\nimport { SkeletonContainer, SkeletonText } from '@contentful/f36-skeleton';\nimport tokens from '@contentful/f36-tokens';\nimport { getNavbarItemSkeletonStyles } from './NavbarItem.styles';\n\nexport const NavbarItemSkeleton = ({\n  estimatedWidth,\n}: {\n  estimatedWidth: number;\n}) => {\n  const styles = getNavbarItemSkeletonStyles();\n\n  return (\n    <SkeletonContainer\n      className={styles.root}\n      svgWidth={estimatedWidth}\n      svgHeight={40}\n      backgroundColor={tokens.gray800}\n      foregroundColor={tokens.gray700}\n    >\n      <SkeletonText\n        lineHeight={6}\n        numberOfLines={1}\n        offsetTop={7}\n        radiusX={tokens.borderRadiusSmall}\n        radiusY={tokens.borderRadiusSmall}\n      />\n    </SkeletonContainer>\n  );\n};\n","import React from 'react';\nimport { cx } from 'emotion';\nimport { getNavbarMenuItemStyles } from './NavbarMenuItem.styles';\nimport { Menu, type MenuItemProps } from '@contentful/f36-menu';\nimport {\n  NavbarItemIcon,\n  type NavbarItemIconProps,\n} from '../NavbarItemIcon/NavbarItemIcon';\nimport { ExternalLinkIcon } from '@contentful/f36-icons';\nimport type {\n  ExpandProps,\n  PolymorphicComponent,\n  PolymorphicProps,\n} from '@contentful/f36-core';\n\nconst NAVBAR_MENU_ITEM_DEFAULT_TAG = 'button';\n\ntype NavbarMenuItemOwnProps = {\n  children?: null;\n  title: string;\n  icon?: NavbarItemIconProps['icon'];\n  as?: React.ElementType;\n} & Omit<MenuItemProps, 'children' | 'as'>;\n\nexport type NavbarMenuItemProps<\n  E extends React.ElementType = typeof NAVBAR_MENU_ITEM_DEFAULT_TAG,\n> = PolymorphicProps<NavbarMenuItemOwnProps, E>;\n\nfunction _NavbarMenuItem(\n  props: NavbarMenuItemProps<React.ElementType>,\n  ref: React.Ref<any>,\n) {\n  const {\n    as: Comp = NAVBAR_MENU_ITEM_DEFAULT_TAG,\n    icon,\n    title,\n    className,\n    ...otherProps\n  } = props;\n  const styles = getNavbarMenuItemStyles();\n\n  const itemIsExternalLink = isExternalLink(\n    props as unknown as NavbarMenuItemProps<'a'>,\n  );\n\n  return (\n    <Menu.Item\n      {...otherProps}\n      ref={ref}\n      as={Comp as MenuItemProps['as']}\n      className={cx(styles.root, className)}\n    >\n      {icon ? (\n        <NavbarItemIcon icon={icon} variant=\"secondary\" />\n      ) : (\n        itemIsExternalLink && externalIcon\n      )}\n      <span>{title}</span>\n      {icon && itemIsExternalLink ? externalIcon : null}\n    </Menu.Item>\n  );\n}\n\nconst externalIcon = (\n  <NavbarItemIcon icon={<ExternalLinkIcon />} variant=\"muted\" />\n);\n\nconst isExternalLink = (props: NavbarMenuItemProps<'a'>) =>\n  props.as === 'a' && props.target === '_blank';\n\nexport const NavbarMenuItem: PolymorphicComponent<\n  ExpandProps<NavbarMenuItemOwnProps>,\n  typeof NAVBAR_MENU_ITEM_DEFAULT_TAG\n> = React.forwardRef(_NavbarMenuItem);\n","import { css } from 'emotion';\n\nexport const getNavbarMenuItemStyles = () => ({\n  root: css({\n    display: 'flex',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n  }),\n});\n","import React from 'react';\nimport { Menu } from '@contentful/f36-menu';\nimport {\n  SkeletonBodyText,\n  SkeletonContainer,\n  SkeletonImage,\n} from '@contentful/f36-skeleton';\nimport { Flex } from '@contentful/f36-core';\n\nimport tokens from '@contentful/f36-tokens';\n\nexport const NavbarMenuItemSkeleton = ({\n  ariaLabel,\n}: {\n  ariaLabel?: string;\n}) => (\n  <Menu.Item>\n    <Flex alignItems=\"center\" gap={tokens.spacingXs}>\n      <SkeletonContainer svgHeight={16} svgWidth={18}>\n        <SkeletonImage width={16} height={16} />\n      </SkeletonContainer>\n      <SkeletonContainer svgHeight={16} svgWidth={190} ariaLabel={ariaLabel}>\n        <SkeletonBodyText numberOfLines={1} />\n      </SkeletonContainer>\n    </Flex>\n  </Menu.Item>\n);\n","import React from 'react';\nimport { getNavbarSwitcherStyles } from './NavbarSwitcher.styles';\nimport {\n  Flex,\n  type CommonProps,\n  type PropsWithHTMLElement,\n  type ExpandProps,\n} from '@contentful/f36-core';\nimport { MenuIcon } from '@contentful/f36-icons';\nimport { cx } from 'emotion';\nimport { ContentfulLogoIcon } from '../icons';\n\ntype NavbarSwitcherOwnProps = CommonProps & {\n  children?: React.ReactNode;\n  /**\n   * Will be displayed instead of the default Contentful logo\n   */\n  logo?: React.ReactNode;\n};\n\nexport type NavbarSwitcherProps = PropsWithHTMLElement<\n  NavbarSwitcherOwnProps,\n  'button'\n>;\n\nfunction _NavbarSwitcher(\n  props: ExpandProps<NavbarSwitcherProps>,\n  ref: React.Ref<HTMLButtonElement>,\n) {\n  const {\n    children,\n    className,\n    logo,\n    testId = 'cf-ui-navbar-switcher',\n    ...otherProps\n  } = props;\n  const styles = getNavbarSwitcherStyles();\n\n  return (\n    <Flex\n      {...otherProps}\n      as=\"button\"\n      ref={ref}\n      className={cx(styles.root, className)}\n      testId={testId}\n      alignItems=\"center\"\n      fullHeight\n      gap=\"spacingXs\"\n    >\n      {logo || <ContentfulLogoIcon />}\n      <MenuIcon className={styles.menuIcon} size=\"small\" variant=\"white\" />\n      <Flex as=\"ul\" alignItems=\"center\" className={styles.breadcrumbs}>\n        {children}\n      </Flex>\n    </Flex>\n  );\n}\n\nexport const NavbarSwitcher = React.forwardRef(_NavbarSwitcher);\n","import { css } from 'emotion';\nimport tokens from '@contentful/f36-tokens';\nimport { hexToRGBA } from '@contentful/f36-utils';\nimport { getGlowOnFocusStyles, mqs } from '../utils.styles';\n\nexport const getNavbarSwitcherStyles = () => ({\n  root: css(\n    {\n      // default button reset styles\n      margin: 0,\n      padding: 0,\n      background: 'none',\n      border: 'none',\n\n      color: tokens.gray300,\n      cursor: 'pointer',\n      fontSize: tokens.fontSizeS,\n      fontWeight: tokens.fontWeightMedium,\n      position: 'relative',\n      outline: 'none',\n      borderRadius: tokens.borderRadiusMedium,\n\n      '&:after': {\n        content: '\"\"',\n        border: '1px solid #353A41',\n        boxSizing: 'border-box',\n        height: '16px',\n        right: '-1px',\n        position: 'absolute',\n        width: 0,\n      },\n      '&:last-child:after': {\n        display: 'none',\n      },\n      '&:hover li': {\n        backgroundColor: hexToRGBA(tokens.colorWhite, 0.15),\n      },\n    },\n    getGlowOnFocusStyles(\n      `0px 0px 0px 2px ${tokens.colorBlack}, 0px 0px 0px 5px ${tokens.blue300}`,\n    ),\n  ),\n  breadcrumbs: css({\n    listStyleType: 'none',\n    margin: 0,\n    padding: 0,\n    position: 'relative',\n  }),\n  menuIcon: css({\n    display: 'none',\n    [mqs.medium]: {\n      display: 'block',\n    },\n  }),\n});\n","import React from 'react';\nimport {\n  SkeletonContainer,\n  SkeletonDisplayText,\n} from '@contentful/f36-skeleton';\nimport tokens from '@contentful/f36-tokens';\n\nexport const NavbarSwitcherSkeleton = ({\n  estimatedWidth,\n}: {\n  estimatedWidth: number;\n}) => (\n  <SkeletonContainer\n    svgWidth={estimatedWidth}\n    svgHeight={24}\n    backgroundColor={tokens.gray800}\n    foregroundColor={tokens.gray700}\n  >\n    <SkeletonDisplayText\n      lineHeight={24}\n      numberOfLines={1}\n      radiusX={12}\n      radiusY={12}\n    />\n  </SkeletonContainer>\n);\n","import { cx } from 'emotion';\nimport React from 'react';\nimport { getNavbarSearchStyles } from './NavbarSearch.styles';\nimport { SearchIcon } from '../icons';\nimport {\n  type CommonProps,\n  type ExpandProps,\n  Flex,\n  type PropsWithHTMLElement,\n} from '@contentful/f36-core';\n\ntype NavbarSearchOwnProps = CommonProps;\n\nexport type NavbarSearchProps = PropsWithHTMLElement<\n  NavbarSearchOwnProps,\n  'button'\n>;\n\nfunction _NavbarSearch(\n  props: ExpandProps<NavbarSearchProps>,\n  ref: React.Ref<HTMLButtonElement>,\n) {\n  const { className, testId = 'cf-ui-navbar-search', ...otherProps } = props;\n  const styles = getNavbarSearchStyles();\n\n  return (\n    <Flex\n      aria-label=\"Quick Search\"\n      {...otherProps}\n      as=\"button\"\n      ref={ref}\n      className={cx(styles.root, className)}\n      testId={testId}\n    >\n      <SearchIcon size=\"medium\" variant=\"white\" />\n    </Flex>\n  );\n}\n\nexport const NavbarSearch = React.forwardRef(_NavbarSearch);\n","import tokens from '@contentful/f36-tokens';\nimport { css } from 'emotion';\nimport { getGlowOnFocusStyles } from '../utils.styles';\n\nexport const getNavbarSearchStyles = () => ({\n  root: css(\n    {\n      // default button reset styles\n      margin: 0,\n      padding: 0,\n      background: 'none',\n      border: 'none',\n\n      cursor: 'pointer',\n      alignItems: 'center',\n      justifyContent: 'center',\n      minWidth: tokens.spacingL,\n      transition: `color ${tokens.transitionDurationShort} ${tokens.transitionEasingCubicBezier}`,\n      outline: 'none',\n      borderRadius: tokens.borderRadiusMedium,\n\n      '& svg': {\n        fill: tokens.gray300,\n        transition: `fill ${tokens.transitionDurationShort} ${tokens.transitionEasingCubicBezier}`,\n      },\n      '&:hover, & svg:hover': {\n        color: tokens.gray100,\n        fill: tokens.gray100,\n      },\n    },\n    getGlowOnFocusStyles(),\n  ),\n});\n","import React from 'react';\nimport { cx } from 'emotion';\nimport { getNavbarSwitcherItemStyles } from './NavbarSwitcherItem.styles';\nimport { NavbarEnvVariant } from './NavbarEnvVariant';\nimport {\n  Flex,\n  type CommonProps,\n  type ExpandProps,\n  type PropsWithHTMLElement,\n} from '@contentful/f36-core';\n\ntype NavbarSwitcherItemOwnProps = CommonProps & {\n  children?: React.ReactNode;\n  isCircle?: boolean;\n  envVariant?: 'master' | 'non-master';\n  isAlias?: boolean;\n};\n\nexport type NavbarSwitcherItemProps = PropsWithHTMLElement<\n  NavbarSwitcherItemOwnProps,\n  'li'\n>;\n\nfunction _NavbarSwitcherItem(\n  props: ExpandProps<NavbarSwitcherItemProps>,\n  ref: React.Ref<HTMLLIElement>,\n) {\n  const {\n    children,\n    isCircle,\n    className,\n    envVariant,\n    isAlias,\n    testId = 'cf-ui-navbar-switcher-item',\n    ...otherProps\n  } = props;\n  const styles = getNavbarSwitcherItemStyles();\n  const classes = cx(styles.breadcrumbsItem, className, {\n    [styles.breadcrumbsItemCircle]: isCircle,\n    [styles.breadcrumbsItemEnvMaster]: envVariant === 'master',\n    [styles.breadcrumbsItemEnvNonMaster]: envVariant === 'non-master',\n  });\n\n  return (\n    <li {...otherProps} ref={ref} className={classes} data-test-id={testId}>\n      <Flex fullHeight justifyContent=\"center\" alignItems=\"center\">\n        {envVariant && <NavbarEnvVariant isAlias={isAlias} />}\n        <span>{children}</span>\n      </Flex>\n    </li>\n  );\n}\n\nexport const NavbarSwitcherItem = React.forwardRef(_NavbarSwitcherItem);\n","import { css } from 'emotion';\nimport tokens from '@contentful/f36-tokens';\nimport { hexToRGBA } from '@contentful/f36-utils';\nimport { mqs } from '../utils.styles';\n\nconst mobileIcon = {\n  display: 'none',\n  '&:first-child': {\n    display: 'block',\n  },\n\n  [mqs.medium]: {\n    display: 'block',\n    '&:first-child': {\n      display: 'none',\n    },\n  },\n};\n\nexport const getNavbarSwitcherItemStyles = () => ({\n  breadcrumbsItem: css({\n    position: 'relative',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: hexToRGBA(tokens.gray100, 0.1),\n    boxShadow: `0px 0px 0px 2px ${tokens.colorBlack}`,\n    display: 'inline-flex',\n    margin: 0,\n    minWidth: 0,\n    padding: `0 ${tokens.spacingXs}`,\n    height: tokens.spacingL,\n    borderRadius: '3rem',\n    zIndex: 2,\n    transition: `background-color ${tokens.transitionDurationShort} ${tokens.transitionEasingCubicBezier}`,\n    whiteSpace: 'nowrap',\n    '&:not(:first-child)': {\n      clipPath: `path('M0 24C6 24 10 18 10 10C10 5 6 0 0 0H400C400 0 400 5 400 24H0Z')`,\n    },\n    '&:first-child': {\n      minWidth: '24px',\n    },\n    '&:nth-child(2)': {\n      zIndex: 1,\n      left: `-${tokens.spacingXs}`,\n      paddingLeft: tokens.spacingM,\n      borderRadius: `0 3rem 3rem 0`,\n      span: {\n        maxWidth: '80px',\n        textOverflow: 'ellipsis',\n        overflow: 'hidden',\n        [mqs.large]: {\n          maxWidth: '100%',\n        },\n      },\n    },\n    '&:nth-child(3)': {\n      left: `-${tokens.spacingM}`,\n      paddingLeft: tokens.spacingM,\n      borderRadius: `0 3rem 3rem 0`,\n      fontFamily: tokens.fontStackMonospace,\n      fontSize: tokens.fontSizeS,\n      fontWeight: tokens.fontWeightMedium,\n      zIndex: 0,\n      span: {\n        maxWidth: '40px',\n        textOverflow: 'ellipsis',\n        overflow: 'hidden',\n        [mqs.large]: {\n          maxWidth: '100%',\n        },\n      },\n      '> div': {\n        [mqs.medium]: {\n          gap: tokens.spacing2Xs,\n        },\n      },\n    },\n  }),\n  breadcrumbsItemCircle: css({\n    borderRadius: '50%',\n    color: tokens.gray400,\n    padding: 0,\n    display: 'flex',\n    justifyContent: 'center',\n    fontSize: '11px',\n    width: tokens.spacingL,\n    height: tokens.spacingL,\n  }),\n  breadcrumbsItemEnvMaster: css({\n    color: tokens.green400,\n    ' svg': {\n      ...mobileIcon,\n      fill: tokens.green400,\n    },\n  }),\n  breadcrumbsItemEnvNonMaster: css({\n    color: tokens.orange400,\n    svg: {\n      ...mobileIcon,\n      fill: tokens.orange400,\n    },\n  }),\n});\n","import React from 'react';\nimport { NavbarSwitcherItemProps } from './NavbarSwitcherItem';\nimport { CircleIcon } from '../icons';\nimport { EnvironmentAliasIcon, EnvironmentIcon } from '@contentful/f36-icons';\n\nexport type NavbarEnvVariantProps = Pick<NavbarSwitcherItemProps, 'isAlias'>;\n\nexport function NavbarEnvVariant({ isAlias }: NavbarEnvVariantProps) {\n  return (\n    <>\n      <CircleIcon key=\"mobile-icon\" size=\"tiny\" />\n      {isAlias ? (\n        <EnvironmentAliasIcon key=\"full-icon\" size=\"tiny\" />\n      ) : (\n        <EnvironmentIcon key=\"full-icon\" size=\"tiny\" />\n      )}\n    </>\n  );\n}\n","import React from 'react';\nimport { cx } from 'emotion';\nimport { getNavbarHelpStyles } from './NavbarHelp.styles';\nimport { HelpIcon } from '../icons';\nimport {\n  Flex,\n  type CommonProps,\n  type PropsWithHTMLElement,\n  type ExpandProps,\n} from '@contentful/f36-core';\nimport { NavbarMenu } from '../NavbarMenu/NavbarMenu';\n\ntype NavbarHelpOwnProps = CommonProps & {\n  children: React.ReactNode;\n};\n\nexport type NavbarHelpProps = PropsWithHTMLElement<\n  NavbarHelpOwnProps,\n  'button'\n>;\n\nfunction _NavbarHelp(\n  props: ExpandProps<NavbarHelpProps>,\n  ref: React.Ref<HTMLButtonElement>,\n) {\n  const {\n    children,\n    className,\n    testId = 'cf-ui-navbar-help-trigger',\n    ...otherProps\n  } = props;\n  const styles = getNavbarHelpStyles();\n\n  return (\n    <NavbarMenu\n      testId=\"cf-ui-navbar-help-menu\"\n      trigger={\n        <Flex\n          aria-label=\"Help Menu\"\n          {...otherProps}\n          as=\"button\"\n          ref={ref}\n          className={cx(styles.root, className)}\n          testId={testId}\n        >\n          <HelpIcon size=\"medium\" variant=\"white\" />\n          Help\n        </Flex>\n      }\n    >\n      {children}\n    </NavbarMenu>\n  );\n}\n\nexport const NavbarHelp = React.forwardRef(_NavbarHelp);\n","import { css } from 'emotion';\nimport tokens from '@contentful/f36-tokens';\nimport { getGlowOnFocusStyles, mqs } from '../utils.styles';\n\nexport const getNavbarHelpStyles = () => ({\n  root: css(\n    {\n      // default button reset styles\n      margin: 0,\n      padding: 0,\n      background: 'none',\n      border: 'none',\n\n      cursor: 'pointer',\n      alignItems: 'center',\n      justifyContent: 'center',\n      color: tokens.gray300,\n      fontSize: 0,\n      gap: 0,\n      minWidth: tokens.spacingL,\n      transition: `color ${tokens.transitionDurationShort} ${tokens.transitionEasingCubicBezier}`,\n      outline: 'none',\n      borderRadius: tokens.borderRadiusMedium,\n\n      [mqs.medium]: {\n        fontSize: tokens.fontSizeS,\n        gap: tokens.spacing2Xs,\n        fontWeight: tokens.fontWeightMedium,\n        marginRight: tokens.spacingXs,\n      },\n      '&:hover, &:hover svg': {\n        color: tokens.gray100,\n        fill: tokens.gray100,\n      },\n      '& svg': {\n        fill: tokens.gray300,\n        transition: `fill ${tokens.transitionDurationShort} ${tokens.transitionEasingCubicBezier}`,\n      },\n    },\n    getGlowOnFocusStyles(),\n  ),\n});\n","import React from 'react';\nimport { cx } from 'emotion';\nimport { getNavbarBadgeStyles } from './NavbarBadge.styles';\nimport type {\n  CommonProps,\n  ExpandProps,\n  PolymorphicComponent,\n  PolymorphicProps,\n} from '@contentful/f36-core';\n\nconst NAVBAR_BADGE_DEFAULT_TAG = 'div';\n\ntype NavbarBadgeOwnProps = CommonProps & {\n  children?: React.ReactNode;\n  as?: React.ElementType;\n};\n\nexport type NavbarBadgeProps<\n  E extends React.ElementType = typeof NAVBAR_BADGE_DEFAULT_TAG,\n> = PolymorphicProps<NavbarBadgeOwnProps, E>;\n\nfunction _NavbarBadge(\n  props: NavbarBadgeProps<React.ElementType>,\n  ref: React.Ref<any>,\n) {\n  const {\n    as: Comp = NAVBAR_BADGE_DEFAULT_TAG,\n    children,\n    className,\n    testId = 'cf-ui-navbar-badge',\n    ...otherProps\n  } = props;\n  const styles = getNavbarBadgeStyles();\n\n  return (\n    <Comp\n      {...otherProps}\n      ref={ref}\n      className={cx(styles.root, className)}\n      data-test-id={testId}\n    >\n      {children}\n    </Comp>\n  );\n}\n\nexport const NavbarBadge: PolymorphicComponent<\n  ExpandProps<NavbarBadgeOwnProps>,\n  typeof NAVBAR_BADGE_DEFAULT_TAG\n> = React.forwardRef(_NavbarBadge);\n","import { css } from 'emotion';\nimport tokens from '@contentful/f36-tokens';\n\nexport const getNavbarBadgeStyles = () => ({\n  root: css({\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    background: 'none',\n    border: `1px solid ${tokens.purple400}`,\n    margin: 0,\n    outline: 'none',\n    fontSize: tokens.fontSizeS,\n    lineHeight: tokens.lineHeightS,\n    fontWeight: tokens.fontWeightMedium,\n    textAlign: 'center',\n    padding: `0 ${tokens.spacingXs}`,\n    textDecoration: 'none',\n    color: `${tokens.purple400}!important`,\n    borderRadius: '1.75rem',\n  }),\n});\n","import React from 'react';\nimport { cx } from 'emotion';\nimport { getNavbarTopbarItemStyles } from './NavbarTopbarItem.styles';\nimport type {\n  CommonProps,\n  ExpandProps,\n  PolymorphicComponent,\n  PolymorphicProps,\n} from '@contentful/f36-core';\n\nconst NAVBAR_BADGE_DEFAULT_TAG = 'button';\n\ntype NavbarTopbarItemOwnProps = CommonProps & {\n  children?: React.ReactNode;\n};\n\nexport type NavbarTopbarItemProps<\n  E extends React.ElementType = typeof NAVBAR_BADGE_DEFAULT_TAG,\n> = PolymorphicProps<NavbarTopbarItemOwnProps, E>;\n\nfunction _NavbarTopbarItem<\n  E extends React.ElementType = typeof NAVBAR_BADGE_DEFAULT_TAG,\n>(props: NavbarTopbarItemProps<E>, ref: React.Ref<any>) {\n  const {\n    as: Comp = NAVBAR_BADGE_DEFAULT_TAG,\n    children,\n    className,\n    testId = 'cf-ui-navbar-topbar-item',\n    ...otherProps\n  } = props;\n  const styles = getNavbarTopbarItemStyles();\n\n  return (\n    <Comp\n      {...otherProps}\n      ref={ref}\n      className={cx(styles.root, className)}\n      data-test-id={testId}\n    >\n      {children}\n    </Comp>\n  );\n}\n\nexport const NavbarTopbarItem: PolymorphicComponent<\n  ExpandProps<NavbarTopbarItemOwnProps>,\n  typeof NAVBAR_BADGE_DEFAULT_TAG\n> = React.forwardRef(_NavbarTopbarItem);\n","import { css } from 'emotion';\nimport tokens from '@contentful/f36-tokens';\nimport { getGlowOnFocusStyles } from '../utils.styles';\n\nexport const getNavbarTopbarItemStyles = () => ({\n  root: css(\n    {\n      // default button reset styles\n      margin: 0,\n      background: 'none',\n      border: 'none',\n\n      cursor: 'pointer',\n      display: 'flex',\n      gap: tokens.spacing2Xs,\n      alignItems: 'center',\n      color: tokens.gray300,\n      padding: `0 ${tokens.spacing2Xs}`,\n      minHeight: tokens.spacingL,\n      fontSize: tokens.fontSizeS,\n      fontWeight: tokens.fontWeightMedium,\n      outline: 'none',\n      borderRadius: tokens.borderRadiusMedium,\n\n      '&:hover': {\n        color: tokens.gray100,\n      },\n      svg: {\n        fill: 'currentColor',\n      },\n    },\n    getGlowOnFocusStyles(),\n  ),\n});\n"]}